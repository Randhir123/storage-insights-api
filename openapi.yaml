---
openapi: 3.0.3
info:
  title: IBM Storage Insights REST APIs
  description: |-
    API to interact with IBM Storage Insights.

    You can review the documentation for the <a href="https://www.ibm.com/docs/en/storage-insights?topic=configuring-rest-api">REST API.</a>

    If you have requests for additional REST APIs for IBM Storage Insights, please share these at <a href="https://ideas.ibm.com">ideas.ibm.com</a>.
  license:
    name: IBM Corporation
    url: http://ibm.com
  version: v1
externalDocs:
  description: Privacy
  url: https://www.ibm.com/us-en/privacy
servers:
- url: /
  description: API base
tags:
- name: Token API
- name: Tenant APIs
  description: "Get alerts, audit logs, notifications and storage systems for a tenant."
- name: Storage System APIs
  description: "Get Storage System Details for storage system alerts, notification\
    \ etc."
- name: Storage System Components APIs
  description: "Get Storage System Component Details for Volume Groups, Volumes, Pools,\
    \ Managed Disks etc."
- name: Switch APIs
  description: Get Switch Component Details for FC Ports and Trunks.
- name: Fabric APIs
  description: "Get Fabric Component Details for FC ports, switches, trunks, and zone\
    \ sets."
- name: Host APIs
  description: "Get Host Component Details for datastores, drives, host bus adapters,\
    \ etc."
- name: Metrics APIs
  description: "Get performance and capacity metrics details for storage systems,\
    \ volumes, drives etc."
- name: FlashSystem grid APIs
  description: "Get FlashSystem grid details for storage systems, storage partitions\
    \ etc."
- name: General Groups APIs
  description: "Get General Groups Details for storage systems, volumes, pools etc."
- name: Applications APIs
  description: "Get Applications Details for storage systems, volumes, pools etc."
- name: Departments APIs
  description: "Get Departments Details for storage systems, volumes, pools etc."
- name: Workload APIs
paths:
  /restapi/v1/tenants/{tenant_uuid}:
    get:
      tags:
      - Tenant APIs
      summary: Returns details of a particular tenant.(This API is available for both
        IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/advisories:
    get:
      tags:
      - Tenant APIs
      summary: Returns advisories details for a particular tenant.(This API is available
        for both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: duration
        in: query
        description: Advisories requested for particular duration(end with 'm/M' if
          minute(s) or 'h/H' if hour(s)) or 'd/D' if day(s). Advisor retention duration
          is 180 days.
        schema:
          default: 180d
          type: string
      - name: severity
        in: query
        schema:
          type: array
          items:
            type: string
        examples:
          All Severities:
            description: No severity filter applied.
          critical:
            description: Advisor Requested for critical event.
            value: critical
          critical_acknowledged:
            description: Advisor Requested for critical-Acknowledged event.
            value: critical_acknowledged
          warning:
            description: Advisor Requested for warning event.
            value: warning
          warning_acknowledged:
            description: Advisor Requested for warning-Acknowledged event.
            value: warning_acknowledged
          info:
            description: Advisor Requested for informational event.
            value: info
          info_acknowledged:
            description: Advisor Requested for informational-Acknowledged event.
            value: info_acknowledged
          info_approved:
            description: Advisor Requested for informational-Approved event for **SOURCE
              'ADV_CALL_HOME'** only.
            value: info_approved
          info_declined:
            description: Advisor Requested for informational-Declined event for **SOURCE
              'ADV_CALL_HOME'** only.
            value: info_declined
      - name: source
        in: query
        schema:
          type: array
          items:
            type: string
        examples:
          All Sources:
            description: No source filter applied.
          HEALTH_CHECKER:
            description: Advisor Requested for HEALTH_CHECKER.
            value: HEALTH_CHECKER
          ADV_CALL_HOME:
            description: Advisor Requested for ADV_CALL_HOME.
            value: ADV_CALL_HOME
          AI_SUGGESTION:
            description: Advisor Requested for AI_SUGGESTION.
            value: AI_SUGGESTION
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoriesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/alerts:
    get:
      tags:
      - Tenant APIs
      summary: Returns all alerts for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: duration
        in: query
        description: "Alerts can be requested for a specific duration using 'd/D'\
          \ (days), 'h/H' (hours), or 'm/M' (minutes), e.g., '2d', '5h', or '30m';\
          \ maximum allowed duration is 28 days."
        schema:
          default: 28d
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: severity
        in: query
        description: "Alerts Requested for particular Severity(values are critical,\
          \ critical_acknowledged, warning, warning_acknowledged, info, info_acknowledged),\
          \ Multiple severity values can be passed."
        schema:
          type: array
          items:
            type: string
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: type
        in: query
        description: "Type for alerts. supported type: 'security'"
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerts'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications:
    get:
      tags:
      - Tenant APIs
      summary: Returns details of all applications for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}:
    get:
      tags:
      - Applications APIs
      summary: Returns details of an application for a particular tenant.
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/capacity-trend:
    get:
      tags:
      - Metrics APIs
      summary: Returns Capacity usage values for a application in a tenant.
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: type
        in: query
        description: The **'type'** query parameter allows only one capacity metric
          type per request(block|file|object)
        required: true
        schema:
          type: string
        examples:
          block_capacity:
            description: "Total block storage allocated to an application, including\
              \ volumes, host-assigned volumes, mirror copies, and replication targets."
            value: block_capacity
          file_capacity:
            description: "Total file-level storage allocated to an application, including\
              \ exported file systems, host-mounted file systems, and filesets with\
              \ defined quotas or underlying file system capacity."
            value: file_capacity
          object_capacity:
            description: "Total object storage used by all vaults in the application\
              \ and its subcomponents, excluding disk and dispersal overhead; applicable\
              \ only to IBM Cloud Object Storage."
            value: object_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/filesets:
    get:
      tags:
      - Applications APIs
      summary: Returns details of all filesets for a specified application for a particular
        tenant.
      description: |-
        Note:

        **To request subcomponent filesets details, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSetsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/filesets/{fileset_nk}:
    get:
      tags:
      - Applications APIs
      summary: Returns details about a specific fileset for a specified application
        for a particular tenant.
      description: |-
        Note:

        **To request subcomponent fileset details, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fileset_nk
        in: path
        description: The natural key of the filesets.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSetsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/hosts:
    get:
      tags:
      - Applications APIs
      summary: Returns details of all hosts for a particular application belonging
        to a tenant.
      description: |-
        Note:

        **To request subcomponent hosts details, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/hosts/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for applications hosts for a particular
        tenant.
      description: |-
        Note:

        **To request subcomponent hosts metrics, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          host_disk_read_io_rate:
            description: Hosts read I/O rate aggregated by drives.
            value: host_disk_read_io_rate
          host_disk_write_io_rate:
            description: Hosts write I/O rate aggregated by drives.
            value: host_disk_write_io_rate
          host_total_disk_io_rate:
            description: Hosts total I/O rate aggregated by drives.
            value: host_total_disk_io_rate
          host_disk_read_data_rate:
            description: Hosts read data rate aggregated by drives.
            value: host_disk_read_data_rate
          host_disk_write_data_rate:
            description: Hosts write data rate aggregated by drives.
            value: host_disk_write_data_rate
          host_disk_total_data_rate:
            description: Hosts total data rate aggregated by drives.
            value: host_disk_total_data_rate
          host_disk_read_response_time:
            description: Hosts read data rate aggregated by drives.
            value: host_disk_read_response_time
          host_disk_write_response_time:
            description: Hosts write data rate aggregated by drives.
            value: host_disk_write_response_time
          host_disk_total_response_time:
            description: Hosts total data rate aggregated by drives.
            value: host_disk_total_response_time
          total_cpu_utilization:
            description: The average percentage of time that the processors on a node
              are busy doing user tasks and system tasks.
            value: total_cpu_utilization
          total_memory_utilization:
            description: The average percentage of memory that is used on a node.
              This value includes the memory that is used for cache and buffer memory.
            value: total_memory_utilization
          host_drive_capacity:
            description: Hosts host drive capacity in bytes.
            value: host_drive_capacity
          host_mapped_san_capacity:
            description: Hosts mapped san capacity in bytes.
            value: host_mapped_san_capacity
          host_used_san_capacity:
            description: Hosts used san capacity in bytes.
            value: host_used_san_capacity
          host_available_drive_capacity:
            description: Hosts available drive capacity in bytes.
            value: host_available_drive_capacity
          host_file_system_capacity:
            description: Hosts file system capacity in bytes.
            value: host_file_system_capacity
          host_available_file_system_capacity:
            description: Hosts available file system capacity in bytes.
            value: host_available_file_system_capacity
          host_swap_capacity_bytes:
            description: Hosts host swap capacity bytes in bytes.
            value: host_swap_capacity_bytes
          host_ram:
            description: Hosts host ram in bytes.
            value: host_ram
          host_san_capacity:
            description: Hosts san capacity in bytes.
            value: host_san_capacity
          host_used_capacity:
            description: Hosts used capacity in bytes.
            value: host_used_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/hosts/{host_uuid}:
    get:
      tags:
      - Applications APIs
      summary: Returns details about a specific host for a particular application
        belonging to a tenant.
      description: |-
        Note:

        **To request subcomponent hosts details, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: host_uuid
        in: path
        description: The unique id of the host.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/hosts/{host_uuid}/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance and capacity metric values for applications hosts
        for a particular tenant.
      description: |-
        Note:

        **To request subcomponent hosts metrics, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: host_uuid
        in: path
        description: The unique identifier of the hosts in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          host_disk_read_io_rate:
            description: Hosts read I/O rate aggregated by drives.
            value: host_disk_read_io_rate
          host_disk_write_io_rate:
            description: Hosts write I/O rate aggregated by drives.
            value: host_disk_write_io_rate
          host_total_disk_io_rate:
            description: Hosts total I/O rate aggregated by drives.
            value: host_total_disk_io_rate
          host_disk_read_data_rate:
            description: Hosts read data rate aggregated by drives.
            value: host_disk_read_data_rate
          host_disk_write_data_rate:
            description: Hosts write data rate aggregated by drives.
            value: host_disk_write_data_rate
          host_disk_total_data_rate:
            description: Hosts total data rate aggregated by drives.
            value: host_disk_total_data_rate
          host_disk_read_response_time:
            description: Hosts read data rate aggregated by drives.
            value: host_disk_read_response_time
          host_disk_write_response_time:
            description: Hosts write data rate aggregated by drives.
            value: host_disk_write_response_time
          host_disk_total_response_time:
            description: Hosts total data rate aggregated by drives.
            value: host_disk_total_response_time
          total_cpu_utilization:
            description: The average percentage of time that the processors on a node
              are busy doing user tasks and system tasks.
            value: total_cpu_utilization
          total_memory_utilization:
            description: The average percentage of memory that is used on a node.
              This value includes the memory that is used for cache and buffer memory.
            value: total_memory_utilization
          host_drive_capacity:
            description: Hosts host drive capacity in bytes.
            value: host_drive_capacity
          host_mapped_san_capacity:
            description: Hosts mapped san capacity in bytes.
            value: host_mapped_san_capacity
          host_used_san_capacity:
            description: Hosts used san capacity in bytes.
            value: host_used_san_capacity
          host_available_drive_capacity:
            description: Hosts available drive capacity in bytes.
            value: host_available_drive_capacity
          host_file_system_capacity:
            description: Hosts file system capacity in bytes.
            value: host_file_system_capacity
          host_available_file_system_capacity:
            description: Hosts available file system capacity in bytes.
            value: host_available_file_system_capacity
          host_swap_capacity_bytes:
            description: Hosts host swap capacity bytes in bytes.
            value: host_swap_capacity_bytes
          host_ram:
            description: Hosts host ram in bytes.
            value: host_ram
          host_san_capacity:
            description: Hosts san capacity in bytes.
            value: host_san_capacity
          host_used_capacity:
            description: Hosts used capacity in bytes.
            value: host_used_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for a application in a tenant.
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by volumes.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by volumes.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by volumes.
            value: volume_overall_total_io_rate
          volume_read_data_rate:
            description: Storage system read data rate aggregated by volumes.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by volumes.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by volumes.
            value: volume_total_data_rate
          volume_read_response_time:
            description: Storage system read response time aggregated by volumes.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by volumes.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by volumes.
            value: volume_total_response_time
          chargeback_report_block_capacity:
            description: Applications chargeback report block capacity in bytes
            value: chargeback_report_block_capacity
          chargeback_report_used_capacity:
            description: Applications chargeback report used capacity in bytes
            value: chargeback_report_used_capacity
          chargeback_report_primary_capacity:
            description: Applications chargeback report primary capacity in bytes
            value: chargeback_report_primary_capacity
          chargeback_report_primary_used_capacity:
            description: Applications chargeback report primary used capacity in bytes
            value: chargeback_report_primary_used_capacity
          chargeback_report_vdisk_mirrors_capacity:
            description: Applications chargeback report vdisk mirrors capacity in
              bytes
            value: chargeback_report_vdisk_mirrors_capacity
          chargeback_report_vdisk_mirrors_used_capacity:
            description: Applications chargeback report vdisk mirrors used capacity
              in bytes
            value: chargeback_report_vdisk_mirrors_used_capacity
          chargeback_report_flashcopy_capacity:
            description: Applications chargeback report flashcopy capacity in bytes
            value: chargeback_report_flashcopy_capacity
          chargeback_report_flashcopy_used_capacity:
            description: Applications chargeback report flashcopy used capacity in
              bytes
            value: chargeback_report_flashcopy_used_capacity
          chargeback_report_remote_mirrors_capacity:
            description: Applications chargeback report remote mirrors capacity in
              bytes
            value: chargeback_report_remote_mirrors_capacity
          chargeback_report_remote_mirrors_used_capacity:
            description: Applications chargeback report remote mirrors used capacity
              in bytes
            value: chargeback_report_remote_mirrors_used_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/subcomponents:
    get:
      tags:
      - Applications APIs
      summary: Returns details of all subcomponents for an application.
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/subcomponents/{subcomponent_uuid}:
    get:
      tags:
      - Applications APIs
      summary: Returns details of an application for a particular tenant.
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: subcomponent_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/subcomponents/{subcomponent_uuid}/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for a subcomponent in an application.
      parameters:
      - name: subcomponent_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by volumes.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by volumes.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by volumes.
            value: volume_overall_total_io_rate
          volume_read_data_rate:
            description: Storage system read data rate aggregated by volumes.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by volumes.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by volumes.
            value: volume_total_data_rate
          volume_read_response_time:
            description: Storage system read response time aggregated by volumes.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by volumes.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by volumes.
            value: volume_total_response_time
          chargeback_report_block_capacity:
            description: Applications chargeback report block capacity in bytes
            value: chargeback_report_block_capacity
          chargeback_report_used_capacity:
            description: Applications chargeback report used capacity in bytes
            value: chargeback_report_used_capacity
          chargeback_report_primary_capacity:
            description: Applications chargeback report primary capacity in bytes
            value: chargeback_report_primary_capacity
          chargeback_report_primary_used_capacity:
            description: Applications chargeback report primary used capacity in bytes
            value: chargeback_report_primary_used_capacity
          chargeback_report_vdisk_mirrors_capacity:
            description: Applications chargeback report vdisk mirrors capacity in
              bytes
            value: chargeback_report_vdisk_mirrors_capacity
          chargeback_report_vdisk_mirrors_used_capacity:
            description: Applications chargeback report vdisk mirrors used capacity
              in bytes
            value: chargeback_report_vdisk_mirrors_used_capacity
          chargeback_report_flashcopy_capacity:
            description: Applications chargeback report flashcopy capacity in bytes
            value: chargeback_report_flashcopy_capacity
          chargeback_report_flashcopy_used_capacity:
            description: Applications chargeback report flashcopy used capacity in
              bytes
            value: chargeback_report_flashcopy_used_capacity
          chargeback_report_remote_mirrors_capacity:
            description: Applications chargeback report remote mirrors capacity in
              bytes
            value: chargeback_report_remote_mirrors_capacity
          chargeback_report_remote_mirrors_used_capacity:
            description: Applications chargeback report remote mirrors used capacity
              in bytes
            value: chargeback_report_remote_mirrors_used_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/vaults:
    get:
      tags:
      - Applications APIs
      summary: Returns details of all vaults for a specified application for a particular
        tenant.
      description: |-
        Note:

        **To request subcomponent vaults details, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/vaults/{vault_nk}:
    get:
      tags:
      - Applications APIs
      summary: Returns details of vault for a specified application for a particular
        tenant.
      description: |-
        Note:

        **To request subcomponent vault details, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: vault_nk
        in: path
        description: The natural key of the filesets.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/volumes:
    get:
      tags:
      - Applications APIs
      summary: Returns details of all volumes for a specified application for a particular
        tenant.
      description: |-
        Note:

        **To request subcomponent volumes details, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVolumeResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/volumes/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for applications volumes for a particular
        tenant.
      description: |-
        Note:

        **To request subcomponent volumes metrics, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by volumes.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by volumes.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by volumes.
            value: volume_overall_total_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by volumes.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by volumes.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by volumes.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by volumes.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by volumes.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by volumes.
            value: volume_total_data_rate
          volume_read_response_time:
            description: Storage system read response time aggregated by volumes.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by volumes.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by volumes.
            value: volume_total_response_time
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by volumes.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by volumes.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by volumes.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              volumes.
            value: volume_write_cache_delay_percentage
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by volumes.
            value: volume_host_time_percentage
          volume_utilization:
            description: Storage system utilization value aggregated by volumes.
            value: volume_utilization
          volume_normal_read_io_rate:
            description: Storage system normal read I/O rate for a volume.
            value: volume_normal_read_io_rate
          volume_normal_write_io_rate:
            description: Storage system normal write I/O rate for a volume.
            value: volume_normal_write_io_rate
          volume_normal_total_io_rate:
            description: Storage system normal total I/O rate for a volume.
            value: volume_normal_total_io_rate
          volume_sequential_read_io_rate:
            description: Storage system sequential read I/O rate for a volume.
            value: volume_sequential_read_io_rate
          volume_sequential_write_io_rate:
            description: Storage system sequential write I/O rate for a volume.
            value: volume_sequential_write_io_rate
          volume_sequential_total_io_rate:
            description: Storage system sequential total I/O rate for a volume.
            value: volume_sequential_total_io_rate
          volume_record_mode_reads_io_rate:
            description: Storage system record mode read I/O rate for a volume.
            value: volume_record_mode_reads_io_rate
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a volume.
            value: volume_disk_to_cache_transfer_rate
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a volume.
            value: volume_cache_to_disk_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a volume.
            value: volume_write_cache_delay_io_rate
          volume_high_performance_ficon_read:
            description: Storage system HPF read for a volume.
            value: volume_high_performance_ficon_read
          volume_high_performance_ficon_write:
            description: Storage system HPF write for a volume.
            value: volume_high_performance_ficon_write
          volume_high_performance_ficon_total:
            description: Storage system HPF total for a volume.
            value: volume_high_performance_ficon_total
          volume_pprc_transfer_rate_others:
            description: Storage system PPRC transfer rate for a volume.
            value: volume_pprc_transfer_rate_others
          volume_normal_read_io_cache_hits:
            description: Storage system normal read I/O cache hits for a volume.
            value: volume_normal_read_io_cache_hits
          volume_normal_write_io_cache_hits:
            description: Storage system normal write I/O cache hits for a volume.
            value: volume_normal_write_io_cache_hits
          volume_normal_total_io_cache_hits:
            description: Storage system normal total I/O cache hits for a volume.
            value: volume_normal_total_io_cache_hits
          volume_sequential_read_io_cache_hits:
            description: Storage system sequential read I/O cache hits for a volume.
            value: volume_sequential_read_io_cache_hits
          volume_sequential_write_io_cache_hits:
            description: Storage system sequential write I/O cache hits for a volume.
            value: volume_sequential_write_io_cache_hits
          volume_sequential_total_io_cache_hits:
            description: Storage system sequential total I/O cache hits for a volume.
            value: volume_sequential_total_io_cache_hits
          volume_record_mode_reads_cache_hits:
            description: Storage system record mode reads cache hits for a volume.
            value: volume_record_mode_reads_cache_hits
          volume_peak_read_response_time:
            description: Storage system peak read response time for a volume.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a volume.
            value: volume_peak_write_response_time
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a volume.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a volume.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a volume.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a volume.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a volume.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a volume.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a volume.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a volume.
            value: volume_dirty_writes_cache_hits
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a volume.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              volume.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              volume.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a volume.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a volume.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a volume.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a volume.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a volume.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a volume.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a volume.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a volume.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a volume.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a volume.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a volume.
            value: volume_fast_write_write_data_rate
          volume_read_ahead_cache_hits:
            description: Storage system read ahead cache hits for a volume.
            value: volume_read_ahead_cache_hits
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a volume.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a volume.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a volume.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a volume.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a volume.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a volume.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a volume.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a volume.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a volume.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a volume.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a volume.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a volume.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a volume.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a volume.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_prestage_io_rate:
            description: Storage system copy cache prestage I/O rate for a volume.
            value: volume_copy_cache_prestage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a volume.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a volume.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a volume.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_prestage_response_time:
            description: Storage system copy cache prestage response time for a volume.
            value: volume_copy_cache_prestage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a volume.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_percentage_high_performance_ficon:
            description: Storage system HDF percentage for a volume.
            value: volume_percentage_high_performance_ficon
          volume_npref_node_percentage:
            description: Storage system volume_non-preferred node percentage for a
              volume.
            value: volume_npref_node_percentage
          volume_cache_host_transfer_response_time:
            description: Storage system cache host transfer response time for a volume.
            value: volume_cache_host_transfer_response_time
          volume_unaligned_write_io_rate:
            description: Storage system unaligned write io rate for a volume.
            value: volume_unaligned_write_io_rate
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          reserved_volume_capacity:
            description: Storage system reserved volume capacity for a volume.
            value: reserved_volume_capacity
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
          capacity:
            description: Storage system capacity for a volume.
            value: capacity
          written_capacity:
            description: Storage system written capacity for a volume.
            value: written_capacity
          shortfall_percent:
            description: Storage system shortfall percentage.
            value: shortfall_percent
          safeguarded_used_capacity_percentage:
            description: Storage system used safeguarded used capacity percentage
              in bytes.
            value: safeguarded_used_capacity_percentage
          unused_capacity:
            description: Storage system unused capacity for a volume.
            value: unused_capacity
          safeguarded_capacity:
            description: Storage system used safeguarded capacity in bytes.
            value: safeguarded_capacity
          tier_0_flash_capacity:
            description: Storage system tier 0 flash capacity for a volume.
            value: tier_0_flash_capacity
          tier_1_flash_capacity:
            description: Storage system tier 1 flash capacity for a volume.
            value: tier_1_flash_capacity
          enterprise_hdd_capacity:
            description: Storage system enterprise hdd capacity for a volume.
            value: enterprise_hdd_capacity
          nearline_hdd_capacity:
            description: Storage system nearline hdd capacity for a volume.
            value: nearline_hdd_capacity
          tier_2_flash_capacity:
            description: Storage system tier 2 flash capacity for a volume.
            value: tier_2_flash_capacity
          tier_0_flash_available_space:
            description: Storage system tier 0 flash available capacity for a volume.
            value: tier_0_flash_available_capacity
          tier_1_flash_available_space:
            description: Storage system tier 1 flash available capacity for a volume.
            value: tier_1_flash_available_capacity
          tier_2_flash_available_space:
            description: Storage system tier 2 flash available capacity for a volume.
            value: tier_2_flash_available_capacity
          enterprise_hdd_capacity_percentage:
            description: Storage system enterprise hdd capacity percentage for a volume.
            value: enterprise_hdd_capacity_percentage
          nearline_hdd_capacity_percentage:
            description: Storage system nearline hdd capacity percentage for a volume.
            value: nearline_hdd_capacity_percentage
          provisioned_capacity_percentage:
            description: Storage system provisioned capacity percentage for a volume.
            value: provisioned_capacity_percentage
          total_compression_savings_percentage:
            description: Storage system total compression savings percentage.
            value: total_compression_savings_percentage
      requestBody:
        description: "Pass an array of natural keys to fetch specified volumes' metrics\
          \ details. Maximum 30 natural keys are allowed. To retrieve metrics details\
          \ for all volumes pass an empty array, e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/applications/{application_uuid}/volumes/{volume_nk}:
    get:
      tags:
      - Applications APIs
      summary: Returns details about a specific volume for a specified application
        for a particular tenant.
      description: |-
        Note:

        **To request subcomponent volumes details, use this same API with the subcomponent UUID in place of the `applicationUUID`.**
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: volume_nk
        in: path
        description: The natural key of the volume.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVolumeResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/auditlogs:
    get:
      tags:
      - Tenant APIs
      summary: Returns all audit logs for a particular tenant.(This API is available
        for both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream: {}
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/departments:
    get:
      tags:
      - Tenant APIs
      summary: Returns details of all Departments for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/departments/{department_uuid}:
    get:
      tags:
      - Departments APIs
      summary: Returns details of a department for a particular tenant.
      parameters:
      - name: department_uuid
        in: path
        description: The unique identifier of the department in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/departments/{department_uuid}/applications:
    get:
      tags:
      - Departments APIs
      summary: Returns details of all applications for a department.
      parameters:
      - name: department_uuid
        in: path
        description: The unique identifier of the department in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/departments/{department_uuid}/applications/{application_uuid}:
    get:
      tags:
      - Departments APIs
      summary: Returns details of a application for a particular department.
      parameters:
      - name: application_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: department_uuid
        in: path
        description: The unique identifier of the department in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/departments/{department_uuid}/subdepartments:
    get:
      tags:
      - Departments APIs
      summary: Returns details of all subdepartments for a departments.
      parameters:
      - name: department_uuid
        in: path
        description: The unique identifier of the department in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsResponse'
        "500":
          description: Unexpected error.
        "400":
          description: Operation exception. Check the response body for details.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: URL not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/departments/{department_uuid}/subdepartments/{subdepartment_uuid}:
    get:
      tags:
      - Departments APIs
      summary: Returns details of a subdepartment for a particular department.
      parameters:
      - name: department_uuid
        in: path
        description: The unique identifier of the department in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: subdepartment_uuid
        in: path
        description: The unique identifier of the subdepartment in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsResponse'
        "500":
          description: Unexpected error.
        "400":
          description: Operation exception. Check the response body for details.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: URL not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics:
    get:
      tags:
      - Tenant APIs
      summary: Returns details of all fabrics for a particular tenant.(This API is
        available for both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}:
    get:
      tags:
      - Fabric APIs
      summary: Returns details of a fabric for a particular tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}/fc-ports:
    get:
      tags:
      - Fabric APIs
      summary: Returns details of all fc ports for a specified fabric for a particular
        tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricFCPortsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}/fc-ports/{fc_port_nk}:
    get:
      tags:
      - Fabric APIs
      summary: Returns details about a specific fc ports for a specified fabric for
        a particular tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: fc_port_nk
        in: path
        description: The natural key of the fc port.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricFCPortsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}/switches:
    get:
      tags:
      - Fabric APIs
      summary: Returns details of all switches for a specified fabric for a particular
        tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwitchesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}/switches/{switch_nk}:
    get:
      tags:
      - Fabric APIs
      summary: Returns details about a specific switch for a specified fabric for
        a particular tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: switch_nk
        in: path
        description: The natural key of the switch.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwitchesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}/trunks:
    get:
      tags:
      - Fabric APIs
      summary: Returns details of all trunks for a specified fabric for a particular
        tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunksResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}/trunks/{trunk_nk}:
    get:
      tags:
      - Fabric APIs
      summary: Returns details about a specific trunk for a specified fabric for a
        particular tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: trunk_nk
        in: path
        description: The natural key of the trunk.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunksResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}/zone-sets:
    get:
      tags:
      - Fabric APIs
      summary: Returns details of all zone sets for a specified fabric for a particular
        tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricZoneSetsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/fabrics/{fabric_uuid}/zone-sets/{zone_set_nk}:
    get:
      tags:
      - Fabric APIs
      summary: Returns details about a specific fc ports for a specified fabric for
        a particular tenant.
      parameters:
      - name: fabric_uuid
        in: path
        description: The unique identifier of the fabric in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: zone_set_nk
        in: path
        description: The natural key of the zone set.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricZoneSetsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/flashgrids:
    get:
      tags:
      - Tenant APIs
      summary: Returns details of all FlashSystem grid for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashSystemGridsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/flashgrids/{si_flash_grid_uuid}:
    get:
      tags:
      - FlashSystem grid APIs
      summary: Returns details of a FlashSystem grid for a particular tenant.
      parameters:
      - name: si_flash_grid_uuid
        in: path
        description: "The unique identifier of the FlashSystem grid in IBM Storage\
          \ Insights; this is not the FlashSystem grid ID value displayed in the IBM\
          \ Storage Insights Carbon UI; you can retrieve the correct FlashSystem grid\
          \ UUID using the /restapi/v1/tenants/{tenant_uuid}/flashgrids REST API."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashSystemGridsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/flashgrids/{si_flash_grid_uuid}/advisories:
    get:
      tags:
      - FlashSystem grid APIs
      summary: Returns details of advisories for a specified FlashSystem grid for
        a particular tenant
      parameters:
      - name: si_flash_grid_uuid
        in: path
        description: "The unique identifier of the FlashSystem grid in IBM Storage\
          \ Insights; this is not the FlashSystem grid ID value displayed in the IBM\
          \ Storage Insights Carbon UI; you can retrieve the correct FlashSystem grid\
          \ UUID using the /restapi/v1/tenants/{tenant_uuid}/flashgrids REST API."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: source
        in: query
        schema:
          type: array
          items:
            type: string
        examples:
          All Sources:
            description: No source filter applied.
          AI_SUGGESTION:
            description: Advisor Requested for AI_SUGGESTION.
            value: AI_SUGGESTION
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashSystemGridAdvisorResponses'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/flashgrids/{si_flash_grid_uuid}/storage-partitions:
    get:
      tags:
      - FlashSystem grid APIs
      summary: Returns details of all storage partitions for a specified FlashSystem
        grid for a particular tenant.
      parameters:
      - name: si_flash_grid_uuid
        in: path
        description: "The unique identifier of the FlashSystem grid in IBM Storage\
          \ Insights; this is not the FlashSystem grid ID value displayed in the IBM\
          \ Storage Insights Carbon UI; you can retrieve the correct FlashSystem grid\
          \ UUID using the /restapi/v1/tenants/{tenant_uuid}/flashgrids REST API."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePartitionsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/flashgrids/{si_flash_grid_uuid}/storage-systems:
    get:
      tags:
      - FlashSystem grid APIs
      summary: Returns details of all storage systems for a specified FlashSystem
        grid for a particular tenant.
      parameters:
      - name: si_flash_grid_uuid
        in: path
        description: "The unique identifier of the FlashSystem grid in IBM Storage\
          \ Insights; this is not the FlashSystem grid ID value displayed in the IBM\
          \ Storage Insights Carbon UI; you can retrieve the correct FlashSystem grid\
          \ UUID using the /restapi/v1/tenants/{tenant_uuid}/flashgrids REST API."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashSystemGridStorageSystemsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups:
    get:
      tags:
      - Tenant APIs
      summary: Returns details of all general groups for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups/{general_group_uuid}:
    get:
      tags:
      - General Groups APIs
      summary: Returns details of a general group for a particular tenant.
      parameters:
      - name: general_group_uuid
        in: path
        description: The unique identifier of the general groups in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups/{general_group_uuid}/subgroups/{subgroup_uuid}:
    get:
      tags:
      - General Groups APIs
      summary: Returns details of a subgroup for a particular application.
      parameters:
      - name: general_group_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: subgroup_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups/{general_group_uuid}/summary:
    get:
      tags:
      - General Groups APIs
      summary: Returns details of a general group for a particular tenant.
      parameters:
      - name: general_group_uuid
        in: path
        description: The unique identifier of the general groups in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups/{general_group_uuid}/{component}:
    get:
      tags:
      - General Groups APIs
      summary: Returns details of a general group internal component for a particular
        tenant.
      parameters:
      - name: component
        in: path
        description: 'Specifies the type of internal component resource to fetch details
          for. Accepted values are:'
        required: true
        schema:
          type: string
        examples:
          storage-system:
            value: storage_system
          switches:
            value: switches
          fabrics:
            value: fabrics
          hosts:
            value: servers
          volumes:
            value: volumes
          nodes:
            value: nodes
          host-connections:
            value: host-connections
          storage-fc-ports:
            value: storage-fc-ports
          ip-ports:
            value: ip-ports
          raid-arrays:
            value: raid-arrays
          enclosures:
            value: enclosures
          pools:
            value: pools
          drives:
            value: drives
          device-adapters:
            value: device-adapters
          managed-disks:
            value: managed-disks
          io-groups:
            value: io-groups
          filesystems:
            value: filesystems
          filesets:
            value: filesets
          shares:
            value: shares
          host-bus-adapters:
            value: host-bus-adapters
          vmdks:
            value: vmdks
          host-drives:
            value: host-drives
          datastores:
            value: datastores
          trunks:
            value: trunks
          switch-fc-ports:
            value: switch-fc-ports
      - name: general_group_uuid
        in: path
        description: The unique identifier of the general groups in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: storage-type
        in: query
        description: "The type of the storage system. Accepted values are block, filer\
          \ and object. If not specified, it displays all storage systems added to\
          \ the tenant."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups/{general_group_uuid}/{component}/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns details of a general group internal component for a particular
        tenant.
      parameters:
      - name: component
        in: path
        description: 'Specifies the type of internal component resource to fetch details
          for. Accepted values are:'
        required: true
        schema:
          type: string
        examples:
          volumes:
            value: volumes
          nodes:
            value: nodes
          host-connections:
            value: host-connections
          storage-fc-ports:
            value: storage-fc-ports
          ip-ports:
            value: ip-ports
          raid-arrays:
            value: raid-arrays
          pools:
            value: pools
          drives:
            value: drives
          device-adapters:
            value: device-adapters
          managed-disks:
            value: managed-disks
          io-groups:
            value: io-groups
          filesystems:
            value: filesystems
          filesets:
            value: filesets
          shares:
            value: shares
          host-bus-adapters:
            value: host-bus-adapters
          vmdks:
            value: vmdks
          host-drives:
            value: host-drives
          datastores:
            value: datastores
          trunks:
            value: trunks
          switch-fc-ports:
            value: switch-fc-ports
      - name: general_group_uuid
        in: path
        description: The unique identifier of the general groups in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by volumes.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by volumes.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by volumes.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by volumes.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by volumes.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by volumes.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by volumes.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by volumes.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by volumes.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by volumes.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by volumes.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by volumes.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by volumes.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by volumes.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              volumes.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by volumes.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by volumes.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by volumes.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by volumes.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by volumes.
            value: volume_host_time_percentage
          volume_utilization:
            description: Storage system utilization value aggregated by volumes.
            value: volume_utilization
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          port_send_io_rate:
            description: Storage system port send I/O rate aggregated by Fibre Channel
              ports.
            value: port_send_io_rate
          port_receive_io_rate:
            description: Storage system port receive I/O rate aggregated by Fibre
              Channel ports.
            value: port_receive_io_rate
          total_port_io_rate:
            description: Storage system port total I/O rate aggregated by Fibre Channel
              ports.
            value: total_port_io_rate
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_response_time:
            description: Storage system port send response time aggregated by Fibre
              Channel ports.
            value: port_send_response_time
          port_receive_response_time:
            description: Storage system port receive response time aggregated by Fibre
              Channel ports.
            value: port_receive_response_time
          port_total_response_time:
            description: Storage system port total response time aggregated by Fibre
              Channel ports.
            value: port_total_response_time
          ip_replication_transfer_send_size:
            description: Storage system IP replication transfer send size.
            value: ip_replication_transfer_send_size
          ip_replication_transfer_receive_size:
            description: Storage system IP replication transfer receive size.
            value: ip_replication_transfer_receive_size
          ip_replication_transfer_total_size:
            description: Storage system IP replication transfer total size.
            value: ip_replication_transfer_total_size
          ip_replication_latency:
            description: Storage system IP replication latency.
            value: ip_replication_latency
          ip_replication_to_remote_node_send_data_rate:
            description: Storage system IP replication to remote node send data rate.
            value: ip_replication_to_remote_node_send_data_rate
          ip_replication_to_remote_node_receive_data_rate:
            description: Storage system IP replication to remote node receive data
              rate.
            value: ip_replication_to_remote_node_receive_data_rate
          ip_replication_to_remote_node_re_send_data_rate:
            description: Storage system IP replication to remote node re-send data
              rate.
            value: ip_replication_to_remote_node_re_send_data_rate
          ip_replication_compressed_send_data_rate:
            description: Storage system IP replication compressed send data rate.
            value: ip_replication_compressed_send_data_rate
          ip_replication_compressed_receive_data_rate:
            description: Storage system IP replication compressed receive data rate.
            value: ip_replication_compressed_receive_data_rate
          physical_node_send_data_rate:
            description: Storage system physical node send data rate aggregated for
              all nodes.
            value: physical_node_send_data_rate
          physical_node_receive_data_rate:
            description: Storage system physical node receive data rate aggregated
              for all nodes.
            value: physical_node_receive_data_rate
          physical_node_total_data_rate:
            description: Storage system physical node total data rate aggregated for
              all nodes.
            value: physical_node_total_data_rate
          node_logical_send_data_rate:
            description: Storage system node logical send data rate aggregated for
              all nodes.
            value: node_logical_send_data_rate
          node_logical_receive_data_rate:
            description: Storage system node logical receive data rate aggregated
              for all nodes.
            value: node_logical_receive_data_rate
          node_logical_total_data_rate:
            description: Storage system node logical total data rate aggregated for
              all nodes.
            value: node_logical_total_data_rate
          cpu_utilization:
            description: Storage system cpu utilization aggregated for all nodes.
            value: cpu_utilization
          gc_moved_size:
            description: Storage system garbage collection moved size aggregated for
              all nodes.
            value: gc_moved_size
          node_read_cache_fullness:
            description: Storage system node read cache fullness aggregated for all
              nodes.
            value: node_read_cache_fullness
          node_write_cache_fullness:
            description: Storage system node write cache fullness aggregated for all
              nodes.
            value: node_write_cache_fullness
          max_node_read_cache_fullness:
            description: Storage system max node read cache fullness aggregated for
              all nodes.
            value: max_node_read_cache_fullness
          max_node_write_cache_fullness:
            description: Storage system max node write cache fullness aggregated for
              all nodes.
            value: max_node_write_cache_fullness
          filesystem_and_node_read_io:
            description: Storage file system node read I/O.
            value: filesystem_and_node_read_io
          filesystem_and_node_write_io:
            description: Storage file system node write I/O.
            value: filesystem_and_node_write_io
          filesystem_and_node_total_io:
            description: Storage file system node total I/O.
            value: filesystem_and_node_total_io
          filesystem_and_node_bytes_read:
            description: Storage file system node read bytes.
            value: filesystem_and_node_bytes_read
          filesystem_and_node_bytes_write:
            description: Storage file system node write bytes.
            value: filesystem_and_node_bytes_write
          filesystem_and_node_bytes_total:
            description: Storage file system node total bytes.
            value: filesystem_and_node_bytes_total
          filesystem_read_response_time:
            description: Storage file system read response time.
            value: filesystem_read_response_time
          filesystem_write_response_time:
            description: Storage file system write response time.
            value: filesystem_write_response_time
          filesystem_total_response_time:
            description: Storage file system total response time.
            value: filesystem_total_response_time
          filesystem_read_transfer_size:
            description: Storage file system read transfer size.
            value: filesystem_read_transfer_size
          filesystem_write_transfer_size:
            description: Storage file system write transfer size.
            value: filesystem_write_transfer_size
          filesystem_total_transfer_size:
            description: Storage file system total transfer size.
            value: filesystem_total_transfer_size
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
          usable_capacity:
            description: Storage system total usable capacity.
            value: usable_capacity
          total_provisioned_capacity:
            description: Storage system total provisioned capacity.
            value: total_provisioned_capacity
          shortfall_percent:
            description: Storage system shortfall percentage.
            value: shortfall_percent
          recent_growth:
            description: Storage system recent growth in bytes.
            value: recent_growth
          recent_fill_rate:
            description: Storage system recent fill rate in bytes.
            value: recent_fill_rate
          temperature_c:
            description: Storage system's temperature in Celsius.
            value: temperature_c
          temperature_f:
            description: Storage system's temperature in Fahrenheit.
            value: temperature_f
          total_power_w:
            description: Storage system's total power.
            value: total_power_w
          power_efficiency:
            description: Storage system's power efficiency.
            value: power_efficiency
          co2_emission:
            description: Storage system's carbon emission.
            value: co2_emission
          volume_normal_read_io_rate:
            description: Storage system normal read I/O rate for a volume.
            value: volume_normal_read_io_rate
          volume_normal_write_io_rate:
            description: Storage system normal write I/O rate for a volume.
            value: volume_normal_write_io_rate
          volume_normal_total_io_rate:
            description: Storage system normal total I/O rate for a volume.
            value: volume_normal_total_io_rate
          volume_sequential_read_io_rate:
            description: Storage system sequential read I/O rate for a volume.
            value: volume_sequential_read_io_rate
          volume_sequential_write_io_rate:
            description: Storage system sequential write I/O rate for a volume.
            value: volume_sequential_write_io_rate
          volume_sequential_total_io_rate:
            description: Storage system sequential total I/O rate for a volume.
            value: volume_sequential_total_io_rate
          volume_record_mode_reads_io_rate:
            description: Storage system record mode read I/O rate for a volume.
            value: volume_record_mode_reads_io_rate
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a volume.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a volume.
            value: volume_write_cache_delay_io_rate
          volume_high_performance_ficon_read:
            description: Storage system HPF read for a volume.
            value: volume_high_performance_ficon_read
          volume_high_performance_ficon_write:
            description: Storage system HPF write for a volume.
            value: volume_high_performance_ficon_write
          volume_high_performance_ficon_total:
            description: Storage system HPF total for a volume.
            value: volume_high_performance_ficon_total
          volume_pprc_transfer_rate_others:
            description: Storage system PPRC transfer rate for a volume.
            value: volume_pprc_transfer_rate_others
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a volume.
            value: volume_unaligned_unmap_io_rate
          volume_normal_read_io_cache_hits:
            description: Storage system normal read I/O cache hits for a volume.
            value: volume_normal_read_io_cache_hits
          volume_normal_write_io_cache_hits:
            description: Storage system normal write I/O cache hits for a volume.
            value: volume_normal_write_io_cache_hits
          volume_normal_total_io_cache_hits:
            description: Storage system normal total I/O cache hits for a volume.
            value: volume_normal_total_io_cache_hits
          volume_sequential_read_io_cache_hits:
            description: Storage system sequential read I/O cache hits for a volume.
            value: volume_sequential_read_io_cache_hits
          volume_sequential_write_io_cache_hits:
            description: Storage system sequential write I/O cache hits for a volume.
            value: volume_sequential_write_io_cache_hits
          volume_sequential_total_io_cache_hits:
            description: Storage system sequential total I/O cache hits for a volume.
            value: volume_sequential_total_io_cache_hits
          volume_record_mode_reads_cache_hits:
            description: Storage system record mode reads cache hits for a volume.
            value: volume_record_mode_reads_cache_hits
          volume_data_read_cache_hits:
            description: Storage system data read cache hits for a volume.
            value: volume_data_read_cache_hits
          volume_data_write_cache_hits:
            description: Storage system data write cache hits for a volume.
            value: volume_data_write_cache_hits
          volume_data_overall_cache_hits:
            description: Storage system data overall cache hits for a volume.
            value: volume_data_overall_cache_hits
          volume_io_ssd_read_cache_hits:
            description: Storage system I/O SSD read cache hits for a volume.
            value: volume_io_ssd_read_cache_hits
          volume_data_ssd_read_cache_hits:
            description: Storage system data SSD read cache hits for a volume.
            value: volume_data_ssd_read_cache_hits
          volume_peak_read_response_time:
            description: Storage system peak read response time for a volume.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a volume.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a volume.
            value: volume_peak_unmap_response_time
          volume_read_cache_hit_response_time:
            description: Storage system read cache hit response time for a volume.
            value: volume_read_cache_hit_response_time
          volume_write_cache_hit_response_time:
            description: Storage system write cache hit response time for a volume.
            value: volume_write_cache_hit_response_time
          volume_overall_cache_hit_response_time:
            description: Storage system overall cache hit response time for a volume.
            value: volume_overall_cache_hit_response_time
          volume_read_cache_miss_response_time:
            description: Storage system read cache miss response time for a volume.
            value: volume_read_cache_miss_response_time
          volume_write_cache_miss_response_time:
            description: Storage system write cache miss response time for a volume.
            value: volume_write_cache_miss_response_time
          volume_overall_cache_miss_response_time:
            description: Storage system overall cache miss response time for a volume.
            value: volume_overall_cache_miss_response_time
          volume_response_time_by_transfer_size_small:
            description: Storage system response time for small size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_small
          volume_response_time_by_transfer_size_medium:
            description: Storage system response time for medium size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_medium
          volume_response_time_by_transfer_size_large:
            description: Storage system response time for large size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_large
          volume_response_time_by_transfer_size_very_large:
            description: Storage system response time for very large size transfer
              for a volume.
            value: volume_response_time_by_transfer_size_very_large
          volume_response_time_ssd_read_cache_hits:
            description: Storage system response time for ssd read cache hits for
              a volume.
            value: volume_response_time_ssd_read_cache_hits
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a volume.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a volume.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a volume.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a volume.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a volume.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a volume.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a volume.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a volume.
            value: volume_dirty_writes_cache_hits
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a volume.
            value: volume_cache_to_disk_transfer_rate
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a volume.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              volume.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              volume.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a volume.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a volume.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a volume.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a volume.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a volume.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a volume.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a volume.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a volume.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a volume.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a volume.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a volume.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a volume.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a volume.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a volume.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a volume.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a volume.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a volume.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a volume.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a volume.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a volume.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a volume.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a volume.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a volume.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a volume.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a volume.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a volume.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a volume.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a volume.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a volume.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_io_rate_compressed_volumes:
            description: Storage system I/O rate compressed volumes for a volume.
            value: volume_io_rate_compressed_volumes
          volume_data_rate_compressed_volumes:
            description: Storage system data rate compressed volumes for a volume.
            value: volume_data_rate_compressed_volumes
          volume_response_time_compressed_volumes:
            description: Storage system response time compressed volumes for a volume.
            value: volume_response_time_compressed_volumes
          volume_io_rate_uncompressed_volumes:
            description: Storage system I/O rate uncompressed volumes for a volume.
            value: volume_io_rate_uncompressed_volumes
          volume_data_rate_uncompressed_volumes:
            description: Storage system data rate uncompressed volumes for a volume.
            value: volume_data_rate_uncompressed_volumes
          volume_response_time_uncompressed_volumes:
            description: Storage system response time uncompressed volumes for a volume.
            value: volume_response_time_uncompressed_volumes
          volume_percentage_high_performance_ficon:
            description: Storage system HDF percentage for a volume.
            value: volume_percentage_high_performance_ficon
          volume_small_io_transfer_size:
            description: Storage system small I/O transfer size for a volume.
            value: volume_small_io_transfer_size
          volume_medium_io_transfer_size:
            description: Storage system medium I/O transfer size for a volume.
            value: volume_medium_io_transfer_size
          volume_large_io_transfer_size:
            description: Storage system large I/O transfer size for a volume.
            value: volume_large_io_transfer_size
          volume_very_large_io_transfer_size:
            description: Storage system very large I/O transfer size for a volume.
            value: volume_very_large_io_transfer_size
          volume_small_data_transfer_size:
            description: Storage system small data transfer size for a volume.
            value: volume_small_data_transfer_size
          volume_medium_data_transfer_size:
            description: Storage system medium data transfer size for a volume.
            value: volume_medium_data_transfer_size
          volume_large_data_transfer_size:
            description: Storage system large data transfer size for a volume.
            value: volume_large_data_transfer_size
          volume_very_large_data_transfer_size:
            description: Storage very large data transfer size for a volume.
            value: volume_very_large_data_transfer_size
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              volume.
            value: volume_cache_to_host_transfer_response_time_other
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          port_send_port_to_host_io_rate:
            description: Storage system send port to host I/O rate by port.
            value: port_send_port_to_host_io_rate
          port_receive_port_to_host_io_rate:
            description: Storage system receive port to host I/O rate by port.
            value: port_receive_port_to_host_io_rate
          port_total_port_to_host_io_rate:
            description: Storage system total port to host I/O rate by port.
            value: port_total_port_to_host_io_rate
          port_send_port_to_disk_io_rate:
            description: Storage system send port to disk I/O rate by port.
            value: port_send_port_to_disk_io_rate
          port_receive_port_to_disk_io_rate-cache_delay_percentage:
            description: Storage system receive port to disk I/O rate cache delay
              percentage by port.
            value: port_receive_port_to_disk_io_rate-cache_delay_percentage
          port_total_port_to_disk_io_rate:
            description: Storage system total port to disk I/O rate by port.
            value: port_total_port_to_disk_io_rate
          port_send_port_to_local_node_io_rate:
            description: Storage system send port to local node I/O rate by port.
            value: port_send_port_to_local_node_io_rate
          port_receive_port_to_local_node_io_rate:
            description: Storage system receive port to local node I/O rate by port.
            value: port_receive_port_to_local_node_io_rate
          port_total_port_to_local_node_io_rate:
            description: Storage system total port to local node I/O rate by port.
            value: port_total_port_to_local_node_io_rate
          port_send_port_to_remote_node_io_rate:
            description: Storage system send port to remote node I/O rate by port.
            value: port_send_port_to_remote_node_io_rate
          port_receive_port_to_remote_node_io_rate:
            description: Storage system receive port to remote node I/O rate by port.
            value: port_receive_port_to_remote_node_io_rate
          port_total_port_to_remote_node_io_rate:
            description: Storage system total port to remote node I/O rate by port.
            value: port_total_port_to_remote_node_io_rate
          'port_send_port_to_host_data_rate ':
            description: Storage system send port to host data rate by port.
            value: port_send_port_to_host_data_rate
          port_receive_port_to_host_data_rate:
            description: Storage system receive port to host data rate by port.
            value: port_receive_port_to_host_data_rate
          port_total_port_to_host_data_rate:
            description: Storage system total port to host data rate by port.
            value: port_total_port_to_host_data_rate
          port_send_port_to_disk_data_rate:
            description: Storage system send port to disk data rate by port.
            value: port_send_port_to_disk_data_rate
          port_receive_port_to_disk_data_rate:
            description: Storage system receive port to disk data rate by port.
            value: port_receive_port_to_disk_data_rate
          port_total_port_to_disk_data_rate:
            description: Storage system total port to disk data rate by port.
            value: port_total_port_to_disk_data_rate
          port_send_port_to_local_node_data_rate:
            description: Storage system send port to local node data rate by port.
            value: port_send_port_to_local_node_data_rate
          port_receive_port_to_local_node_data_rate:
            description: Storage system receive port to local node data rate by port.
            value: port_receive_port_to_local_node_data_rate
          port_total_port_to_local_node_data_rate:
            description: Storage system total port to local node data rate by port.
            value: port_total_port_to_local_node_data_rate
          port_send_port_to_remote_node_data_rate:
            description: Storage system send port to remote node data rate by port.
            value: port_send_port_to_remote_node_data_rate
          port_receive_port_to_remote_node_data_rate:
            description: Storage system receive port to remote node data rate by port.
            value: port_receive_port_to_remote_node_data_rate
          port_total_port_to_remote_node_data_rate:
            description: Storage system total port to remote node data rate by port.
            value: port_total_port_to_remote_node_data_rate
          port_send_port_to_local_node_response_time:
            description: Storage system send port to local node response time by port.
            value: port_send_port_to_local_node_response_time
          port_receive_port_to_local_node_response_time:
            description: Storage system receive port to local node response time by
              port.
            value: port_receive_port_to_local_node_response_time
          port_total_port_to_local_node_response_time:
            description: Storage system total port to local node response time by
              port.
            value: port_total_port_to_local_node_response_time
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc error frame error by port.
            value: port_crc_errors_frame_errors
          port_invalid_relative_offset_rate_frame_errors:
            description: Storage system invalid relative offset rate frame errors
              by port.
            value: port_invalid_relative_offset_rate_frame_errors
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_sequence_timeouts_link_errors:
            description: Storage system sequence timeouts link errors by port.
            value: port_sequence_timeouts_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_zero_buffer_credit_timer_port_protocol_errors:
            description: Storage system zero buffer credit timer port protocol errors
              by port.
            value: port_zero_buffer_credit_timer_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_out_of_order_data_port_protocol_errors:
            description: Storage system out of order data port protocol errors by
              port.
            value: port_out_of_order_data_port_protocol_errors
          port_out_of_order_ack_port_protocol_errors:
            description: Storage system out of order ack port protocol errors by port.
            value: port_out_of_order_ack_port_protocol_errors
          port_duplicate_frames_port_protocol_errors:
            description: Storage system duplicate frames port protocol errors by port.
            value: port_duplicate_frames_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_send_delay_time_port_protocol_errors:
            description: Storage system send delay time port protocol errors by port.
            value: port_send_delay_time_port_protocol_errors
          port_send_delay_io_percentage_port_protocol_errors:
            description: Storage system send delay I/O percentage port protocol errors
              by port.
            value: port_send_delay_io_percentage_port_protocol_errors
          port_extreme_io_concurrency_rate_overload_errors:
            description: Storage system extreme I/O concurrency rate overload errors
              by port.
            value: port_extreme_io_concurrency_rate_overload_errors
          port_extreme_io_concurrency_percentage_overload_errors:
            description: Storage system extreme I/O concurrency percentage overload
              errors by port.
            value: port_extreme_io_concurrency_percentage_overload_errors
          port_io_busy_rate_overload_errors:
            description: Storage system I/O busy rate overload errors by port.
            value: port_io_busy_rate_overload_errors
          port_io_busy_percentage_overload_errors:
            description: Storage system I/O busy percentage overload errors by port.
            value: port_io_busy_percentage_overload_errors
          port_io_overrun_rate_overload_errors:
            description: Storage system I/O overrun rate overload errors by port.
            value: port_io_overrun_rate_overload_errors
          port_io_overrun_percentage_overload_errors:
            description: Storage system I/O overrun percentage overload errors by
              port.
            value: port_io_overrun_percentage_overload_errors
          port_zero_send_buffer_credit_percentage_other:
            description: Storage system zero send buffer credit percentage other by
              port.
            value: port_zero_send_buffer_credit_percentage_other
          port_zero_receive_buffer_credit_percentage_other:
            description: Storage system zero receive buffer credit percentage other
              by port.
            value: port_zero_receive_buffer_credit_percentage_other
          port_send_transfer_size:
            description: Storage system send transfer size by port.
            value: port_send_transfer_size
          port_receive_transfer_size:
            description: Storage system receive transfer size by port.
            value: port_receive_transfer_size
          port_overall_transfer_size:
            description: Storage system overall transfer size by port.
            value: port_overall_transfer_size
          port_send_port_to_local_node_queue_time:
            description: Storage system send port to local node queue time by port.
            value: port_send_port_to_local_node_queue_time
          port_receive_port_to_local_node_queue_time:
            description: Storage system receive port to local node queue time by port.
            value: port_receive_port_to_local_node_queue_time
          port_overall_port_to_local_node_queue_time:
            description: Storage system overall port to local node queue time by port.
            value: port_overall_port_to_local_node_queue_time
          port_send_pprc_io_rate:
            description: Storage system send pprc I/O rate by port.
            value: port_send_pprc_io_rate
          port_receive_pprc_io_rate:
            description: Storage system receive pprc I/O rate by port.
            value: port_receive_pprc_io_rate
          port_total_pprc_io_rate:
            description: Storage system total pprc I/O rate by port.
            value: port_total_pprc_io_rate
          port_send_pprc_data_rate:
            description: Storage system send pprc data rate by port.
            value: port_send_pprc_data_rate
          port_receive_pprc_data_rate:
            description: Storage system receive pprc data rate by port.
            value: port_receive_pprc_data_rate
          port_total_pprc_data_rate:
            description: Storage system total pprc data rate by port.
            value: port_total_pprc_data_rate
          port_send_pprc_response_time:
            description: Storage system send pprc response time by port.
            value: port_send_pprc_response_time
          port_receive_pprc_response_time:
            description: Storage system receive pprc response time by port.
            value: port_receive_pprc_response_time
          port_overall_pprc_response_time:
            description: Storage system overall pprc response time by port.
            value: port_overall_pprc_response_time
          node_send_node_to_local_physical_data_rate:
            description: Storage system send node to local physical data rate by node.
            value: node_send_node_to_local_physical_data_rate
          node_receive_node_to_local_physical_data_rate:
            description: Storage system receive node to local physical data rate by
              node.
            value: node_receive_node_to_local_physical_data_rate
          node_total_node_to_local_physical_data_rate:
            description: Storage system total node to local physical data rate by
              node.
            value: node_total_node_to_local_physical_data_rate
          core1_system_cpu_utilization:
            description: Core 1 system cpu utilization.
            value: core1_system_cpu_utilization
          core2_system_cpu_utilization:
            description: Core 2 system cpu utilization.
            value: core2_system_cpu_utilization
          core3_system_cpu_utilization:
            description: Core 3 system cpu utilization.
            value: core3_system_cpu_utilization
          core4_system_cpu_utilization:
            description: Core 4 system cpu utilization.
            value: core4_system_cpu_utilization
          core5_system_cpu_utilization:
            description: Core 5 system cpu utilization.
            value: core5_system_cpu_utilization
          core6_system_cpu_utilization:
            description: Core 6 system cpu utilization.
            value: core6_system_cpu_utilization
          core7_system_cpu_utilization:
            description: Core 7 system cpu utilization.
            value: core7_system_cpu_utilization
          core8_system_cpu_utilization:
            description: Core 8 system cpu utilization.
            value: core8_system_cpu_utilization
          core9_system_cpu_utilization:
            description: Core 9 system cpu utilization.
            value: core9_system_cpu_utilization
          core10_system_cpu_utilization:
            description: Core 10 system cpu utilization.
            value: core10_system_cpu_utilization
          core11_system_cpu_utilization:
            description: Core 11 system cpu utilization.
            value: core11_system_cpu_utilization
          core12_system_cpu_utilization:
            description: Core 12 system cpu utilization.
            value: core12_system_cpu_utilization
          snapshot_written_capacity:
            description: Storage system snapshot written capacity in bytes.
            value: snapshot_written_capacity
          snapshot_provisioned_capacity:
            description: Storage system snapshot provisioned capacity in bytes.
            value: snapshot_provisioned_capacity
          raw_capacity:
            description: Storage system raw capacity in bytes.
            value: raw_capacity
          written_capacity_limit:
            description: Storage system written capacity limit.
            value: written_capacity_limit
          mapped_capacity:
            description: Storage system mapped capacity in bytes.
            value: mapped_capacity
          unmapped_capacity:
            description: Storage system unmapped capacity in bytes.
            value: unmapped_capacity
          used_written_capacity:
            description: Storage system used written capacity in bytes.
            value: used_written_capacity
          available_written_capacity:
            description: Storage system available written capacity in bytes.
            value: available_written_capacity
          file_system_capacity:
            description: Storage system file system capacity in bytes.
            value: file_system_capacity
          available_file_system_capacity:
            description: Storage system available file system capacity in bytes.
            value: available_file_system_capacity
          used_file_system_capacity:
            description: Storage system used file system capacity in bytes.
            value: used_file_system_capacity
          used_file_system_capacity_percentage:
            description: Storage system used file system capacity percentage.
            value: used_file_system_capacity_percentage
          used_written_capacity_percentage:
            description: Storage system used written capacity percentage.
            value: used_written_capacity_percentage
          total_provisioned_capacity_percentage:
            description: Storage system total provisioned capacity percentage.
            value: total_provisioned_capacity_percentage
          mapped_capacity_percentage:
            description: Storage system mapped capacity percentage.
            value: mapped_capacity_percentage
          used_capacity_percentage:
            description: Storage system used capacity percentage.
            value: used_capacity_percentage
          capacity_percentage:
            description: Storage system capacity percentage.
            value: capacity_percentage
          total_usable_capacity:
            description: Storage system total usable capacity.
            value: total_usable_capacity
          total_capacity:
            description: Storage system used total capacity in bytes.
            value: total_capacity
          safeguarded_capacity:
            description: Storage system used safeguarded capacity in bytes.
            value: safeguarded_capacity
          safeguarded_used_capacity_percentage:
            description: Storage system used safeguarded used capacity percentage
              in bytes.
            value: safeguarded_used_capacity_percentage
          available_system_capacity:
            description: Storage system available system capacity in bytes.
            value: available_system_capacity
          available_capacity_percentage:
            description: Storage system available capacity percentage.
            value: available_capacity_percentage
          drive_compression_savings_percentage:
            description: Storage system drive compression savings percentage.
            value: drive_compression_savings_percentage
          total_compression_savings_percentage:
            description: Storage system total compression savings percentage.
            value: total_compression_savings_percentage
          deduplication_savings_percentage:
            description: Storage system deduplication savings percentage.
            value: deduplication_savings_percentage
          total_savings_percentage:
            description: Storage system total savings percentage.
            value: total_savings_percentage
          total_compression_savings:
            description: Storage system total compression savings in bytes.
            value: total_compression_savings
          deduplication_savings:
            description: Storage system deduplication savings in bytes.
            value: deduplication_savings
          drive_compression_savings:
            description: Storage system drive compression savings in bytes.
            value: drive_compression_savings
          total_compression_ratio:
            description: Storage system total compression ratio.
            value: total_compression_ratio
          drive_compression_ratio:
            description: Storage system drive compression ratio.
            value: drive_compression_ratio
          data_reduction_ratio:
            description: Storage system data reduction ratio.
            value: data_reduction_ratio
          pool_compression_ratio:
            description: Storage system pool compression ratio.
            value: pool_compression_ratio
          pool_compression_savings:
            description: Storage system pool compression savings in bytes.
            value: pool_compression_savings
          pool_compression_savings_percentage:
            description: Storage system pool compression savings percentage.
            value: pool_compression_savings_percentage
          total_savings_ratio:
            description: Storage system total savings ratio.
            value: total_savings_ratio
          overprovisioned_capacity:
            description: Storage system over provisioned capacity in bytes.
            value: overprovisioned_capacity
          overhead_capacity:
            description: Storage system overhead capacity in bytes.
            value: overhead_capacity
          capacity_to_be_licensed:
            description: Storage system capacity to be licensed in bytes.
            value: capacity_to_be_licensed
          monitored_back_end_capacity:
            description: Storage system monitored backend capacity in bytes.
            value: monitored_back_end_capacity
          unmonitored_back_end_capacity:
            description: Storage system unmonitored backend capacity in bytes.
            value: unmonitored_back_end_capacity
          read_cache:
            description: Storage system read cache in bytes.
            value: read_cache
          write_cache:
            description: Storage system write cache in bytes.
            value: write_cache
          available_volume_capacity:
            description: Storage system available volume capacity in bytes.
            value: available_volume_capacity
          flashcopy_used_capacity:
            description: Storage system flashcopy used capacity in bytes.
            value: flashcopy_used_capacity
          flashcopy_provisioned_capacity:
            description: Storage system flashcopy provisioned capacity in bytes.
            value: flashcopy_provisioned_capacity
          data_reduction:
            description: Storage system data reduction in bytes.
            value: data_reduction
          data_reduction_percentage:
            description: Storage system data reduction percentage.
            value: data_reduction_percentage
      requestBody:
        description: Pass an array of natural keys to fetch specified components'
          metrics details. Maximum 30 natural keys are allowed. Cannot be null or
          empty array
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups/{general_group_uuid}/{component}/{component_uuid_nk}:
    get:
      tags:
      - General Groups APIs
      summary: Returns details of a general group internal component for a particular
        tenant.
      parameters:
      - name: component
        in: path
        description: 'Specifies the type of internal component resource to fetch details
          for. Accepted values are:'
        required: true
        schema:
          type: string
        examples:
          storage-system:
            value: storage_system
          switches:
            value: switches
          fabrics:
            value: fabrics
          hosts:
            value: servers
          volumes:
            value: volumes
          nodes:
            value: nodes
          host-connections:
            value: host-connections
          storage-fc-ports:
            value: storage-fc-ports
          ip-ports:
            value: ip-ports
          raid-arrays:
            value: raid-arrays
          enclosures:
            value: enclosures
          pools:
            value: pools
          drives:
            value: drives
          device-adapters:
            value: device-adapters
          managed-disks:
            value: managed-disks
          io-groups:
            value: io-groups
          filesystems:
            value: filesystems
          filesets:
            value: filesets
          shares:
            value: shares
          host-bus-adapters:
            value: host-bus-adapters
          vmdks:
            value: vmdks
          host-drives:
            value: host-drives
          datastores:
            value: datastores
          trunks:
            value: trunks
          switch-fc-ports:
            value: switch-fc-ports
      - name: component_uuid_nk
        in: path
        description: The unique identifier of the general groups in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: general_group_uuid
        in: path
        description: The unique identifier of the general groups in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: storage-type
        in: query
        description: "The type of the storage system. Accepted values are block, filer\
          \ and object. If not specified, it displays all storage systems added to\
          \ the tenant."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups/{general_group_uuid}/{component}/{component_uuid}/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns details of a general group internal component for a particular
        tenant.
      parameters:
      - name: component
        in: path
        description: 'Specifies the type of internal component resource to fetch details
          for. Accepted values are:'
        required: true
        schema:
          type: string
        examples:
          storage-system:
            value: storage_system
          switches:
            value: switches
          hosts:
            value: hosts
      - name: component_uuid
        in: path
        description: The unique identifier of the general groups in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: general_group_uuid
        in: path
        description: The unique identifier of the general groups in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by volumes.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by volumes.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by volumes.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by volumes.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by volumes.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by volumes.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by volumes.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by volumes.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by volumes.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by volumes.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by volumes.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by volumes.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by volumes.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by volumes.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              volumes.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by volumes.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by volumes.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by volumes.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by volumes.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by volumes.
            value: volume_host_time_percentage
          volume_utilization:
            description: Storage system utilization value aggregated by volumes.
            value: volume_utilization
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          port_send_io_rate:
            description: Storage system port send I/O rate aggregated by Fibre Channel
              ports.
            value: port_send_io_rate
          port_receive_io_rate:
            description: Storage system port receive I/O rate aggregated by Fibre
              Channel ports.
            value: port_receive_io_rate
          total_port_io_rate:
            description: Storage system port total I/O rate aggregated by Fibre Channel
              ports.
            value: total_port_io_rate
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_response_time:
            description: Storage system port send response time aggregated by Fibre
              Channel ports.
            value: port_send_response_time
          port_receive_response_time:
            description: Storage system port receive response time aggregated by Fibre
              Channel ports.
            value: port_receive_response_time
          port_total_response_time:
            description: Storage system port total response time aggregated by Fibre
              Channel ports.
            value: port_total_response_time
          ip_replication_transfer_send_size:
            description: Storage system IP replication transfer send size.
            value: ip_replication_transfer_send_size
          ip_replication_transfer_receive_size:
            description: Storage system IP replication transfer receive size.
            value: ip_replication_transfer_receive_size
          ip_replication_transfer_total_size:
            description: Storage system IP replication transfer total size.
            value: ip_replication_transfer_total_size
          ip_replication_latency:
            description: Storage system IP replication latency.
            value: ip_replication_latency
          ip_replication_to_remote_node_send_data_rate:
            description: Storage system IP replication to remote node send data rate.
            value: ip_replication_to_remote_node_send_data_rate
          ip_replication_to_remote_node_receive_data_rate:
            description: Storage system IP replication to remote node receive data
              rate.
            value: ip_replication_to_remote_node_receive_data_rate
          ip_replication_to_remote_node_re_send_data_rate:
            description: Storage system IP replication to remote node re-send data
              rate.
            value: ip_replication_to_remote_node_re_send_data_rate
          ip_replication_compressed_send_data_rate:
            description: Storage system IP replication compressed send data rate.
            value: ip_replication_compressed_send_data_rate
          ip_replication_compressed_receive_data_rate:
            description: Storage system IP replication compressed receive data rate.
            value: ip_replication_compressed_receive_data_rate
          physical_node_send_data_rate:
            description: Storage system physical node send data rate aggregated for
              all nodes.
            value: physical_node_send_data_rate
          physical_node_receive_data_rate:
            description: Storage system physical node receive data rate aggregated
              for all nodes.
            value: physical_node_receive_data_rate
          physical_node_total_data_rate:
            description: Storage system physical node total data rate aggregated for
              all nodes.
            value: physical_node_total_data_rate
          node_logical_send_data_rate:
            description: Storage system node logical send data rate aggregated for
              all nodes.
            value: node_logical_send_data_rate
          node_logical_receive_data_rate:
            description: Storage system node logical receive data rate aggregated
              for all nodes.
            value: node_logical_receive_data_rate
          node_logical_total_data_rate:
            description: Storage system node logical total data rate aggregated for
              all nodes.
            value: node_logical_total_data_rate
          cpu_utilization:
            description: Storage system cpu utilization aggregated for all nodes.
            value: cpu_utilization
          gc_moved_size:
            description: Storage system garbage collection moved size aggregated for
              all nodes.
            value: gc_moved_size
          node_read_cache_fullness:
            description: Storage system node read cache fullness aggregated for all
              nodes.
            value: node_read_cache_fullness
          node_write_cache_fullness:
            description: Storage system node write cache fullness aggregated for all
              nodes.
            value: node_write_cache_fullness
          max_node_read_cache_fullness:
            description: Storage system max node read cache fullness aggregated for
              all nodes.
            value: max_node_read_cache_fullness
          max_node_write_cache_fullness:
            description: Storage system max node write cache fullness aggregated for
              all nodes.
            value: max_node_write_cache_fullness
          filesystem_and_node_read_io:
            description: Storage file system node read I/O.
            value: filesystem_and_node_read_io
          filesystem_and_node_write_io:
            description: Storage file system node write I/O.
            value: filesystem_and_node_write_io
          filesystem_and_node_total_io:
            description: Storage file system node total I/O.
            value: filesystem_and_node_total_io
          filesystem_and_node_bytes_read:
            description: Storage file system node read bytes.
            value: filesystem_and_node_bytes_read
          filesystem_and_node_bytes_write:
            description: Storage file system node write bytes.
            value: filesystem_and_node_bytes_write
          filesystem_and_node_bytes_total:
            description: Storage file system node total bytes.
            value: filesystem_and_node_bytes_total
          filesystem_read_response_time:
            description: Storage file system read response time.
            value: filesystem_read_response_time
          filesystem_write_response_time:
            description: Storage file system write response time.
            value: filesystem_write_response_time
          filesystem_total_response_time:
            description: Storage file system total response time.
            value: filesystem_total_response_time
          filesystem_read_transfer_size:
            description: Storage file system read transfer size.
            value: filesystem_read_transfer_size
          filesystem_write_transfer_size:
            description: Storage file system write transfer size.
            value: filesystem_write_transfer_size
          filesystem_total_transfer_size:
            description: Storage file system total transfer size.
            value: filesystem_total_transfer_size
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
          usable_capacity:
            description: Storage system total usable capacity.
            value: usable_capacity
          total_provisioned_capacity:
            description: Storage system total provisioned capacity.
            value: total_provisioned_capacity
          shortfall_percent:
            description: Storage system shortfall percentage.
            value: shortfall_percent
          recent_growth:
            description: Storage system recent growth in bytes.
            value: recent_growth
          recent_fill_rate:
            description: Storage system recent fill rate in bytes.
            value: recent_fill_rate
          temperature_c:
            description: Storage system's temperature in Celsius.
            value: temperature_c
          temperature_f:
            description: Storage system's temperature in Fahrenheit.
            value: temperature_f
          total_power_w:
            description: Storage system's total power.
            value: total_power_w
          power_efficiency:
            description: Storage system's power efficiency.
            value: power_efficiency
          co2_emission:
            description: Storage system's carbon emission.
            value: co2_emission
          volume_normal_read_io_rate:
            description: Storage system normal read I/O rate for a volume.
            value: volume_normal_read_io_rate
          volume_normal_write_io_rate:
            description: Storage system normal write I/O rate for a volume.
            value: volume_normal_write_io_rate
          volume_normal_total_io_rate:
            description: Storage system normal total I/O rate for a volume.
            value: volume_normal_total_io_rate
          volume_sequential_read_io_rate:
            description: Storage system sequential read I/O rate for a volume.
            value: volume_sequential_read_io_rate
          volume_sequential_write_io_rate:
            description: Storage system sequential write I/O rate for a volume.
            value: volume_sequential_write_io_rate
          volume_sequential_total_io_rate:
            description: Storage system sequential total I/O rate for a volume.
            value: volume_sequential_total_io_rate
          volume_record_mode_reads_io_rate:
            description: Storage system record mode read I/O rate for a volume.
            value: volume_record_mode_reads_io_rate
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a volume.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a volume.
            value: volume_write_cache_delay_io_rate
          volume_high_performance_ficon_read:
            description: Storage system HPF read for a volume.
            value: volume_high_performance_ficon_read
          volume_high_performance_ficon_write:
            description: Storage system HPF write for a volume.
            value: volume_high_performance_ficon_write
          volume_high_performance_ficon_total:
            description: Storage system HPF total for a volume.
            value: volume_high_performance_ficon_total
          volume_pprc_transfer_rate_others:
            description: Storage system PPRC transfer rate for a volume.
            value: volume_pprc_transfer_rate_others
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a volume.
            value: volume_unaligned_unmap_io_rate
          volume_normal_read_io_cache_hits:
            description: Storage system normal read I/O cache hits for a volume.
            value: volume_normal_read_io_cache_hits
          volume_normal_write_io_cache_hits:
            description: Storage system normal write I/O cache hits for a volume.
            value: volume_normal_write_io_cache_hits
          volume_normal_total_io_cache_hits:
            description: Storage system normal total I/O cache hits for a volume.
            value: volume_normal_total_io_cache_hits
          volume_sequential_read_io_cache_hits:
            description: Storage system sequential read I/O cache hits for a volume.
            value: volume_sequential_read_io_cache_hits
          volume_sequential_write_io_cache_hits:
            description: Storage system sequential write I/O cache hits for a volume.
            value: volume_sequential_write_io_cache_hits
          volume_sequential_total_io_cache_hits:
            description: Storage system sequential total I/O cache hits for a volume.
            value: volume_sequential_total_io_cache_hits
          volume_record_mode_reads_cache_hits:
            description: Storage system record mode reads cache hits for a volume.
            value: volume_record_mode_reads_cache_hits
          volume_data_read_cache_hits:
            description: Storage system data read cache hits for a volume.
            value: volume_data_read_cache_hits
          volume_data_write_cache_hits:
            description: Storage system data write cache hits for a volume.
            value: volume_data_write_cache_hits
          volume_data_overall_cache_hits:
            description: Storage system data overall cache hits for a volume.
            value: volume_data_overall_cache_hits
          volume_io_ssd_read_cache_hits:
            description: Storage system I/O SSD read cache hits for a volume.
            value: volume_io_ssd_read_cache_hits
          volume_data_ssd_read_cache_hits:
            description: Storage system data SSD read cache hits for a volume.
            value: volume_data_ssd_read_cache_hits
          volume_peak_read_response_time:
            description: Storage system peak read response time for a volume.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a volume.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a volume.
            value: volume_peak_unmap_response_time
          volume_read_cache_hit_response_time:
            description: Storage system read cache hit response time for a volume.
            value: volume_read_cache_hit_response_time
          volume_write_cache_hit_response_time:
            description: Storage system write cache hit response time for a volume.
            value: volume_write_cache_hit_response_time
          volume_overall_cache_hit_response_time:
            description: Storage system overall cache hit response time for a volume.
            value: volume_overall_cache_hit_response_time
          volume_read_cache_miss_response_time:
            description: Storage system read cache miss response time for a volume.
            value: volume_read_cache_miss_response_time
          volume_write_cache_miss_response_time:
            description: Storage system write cache miss response time for a volume.
            value: volume_write_cache_miss_response_time
          volume_overall_cache_miss_response_time:
            description: Storage system overall cache miss response time for a volume.
            value: volume_overall_cache_miss_response_time
          volume_response_time_by_transfer_size_small:
            description: Storage system response time for small size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_small
          volume_response_time_by_transfer_size_medium:
            description: Storage system response time for medium size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_medium
          volume_response_time_by_transfer_size_large:
            description: Storage system response time for large size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_large
          volume_response_time_by_transfer_size_very_large:
            description: Storage system response time for very large size transfer
              for a volume.
            value: volume_response_time_by_transfer_size_very_large
          volume_response_time_ssd_read_cache_hits:
            description: Storage system response time for ssd read cache hits for
              a volume.
            value: volume_response_time_ssd_read_cache_hits
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a volume.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a volume.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a volume.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a volume.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a volume.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a volume.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a volume.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a volume.
            value: volume_dirty_writes_cache_hits
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a volume.
            value: volume_cache_to_disk_transfer_rate
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a volume.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              volume.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              volume.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a volume.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a volume.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a volume.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a volume.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a volume.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a volume.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a volume.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a volume.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a volume.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a volume.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a volume.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a volume.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a volume.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a volume.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a volume.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a volume.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a volume.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a volume.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a volume.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a volume.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a volume.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a volume.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a volume.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a volume.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a volume.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a volume.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a volume.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a volume.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a volume.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_io_rate_compressed_volumes:
            description: Storage system I/O rate compressed volumes for a volume.
            value: volume_io_rate_compressed_volumes
          volume_data_rate_compressed_volumes:
            description: Storage system data rate compressed volumes for a volume.
            value: volume_data_rate_compressed_volumes
          volume_response_time_compressed_volumes:
            description: Storage system response time compressed volumes for a volume.
            value: volume_response_time_compressed_volumes
          volume_io_rate_uncompressed_volumes:
            description: Storage system I/O rate uncompressed volumes for a volume.
            value: volume_io_rate_uncompressed_volumes
          volume_data_rate_uncompressed_volumes:
            description: Storage system data rate uncompressed volumes for a volume.
            value: volume_data_rate_uncompressed_volumes
          volume_response_time_uncompressed_volumes:
            description: Storage system response time uncompressed volumes for a volume.
            value: volume_response_time_uncompressed_volumes
          volume_percentage_high_performance_ficon:
            description: Storage system HDF percentage for a volume.
            value: volume_percentage_high_performance_ficon
          volume_small_io_transfer_size:
            description: Storage system small I/O transfer size for a volume.
            value: volume_small_io_transfer_size
          volume_medium_io_transfer_size:
            description: Storage system medium I/O transfer size for a volume.
            value: volume_medium_io_transfer_size
          volume_large_io_transfer_size:
            description: Storage system large I/O transfer size for a volume.
            value: volume_large_io_transfer_size
          volume_very_large_io_transfer_size:
            description: Storage system very large I/O transfer size for a volume.
            value: volume_very_large_io_transfer_size
          volume_small_data_transfer_size:
            description: Storage system small data transfer size for a volume.
            value: volume_small_data_transfer_size
          volume_medium_data_transfer_size:
            description: Storage system medium data transfer size for a volume.
            value: volume_medium_data_transfer_size
          volume_large_data_transfer_size:
            description: Storage system large data transfer size for a volume.
            value: volume_large_data_transfer_size
          volume_very_large_data_transfer_size:
            description: Storage very large data transfer size for a volume.
            value: volume_very_large_data_transfer_size
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              volume.
            value: volume_cache_to_host_transfer_response_time_other
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          port_send_port_to_host_io_rate:
            description: Storage system send port to host I/O rate by port.
            value: port_send_port_to_host_io_rate
          port_receive_port_to_host_io_rate:
            description: Storage system receive port to host I/O rate by port.
            value: port_receive_port_to_host_io_rate
          port_total_port_to_host_io_rate:
            description: Storage system total port to host I/O rate by port.
            value: port_total_port_to_host_io_rate
          port_send_port_to_disk_io_rate:
            description: Storage system send port to disk I/O rate by port.
            value: port_send_port_to_disk_io_rate
          port_receive_port_to_disk_io_rate-cache_delay_percentage:
            description: Storage system receive port to disk I/O rate cache delay
              percentage by port.
            value: port_receive_port_to_disk_io_rate-cache_delay_percentage
          port_total_port_to_disk_io_rate:
            description: Storage system total port to disk I/O rate by port.
            value: port_total_port_to_disk_io_rate
          port_send_port_to_local_node_io_rate:
            description: Storage system send port to local node I/O rate by port.
            value: port_send_port_to_local_node_io_rate
          port_receive_port_to_local_node_io_rate:
            description: Storage system receive port to local node I/O rate by port.
            value: port_receive_port_to_local_node_io_rate
          port_total_port_to_local_node_io_rate:
            description: Storage system total port to local node I/O rate by port.
            value: port_total_port_to_local_node_io_rate
          port_send_port_to_remote_node_io_rate:
            description: Storage system send port to remote node I/O rate by port.
            value: port_send_port_to_remote_node_io_rate
          port_receive_port_to_remote_node_io_rate:
            description: Storage system receive port to remote node I/O rate by port.
            value: port_receive_port_to_remote_node_io_rate
          port_total_port_to_remote_node_io_rate:
            description: Storage system total port to remote node I/O rate by port.
            value: port_total_port_to_remote_node_io_rate
          'port_send_port_to_host_data_rate ':
            description: Storage system send port to host data rate by port.
            value: port_send_port_to_host_data_rate
          port_receive_port_to_host_data_rate:
            description: Storage system receive port to host data rate by port.
            value: port_receive_port_to_host_data_rate
          port_total_port_to_host_data_rate:
            description: Storage system total port to host data rate by port.
            value: port_total_port_to_host_data_rate
          port_send_port_to_disk_data_rate:
            description: Storage system send port to disk data rate by port.
            value: port_send_port_to_disk_data_rate
          port_receive_port_to_disk_data_rate:
            description: Storage system receive port to disk data rate by port.
            value: port_receive_port_to_disk_data_rate
          port_total_port_to_disk_data_rate:
            description: Storage system total port to disk data rate by port.
            value: port_total_port_to_disk_data_rate
          port_send_port_to_local_node_data_rate:
            description: Storage system send port to local node data rate by port.
            value: port_send_port_to_local_node_data_rate
          port_receive_port_to_local_node_data_rate:
            description: Storage system receive port to local node data rate by port.
            value: port_receive_port_to_local_node_data_rate
          port_total_port_to_local_node_data_rate:
            description: Storage system total port to local node data rate by port.
            value: port_total_port_to_local_node_data_rate
          port_send_port_to_remote_node_data_rate:
            description: Storage system send port to remote node data rate by port.
            value: port_send_port_to_remote_node_data_rate
          port_receive_port_to_remote_node_data_rate:
            description: Storage system receive port to remote node data rate by port.
            value: port_receive_port_to_remote_node_data_rate
          port_total_port_to_remote_node_data_rate:
            description: Storage system total port to remote node data rate by port.
            value: port_total_port_to_remote_node_data_rate
          port_send_port_to_local_node_response_time:
            description: Storage system send port to local node response time by port.
            value: port_send_port_to_local_node_response_time
          port_receive_port_to_local_node_response_time:
            description: Storage system receive port to local node response time by
              port.
            value: port_receive_port_to_local_node_response_time
          port_total_port_to_local_node_response_time:
            description: Storage system total port to local node response time by
              port.
            value: port_total_port_to_local_node_response_time
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc error frame error by port.
            value: port_crc_errors_frame_errors
          port_invalid_relative_offset_rate_frame_errors:
            description: Storage system invalid relative offset rate frame errors
              by port.
            value: port_invalid_relative_offset_rate_frame_errors
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_sequence_timeouts_link_errors:
            description: Storage system sequence timeouts link errors by port.
            value: port_sequence_timeouts_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_zero_buffer_credit_timer_port_protocol_errors:
            description: Storage system zero buffer credit timer port protocol errors
              by port.
            value: port_zero_buffer_credit_timer_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_out_of_order_data_port_protocol_errors:
            description: Storage system out of order data port protocol errors by
              port.
            value: port_out_of_order_data_port_protocol_errors
          port_out_of_order_ack_port_protocol_errors:
            description: Storage system out of order ack port protocol errors by port.
            value: port_out_of_order_ack_port_protocol_errors
          port_duplicate_frames_port_protocol_errors:
            description: Storage system duplicate frames port protocol errors by port.
            value: port_duplicate_frames_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_send_delay_time_port_protocol_errors:
            description: Storage system send delay time port protocol errors by port.
            value: port_send_delay_time_port_protocol_errors
          port_send_delay_io_percentage_port_protocol_errors:
            description: Storage system send delay I/O percentage port protocol errors
              by port.
            value: port_send_delay_io_percentage_port_protocol_errors
          port_extreme_io_concurrency_rate_overload_errors:
            description: Storage system extreme I/O concurrency rate overload errors
              by port.
            value: port_extreme_io_concurrency_rate_overload_errors
          port_extreme_io_concurrency_percentage_overload_errors:
            description: Storage system extreme I/O concurrency percentage overload
              errors by port.
            value: port_extreme_io_concurrency_percentage_overload_errors
          port_io_busy_rate_overload_errors:
            description: Storage system I/O busy rate overload errors by port.
            value: port_io_busy_rate_overload_errors
          port_io_busy_percentage_overload_errors:
            description: Storage system I/O busy percentage overload errors by port.
            value: port_io_busy_percentage_overload_errors
          port_io_overrun_rate_overload_errors:
            description: Storage system I/O overrun rate overload errors by port.
            value: port_io_overrun_rate_overload_errors
          port_io_overrun_percentage_overload_errors:
            description: Storage system I/O overrun percentage overload errors by
              port.
            value: port_io_overrun_percentage_overload_errors
          port_zero_send_buffer_credit_percentage_other:
            description: Storage system zero send buffer credit percentage other by
              port.
            value: port_zero_send_buffer_credit_percentage_other
          port_zero_receive_buffer_credit_percentage_other:
            description: Storage system zero receive buffer credit percentage other
              by port.
            value: port_zero_receive_buffer_credit_percentage_other
          port_send_transfer_size:
            description: Storage system send transfer size by port.
            value: port_send_transfer_size
          port_receive_transfer_size:
            description: Storage system receive transfer size by port.
            value: port_receive_transfer_size
          port_overall_transfer_size:
            description: Storage system overall transfer size by port.
            value: port_overall_transfer_size
          port_send_port_to_local_node_queue_time:
            description: Storage system send port to local node queue time by port.
            value: port_send_port_to_local_node_queue_time
          port_receive_port_to_local_node_queue_time:
            description: Storage system receive port to local node queue time by port.
            value: port_receive_port_to_local_node_queue_time
          port_overall_port_to_local_node_queue_time:
            description: Storage system overall port to local node queue time by port.
            value: port_overall_port_to_local_node_queue_time
          port_send_pprc_io_rate:
            description: Storage system send pprc I/O rate by port.
            value: port_send_pprc_io_rate
          port_receive_pprc_io_rate:
            description: Storage system receive pprc I/O rate by port.
            value: port_receive_pprc_io_rate
          port_total_pprc_io_rate:
            description: Storage system total pprc I/O rate by port.
            value: port_total_pprc_io_rate
          port_send_pprc_data_rate:
            description: Storage system send pprc data rate by port.
            value: port_send_pprc_data_rate
          port_receive_pprc_data_rate:
            description: Storage system receive pprc data rate by port.
            value: port_receive_pprc_data_rate
          port_total_pprc_data_rate:
            description: Storage system total pprc data rate by port.
            value: port_total_pprc_data_rate
          port_send_pprc_response_time:
            description: Storage system send pprc response time by port.
            value: port_send_pprc_response_time
          port_receive_pprc_response_time:
            description: Storage system receive pprc response time by port.
            value: port_receive_pprc_response_time
          port_overall_pprc_response_time:
            description: Storage system overall pprc response time by port.
            value: port_overall_pprc_response_time
          node_send_node_to_local_physical_data_rate:
            description: Storage system send node to local physical data rate by node.
            value: node_send_node_to_local_physical_data_rate
          node_receive_node_to_local_physical_data_rate:
            description: Storage system receive node to local physical data rate by
              node.
            value: node_receive_node_to_local_physical_data_rate
          node_total_node_to_local_physical_data_rate:
            description: Storage system total node to local physical data rate by
              node.
            value: node_total_node_to_local_physical_data_rate
          core1_system_cpu_utilization:
            description: Core 1 system cpu utilization.
            value: core1_system_cpu_utilization
          core2_system_cpu_utilization:
            description: Core 2 system cpu utilization.
            value: core2_system_cpu_utilization
          core3_system_cpu_utilization:
            description: Core 3 system cpu utilization.
            value: core3_system_cpu_utilization
          core4_system_cpu_utilization:
            description: Core 4 system cpu utilization.
            value: core4_system_cpu_utilization
          core5_system_cpu_utilization:
            description: Core 5 system cpu utilization.
            value: core5_system_cpu_utilization
          core6_system_cpu_utilization:
            description: Core 6 system cpu utilization.
            value: core6_system_cpu_utilization
          core7_system_cpu_utilization:
            description: Core 7 system cpu utilization.
            value: core7_system_cpu_utilization
          core8_system_cpu_utilization:
            description: Core 8 system cpu utilization.
            value: core8_system_cpu_utilization
          core9_system_cpu_utilization:
            description: Core 9 system cpu utilization.
            value: core9_system_cpu_utilization
          core10_system_cpu_utilization:
            description: Core 10 system cpu utilization.
            value: core10_system_cpu_utilization
          core11_system_cpu_utilization:
            description: Core 11 system cpu utilization.
            value: core11_system_cpu_utilization
          core12_system_cpu_utilization:
            description: Core 12 system cpu utilization.
            value: core12_system_cpu_utilization
          snapshot_written_capacity:
            description: Storage system snapshot written capacity in bytes.
            value: snapshot_written_capacity
          snapshot_provisioned_capacity:
            description: Storage system snapshot provisioned capacity in bytes.
            value: snapshot_provisioned_capacity
          raw_capacity:
            description: Storage system raw capacity in bytes.
            value: raw_capacity
          written_capacity_limit:
            description: Storage system written capacity limit.
            value: written_capacity_limit
          mapped_capacity:
            description: Storage system mapped capacity in bytes.
            value: mapped_capacity
          unmapped_capacity:
            description: Storage system unmapped capacity in bytes.
            value: unmapped_capacity
          used_written_capacity:
            description: Storage system used written capacity in bytes.
            value: used_written_capacity
          available_written_capacity:
            description: Storage system available written capacity in bytes.
            value: available_written_capacity
          file_system_capacity:
            description: Storage system file system capacity in bytes.
            value: file_system_capacity
          available_file_system_capacity:
            description: Storage system available file system capacity in bytes.
            value: available_file_system_capacity
          used_file_system_capacity:
            description: Storage system used file system capacity in bytes.
            value: used_file_system_capacity
          used_file_system_capacity_percentage:
            description: Storage system used file system capacity percentage.
            value: used_file_system_capacity_percentage
          used_written_capacity_percentage:
            description: Storage system used written capacity percentage.
            value: used_written_capacity_percentage
          total_provisioned_capacity_percentage:
            description: Storage system total provisioned capacity percentage.
            value: total_provisioned_capacity_percentage
          mapped_capacity_percentage:
            description: Storage system mapped capacity percentage.
            value: mapped_capacity_percentage
          used_capacity_percentage:
            description: Storage system used capacity percentage.
            value: used_capacity_percentage
          capacity_percentage:
            description: Storage system capacity percentage.
            value: capacity_percentage
          total_usable_capacity:
            description: Storage system total usable capacity.
            value: total_usable_capacity
          total_capacity:
            description: Storage system used total capacity in bytes.
            value: total_capacity
          safeguarded_capacity:
            description: Storage system used safeguarded capacity in bytes.
            value: safeguarded_capacity
          safeguarded_used_capacity_percentage:
            description: Storage system used safeguarded used capacity percentage
              in bytes.
            value: safeguarded_used_capacity_percentage
          available_system_capacity:
            description: Storage system available system capacity in bytes.
            value: available_system_capacity
          available_capacity_percentage:
            description: Storage system available capacity percentage.
            value: available_capacity_percentage
          drive_compression_savings_percentage:
            description: Storage system drive compression savings percentage.
            value: drive_compression_savings_percentage
          total_compression_savings_percentage:
            description: Storage system total compression savings percentage.
            value: total_compression_savings_percentage
          deduplication_savings_percentage:
            description: Storage system deduplication savings percentage.
            value: deduplication_savings_percentage
          total_savings_percentage:
            description: Storage system total savings percentage.
            value: total_savings_percentage
          total_compression_savings:
            description: Storage system total compression savings in bytes.
            value: total_compression_savings
          deduplication_savings:
            description: Storage system deduplication savings in bytes.
            value: deduplication_savings
          drive_compression_savings:
            description: Storage system drive compression savings in bytes.
            value: drive_compression_savings
          total_compression_ratio:
            description: Storage system total compression ratio.
            value: total_compression_ratio
          drive_compression_ratio:
            description: Storage system drive compression ratio.
            value: drive_compression_ratio
          data_reduction_ratio:
            description: Storage system data reduction ratio.
            value: data_reduction_ratio
          pool_compression_ratio:
            description: Storage system pool compression ratio.
            value: pool_compression_ratio
          pool_compression_savings:
            description: Storage system pool compression savings in bytes.
            value: pool_compression_savings
          pool_compression_savings_percentage:
            description: Storage system pool compression savings percentage.
            value: pool_compression_savings_percentage
          total_savings_ratio:
            description: Storage system total savings ratio.
            value: total_savings_ratio
          overprovisioned_capacity:
            description: Storage system over provisioned capacity in bytes.
            value: overprovisioned_capacity
          overhead_capacity:
            description: Storage system overhead capacity in bytes.
            value: overhead_capacity
          capacity_to_be_licensed:
            description: Storage system capacity to be licensed in bytes.
            value: capacity_to_be_licensed
          monitored_back_end_capacity:
            description: Storage system monitored backend capacity in bytes.
            value: monitored_back_end_capacity
          unmonitored_back_end_capacity:
            description: Storage system unmonitored backend capacity in bytes.
            value: unmonitored_back_end_capacity
          read_cache:
            description: Storage system read cache in bytes.
            value: read_cache
          write_cache:
            description: Storage system write cache in bytes.
            value: write_cache
          available_volume_capacity:
            description: Storage system available volume capacity in bytes.
            value: available_volume_capacity
          flashcopy_used_capacity:
            description: Storage system flashcopy used capacity in bytes.
            value: flashcopy_used_capacity
          flashcopy_provisioned_capacity:
            description: Storage system flashcopy provisioned capacity in bytes.
            value: flashcopy_provisioned_capacity
          data_reduction:
            description: Storage system data reduction in bytes.
            value: data_reduction
          data_reduction_percentage:
            description: Storage system data reduction percentage.
            value: data_reduction_percentage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/general-groups/{general_groups_uuid}/subgroups:
    get:
      tags:
      - General Groups APIs
      summary: Returns details of all subgroups for an general groups.
      parameters:
      - name: general_groups_uuid
        in: path
        description: The unique identifier of the applications in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts:
    get:
      tags:
      - Tenant APIs
      summary: Returns details of all hosts for a particular tenant.(This API is available
        for both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for all hosts in a tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          default: Sample
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 12H, i.e. 12 hours. The duration ends with h/H or d/D or m/M, which\
          \ refers to duration hours or days or minutes."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          host_disk_read_io_rate:
            description: Hosts read I/O rate aggregated by drives.
            value: host_disk_read_io_rate
          host_disk_write_io_rate:
            description: Hosts write I/O rate aggregated by drives.
            value: host_disk_write_io_rate
          host_total_disk_io_rate:
            description: Hosts total I/O rate aggregated by drives.
            value: host_total_disk_io_rate
          host_disk_read_data_rate:
            description: Hosts read data rate aggregated by drives.
            value: host_disk_read_data_rate
          host_disk_write_data_rate:
            description: Hosts write data rate aggregated by drives.
            value: host_disk_write_data_rate
          host_disk_total_data_rate:
            description: Hosts total data rate aggregated by drives.
            value: host_disk_total_data_rate
          host_disk_read_response_time:
            description: Hosts read data rate aggregated by drives.
            value: host_disk_read_response_time
          host_disk_write_response_time:
            description: Hosts write data rate aggregated by drives.
            value: host_disk_write_response_time
          host_disk_total_response_time:
            description: Hosts total data rate aggregated by drives.
            value: host_disk_total_response_time
          total_cpu_utilization:
            description: The average percentage of time that the processors on a node
              are busy doing user tasks and system tasks.
            value: total_cpu_utilization
          total_memory_utilization:
            description: The average percentage of memory that is used on a node.
              This value includes the memory that is used for cache and buffer memory.
            value: total_memory_utilization
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/statistics:
    get:
      tags:
      - Metrics APIs
      summary: Return top hosts utilization by capacity & performance for a storage
        system
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: limit
        in: query
        description: Retrieves a specified number of top utilization based on the
          provided limit. Default is 5 records
        schema:
          format: int32
          default: "5"
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: type
        in: query
        required: true
        schema:
          type: string
        examples:
          host_disk_overall_total_io_rate:
            description: Host total I/O rate aggregated by drives.
            value: host_disk_overall_total_io_rate
          host_used_san_capacity:
            description: Host used san capacity.
            value: host_used_san_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopUtilizationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}:
    get:
      tags:
      - Host APIs
      summary: Returns details about a specific host for a particular tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique id of the host.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/datastores:
    get:
      tags:
      - Host APIs
      summary: Returns details of all datastores available in a particular host for
        a given tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique id of the host
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostDatastoresResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/datastores/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for host data stores for a particular
        tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          host_disk_read_io_rate:
            description: Host read I/O rate for data stores
            value: host_disk_read_io_rate
          host_disk_write_io_rate:
            description: Host write I/O rate for data stores.
            value: host_disk_write_io_rate
          host_total_disk_io_rate:
            description: Host total I/O rate for data stores.
            value: host_total_disk_io_rate
          host_disk_read_data_rate:
            description: Host read data rate for data stores.
            value: host_disk_read_data_rate
          host_disk_write_data_rate:
            description: Host write data rate for data stores.
            value: host_disk_write_data_rate
          host_disk_total_data_rate:
            description: Host total data rate for data stores.
            value: host_disk_total_data_rate
          host_disk_read_response_time:
            description: Host read data rate for data stores.
            value: host_disk_read_response_time
          host_disk_write_response_time:
            description: Host write data rate for data stores.
            value: host_disk_write_response_time
          host_disk_total_response_time:
            description: Host total data rate for data stores.
            value: host_disk_total_response_time
      requestBody:
        description: "Pass an array of natural keys to fetch specified data stores'\
          \ metrics details. Maximum 30 natural keys are allowed. To retrieve metrics\
          \ details for all data stores pass an empty array, e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/datastores/{datastore_nk}:
    get:
      tags:
      - Host APIs
      summary: Returns specific details about a datastore present in a vCenter host
        on a particular tenant.
      parameters:
      - name: datastore_nk
        in: path
        description: The natural key of the datastore.
        required: true
        schema:
          type: string
      - name: host_uuid
        in: path
        description: The unique id of the host
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostDatastoresResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/drives:
    get:
      tags:
      - Host APIs
      summary: Returns details of all drives for a specified host for a particular
        tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique id of the host
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostDrivesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/drives/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for host drives for a particular
        tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          host_disk_read_io_rate:
            description: Host read I/O rate for drives
            value: host_disk_read_io_rate
          host_disk_write_io_rate:
            description: Host write I/O rate for drives.
            value: host_disk_write_io_rate
          host_total_disk_io_rate:
            description: Host total I/O rate for drives.
            value: host_total_disk_io_rate
          host_disk_read_data_rate:
            description: Host read data rate for drives.
            value: host_disk_read_data_rate
          host_disk_write_data_rate:
            description: Host write data rate for drives.
            value: host_disk_write_data_rate
          host_disk_total_data_rate:
            description: Host total data rate for drives.
            value: host_disk_total_data_rate
          host_disk_read_response_time:
            description: Host read data rate for drives.
            value: host_disk_read_response_time
          host_disk_write_response_time:
            description: Host write data rate for drives.
            value: host_disk_write_response_time
          host_disk_total_response_time:
            description: Host total data rate for drives.
            value: host_disk_total_response_time
      requestBody:
        description: "Pass an array of natural keys to fetch specified drives' metrics\
          \ details. Maximum 30 natural keys are allowed. To retrieve metrics details\
          \ for all drives pass an empty array, e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/drives/{drive_nk}:
    get:
      tags:
      - Host APIs
      summary: Returns details about a specific drive for a specified host for a particular
        tenant.
      parameters:
      - name: drive_nk
        in: path
        description: The natural key of the drive.
        required: true
        schema:
          type: string
      - name: host_uuid
        in: path
        description: The unique id of the host
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostDrivesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/host-bus-adapters:
    get:
      tags:
      - Host APIs
      summary: Returns details of all host bus adapter for a specified host for a
        particular tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique id of the host
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostHbasResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/host-bus-adapters/{host_bus_adapter_nk}:
    get:
      tags:
      - Host APIs
      summary: Returns details about a specific HBA for a specified host for a particular
        tenant.
      parameters:
      - name: host_bus_adapter_nk
        in: path
        description: The natural key of the HBA.
        required: true
        schema:
          type: string
      - name: host_uuid
        in: path
        description: The unique id of host
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostHbasResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance metrics values for particular host in a tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          default: Sample
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 12H, i.e. 12 hours. The duration ends with h/H or d/D or m/M, which\
          \ refers to duration hours or days or minutes."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          host_disk_read_io_rate:
            description: Hosts read I/O rate aggregated by drives.
            value: host_disk_read_io_rate
          host_disk_write_io_rate:
            description: Hosts write I/O rate aggregated by drives.
            value: host_disk_write_io_rate
          host_total_disk_io_rate:
            description: Hosts total I/O rate aggregated by drives.
            value: host_total_disk_io_rate
          host_disk_read_data_rate:
            description: Hosts read data rate aggregated by drives.
            value: host_disk_read_data_rate
          host_disk_write_data_rate:
            description: Hosts write data rate aggregated by drives.
            value: host_disk_write_data_rate
          host_disk_total_data_rate:
            description: Hosts total data rate aggregated by drives.
            value: host_disk_total_data_rate
          host_disk_read_response_time:
            description: Hosts read data rate aggregated by drives.
            value: host_disk_read_response_time
          host_disk_write_response_time:
            description: Hosts write data rate aggregated by drives.
            value: host_disk_write_response_time
          host_disk_total_response_time:
            description: Hosts total data rate aggregated by drives.
            value: host_disk_total_response_time
          total_cpu_utilization:
            description: The average percentage of time that the processors on a node
              are busy doing user tasks and system tasks.
            value: total_cpu_utilization
          total_memory_utilization:
            description: The average percentage of memory that is used on a node.
              This value includes the memory that is used for cache and buffer memory.
            value: total_memory_utilization
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/virtual-machines:
    get:
      tags:
      - Host APIs
      summary: Returns details of all virtual machines for a specified host for a
        particular tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique id of the host.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostVMsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/virtual-machines/{virtual_machine_uuid}:
    get:
      tags:
      - Host APIs
      summary: Returns details about a specific virtual machine for a specified host
        for a particular tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique id of the host.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: virtual_machine_uuid
        in: path
        description: The unique id of virtual machine.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostVMsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/vmdks:
    get:
      tags:
      - Host APIs
      summary: Returns details of all VMDKs for a specified host for a particular
        tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique id of the host.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostVMDKsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/vmdks/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for host VMDKs for a particular tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          host_disk_read_io_rate:
            description: Host read I/O rate for VMDKs
            value: host_disk_read_io_rate
          host_disk_write_io_rate:
            description: Host write I/O rate for VMDKs.
            value: host_disk_write_io_rate
          host_total_disk_io_rate:
            description: Host total I/O rate for VMDKs.
            value: host_total_disk_io_rate
          host_disk_read_data_rate:
            description: Host read data rate for VMDKs.
            value: host_disk_read_data_rate
          host_disk_write_data_rate:
            description: Host write data rate for VMDKs.
            value: host_disk_write_data_rate
          host_disk_total_data_rate:
            description: Host total data rate for VMDKs.
            value: host_disk_total_data_rate
          host_disk_read_response_time:
            description: Host read data rate for VMDKs.
            value: host_disk_read_response_time
          host_disk_write_response_time:
            description: Host write data rate for VMDKs.
            value: host_disk_write_response_time
          host_disk_total_response_time:
            description: Host total data rate for VMDKs.
            value: host_disk_total_response_time
      requestBody:
        description: "Pass an array of natural keys to fetch specified VMDKs' metrics\
          \ details. Maximum 30 natural keys are allowed. To retrieve metrics details\
          \ for all VMDKs pass an empty array, e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/hosts/{host_uuid}/vmdks/{vmdk_nk}:
    get:
      tags:
      - Host APIs
      summary: Returns details about a specific vmdk for a specified host for a particular
        tenant.
      parameters:
      - name: host_uuid
        in: path
        description: The unique id of the host.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: vmdk_nk
        in: path
        description: The natural key of the vmdk.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostVMDKsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/managed-capacity:
    get:
      tags:
      - Tenant APIs
      summary: Get managed capacity details of all storage systems in a particular
        tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/notifications:
    get:
      tags:
      - Tenant APIs
      summary: Returns all notifications for a particular tenant.(This API is available
        for both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: duration
        in: query
        description: Notifications Requested for particular Duration(end with 'd/D'
          if day(s) or 'h/H' if hour(s))
        schema:
          type: string
      - name: severity
        in: query
        description: "Notifications Requested for particular Severity(values are critical,\
          \ critical_acknowledged, warning, warning_acknowledged, info, info_acknowledged)"
        schema:
          default: ""
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_key: []
  /restapi/v1/tenants/{tenant_uuid}/pools:
    get:
      tags:
      - Tenant APIs
      summary: Returns all pools for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/rank-system-partition:
    post:
      tags:
      - Workload APIs
      summary: Returns rank value for a storage system for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      requestBody:
        description: Partition migration request parameters
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/StoragePartitionMobilityAdvisoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePartitionMobilityAdvisoryResponses'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems:
    get:
      tags:
      - Tenant APIs
      summary: Returns all storage systems for a particular tenant.(This API is available
        for both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: storage-type
        in: query
        description: "The type of the storage system. Accepted values are block, filer\
          \ and object. If not specified, it displays all storage systems added to\
          \ the tenant."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSystems'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns capacity and performance metric values for all storage system
        for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: storage-type
        in: query
        description: "The type of the storage system. To get filer or object storage\
          \ systems, pass 'filer' or 'object'. If not specified, the default block\
          \ storage system will be provided."
        schema:
          default: block
          type: string
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by volumes.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by volumes.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by volumes.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by volumes.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by volumes.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by volumes.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by volumes.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by volumes.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by volumes.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by volumes.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by volumes.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by volumes.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by volumes.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by volumes.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              volumes.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by volumes.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by volumes.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by volumes.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by volumes.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by volumes.
            value: volume_host_time_percentage
          volume_utilization:
            description: Storage system utilization value aggregated by volumes.
            value: volume_utilization
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          port_send_io_rate:
            description: Storage system port send I/O rate aggregated by Fibre Channel
              ports.
            value: port_send_io_rate
          port_receive_io_rate:
            description: Storage system port receive I/O rate aggregated by Fibre
              Channel ports.
            value: port_receive_io_rate
          total_port_io_rate:
            description: Storage system port total I/O rate aggregated by Fibre Channel
              ports.
            value: total_port_io_rate
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_response_time:
            description: Storage system port send response time aggregated by Fibre
              Channel ports.
            value: port_send_response_time
          port_receive_response_time:
            description: Storage system port receive response time aggregated by Fibre
              Channel ports.
            value: port_receive_response_time
          port_total_response_time:
            description: Storage system port total response time aggregated by Fibre
              Channel ports.
            value: port_total_response_time
          ip_replication_transfer_send_size:
            description: Storage system IP replication transfer send size.
            value: ip_replication_transfer_send_size
          ip_replication_transfer_receive_size:
            description: Storage system IP replication transfer receive size.
            value: ip_replication_transfer_receive_size
          ip_replication_transfer_total_size:
            description: Storage system IP replication transfer total size.
            value: ip_replication_transfer_total_size
          ip_replication_latency:
            description: Storage system IP replication latency.
            value: ip_replication_latency
          ip_replication_to_remote_node_send_data_rate:
            description: Storage system IP replication to remote node send data rate.
            value: ip_replication_to_remote_node_send_data_rate
          ip_replication_to_remote_node_receive_data_rate:
            description: Storage system IP replication to remote node receive data
              rate.
            value: ip_replication_to_remote_node_receive_data_rate
          ip_replication_to_remote_node_re_send_data_rate:
            description: Storage system IP replication to remote node re-send data
              rate.
            value: ip_replication_to_remote_node_re_send_data_rate
          ip_replication_compressed_send_data_rate:
            description: Storage system IP replication compressed send data rate.
            value: ip_replication_compressed_send_data_rate
          ip_replication_compressed_receive_data_rate:
            description: Storage system IP replication compressed receive data rate.
            value: ip_replication_compressed_receive_data_rate
          physical_node_send_data_rate:
            description: Storage system physical node send data rate aggregated for
              all nodes.
            value: physical_node_send_data_rate
          physical_node_receive_data_rate:
            description: Storage system physical node receive data rate aggregated
              for all nodes.
            value: physical_node_receive_data_rate
          physical_node_total_data_rate:
            description: Storage system physical node total data rate aggregated for
              all nodes.
            value: physical_node_total_data_rate
          node_logical_send_data_rate:
            description: Storage system node logical send data rate aggregated for
              all nodes.
            value: node_logical_send_data_rate
          node_logical_receive_data_rate:
            description: Storage system node logical receive data rate aggregated
              for all nodes.
            value: node_logical_receive_data_rate
          node_logical_total_data_rate:
            description: Storage system node logical total data rate aggregated for
              all nodes.
            value: node_logical_total_data_rate
          cpu_utilization:
            description: Storage system cpu utilization aggregated for all nodes.
            value: cpu_utilization
          gc_moved_size:
            description: Storage system garbage collection moved size aggregated for
              all nodes.
            value: gc_moved_size
          node_read_cache_fullness:
            description: Storage system node read cache fullness aggregated for all
              nodes.
            value: node_read_cache_fullness
          node_write_cache_fullness:
            description: Storage system node write cache fullness aggregated for all
              nodes.
            value: node_write_cache_fullness
          max_node_read_cache_fullness:
            description: Storage system max node read cache fullness aggregated for
              all nodes.
            value: max_node_read_cache_fullness
          max_node_write_cache_fullness:
            description: Storage system max node write cache fullness aggregated for
              all nodes.
            value: max_node_write_cache_fullness
          filesystem_and_node_read_io:
            description: Storage file system node read I/O.
            value: filesystem_and_node_read_io
          filesystem_and_node_write_io:
            description: Storage file system node write I/O.
            value: filesystem_and_node_write_io
          filesystem_and_node_total_io:
            description: Storage file system node total I/O.
            value: filesystem_and_node_total_io
          filesystem_and_node_bytes_read:
            description: Storage file system node read bytes.
            value: filesystem_and_node_bytes_read
          filesystem_and_node_bytes_write:
            description: Storage file system node write bytes.
            value: filesystem_and_node_bytes_write
          filesystem_and_node_bytes_total:
            description: Storage file system node total bytes.
            value: filesystem_and_node_bytes_total
          filesystem_read_response_time:
            description: Storage file system read response time.
            value: filesystem_read_response_time
          filesystem_write_response_time:
            description: Storage file system write response time.
            value: filesystem_write_response_time
          filesystem_total_response_time:
            description: Storage file system total response time.
            value: filesystem_total_response_time
          filesystem_read_transfer_size:
            description: Storage file system read transfer size.
            value: filesystem_read_transfer_size
          filesystem_write_transfer_size:
            description: Storage file system write transfer size.
            value: filesystem_write_transfer_size
          filesystem_total_transfer_size:
            description: Storage file system total transfer size.
            value: filesystem_total_transfer_size
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
          usable_capacity:
            description: Storage system total usable capacity.
            value: usable_capacity
          total_provisioned_capacity:
            description: Storage system total provisioned capacity.
            value: total_provisioned_capacity
          shortfall_percent:
            description: Storage system shortfall percentage.
            value: shortfall_percent
          recent_growth:
            description: Storage system recent growth in bytes.
            value: recent_growth
          recent_fill_rate:
            description: Storage system recent fill rate in bytes.
            value: recent_fill_rate
          temperature_c:
            description: Storage system's temperature in Celsius.
            value: temperature_c
          temperature_f:
            description: Storage system's temperature in Fahrenheit.
            value: temperature_f
          total_power_w:
            description: Storage system's total power.
            value: total_power_w
          power_efficiency:
            description: Storage system's power efficiency.
            value: power_efficiency
          co2_emission:
            description: Storage system's carbon emission.
            value: co2_emission
          volume_normal_read_io_rate:
            description: Storage system normal read I/O rate for a volume.
            value: volume_normal_read_io_rate
          volume_normal_write_io_rate:
            description: Storage system normal write I/O rate for a volume.
            value: volume_normal_write_io_rate
          volume_normal_total_io_rate:
            description: Storage system normal total I/O rate for a volume.
            value: volume_normal_total_io_rate
          volume_sequential_read_io_rate:
            description: Storage system sequential read I/O rate for a volume.
            value: volume_sequential_read_io_rate
          volume_sequential_write_io_rate:
            description: Storage system sequential write I/O rate for a volume.
            value: volume_sequential_write_io_rate
          volume_sequential_total_io_rate:
            description: Storage system sequential total I/O rate for a volume.
            value: volume_sequential_total_io_rate
          volume_record_mode_reads_io_rate:
            description: Storage system record mode read I/O rate for a volume.
            value: volume_record_mode_reads_io_rate
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a volume.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a volume.
            value: volume_write_cache_delay_io_rate
          volume_high_performance_ficon_read:
            description: Storage system HPF read for a volume.
            value: volume_high_performance_ficon_read
          volume_high_performance_ficon_write:
            description: Storage system HPF write for a volume.
            value: volume_high_performance_ficon_write
          volume_high_performance_ficon_total:
            description: Storage system HPF total for a volume.
            value: volume_high_performance_ficon_total
          volume_pprc_transfer_rate_others:
            description: Storage system PPRC transfer rate for a volume.
            value: volume_pprc_transfer_rate_others
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a volume.
            value: volume_unaligned_unmap_io_rate
          volume_normal_read_io_cache_hits:
            description: Storage system normal read I/O cache hits for a volume.
            value: volume_normal_read_io_cache_hits
          volume_normal_write_io_cache_hits:
            description: Storage system normal write I/O cache hits for a volume.
            value: volume_normal_write_io_cache_hits
          volume_normal_total_io_cache_hits:
            description: Storage system normal total I/O cache hits for a volume.
            value: volume_normal_total_io_cache_hits
          volume_sequential_read_io_cache_hits:
            description: Storage system sequential read I/O cache hits for a volume.
            value: volume_sequential_read_io_cache_hits
          volume_sequential_write_io_cache_hits:
            description: Storage system sequential write I/O cache hits for a volume.
            value: volume_sequential_write_io_cache_hits
          volume_sequential_total_io_cache_hits:
            description: Storage system sequential total I/O cache hits for a volume.
            value: volume_sequential_total_io_cache_hits
          volume_record_mode_reads_cache_hits:
            description: Storage system record mode reads cache hits for a volume.
            value: volume_record_mode_reads_cache_hits
          volume_data_read_cache_hits:
            description: Storage system data read cache hits for a volume.
            value: volume_data_read_cache_hits
          volume_data_write_cache_hits:
            description: Storage system data write cache hits for a volume.
            value: volume_data_write_cache_hits
          volume_data_overall_cache_hits:
            description: Storage system data overall cache hits for a volume.
            value: volume_data_overall_cache_hits
          volume_io_ssd_read_cache_hits:
            description: Storage system I/O SSD read cache hits for a volume.
            value: volume_io_ssd_read_cache_hits
          volume_data_ssd_read_cache_hits:
            description: Storage system data SSD read cache hits for a volume.
            value: volume_data_ssd_read_cache_hits
          volume_peak_read_response_time:
            description: Storage system peak read response time for a volume.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a volume.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a volume.
            value: volume_peak_unmap_response_time
          volume_read_cache_hit_response_time:
            description: Storage system read cache hit response time for a volume.
            value: volume_read_cache_hit_response_time
          volume_write_cache_hit_response_time:
            description: Storage system write cache hit response time for a volume.
            value: volume_write_cache_hit_response_time
          volume_overall_cache_hit_response_time:
            description: Storage system overall cache hit response time for a volume.
            value: volume_overall_cache_hit_response_time
          volume_read_cache_miss_response_time:
            description: Storage system read cache miss response time for a volume.
            value: volume_read_cache_miss_response_time
          volume_write_cache_miss_response_time:
            description: Storage system write cache miss response time for a volume.
            value: volume_write_cache_miss_response_time
          volume_overall_cache_miss_response_time:
            description: Storage system overall cache miss response time for a volume.
            value: volume_overall_cache_miss_response_time
          volume_response_time_by_transfer_size_small:
            description: Storage system response time for small size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_small
          volume_response_time_by_transfer_size_medium:
            description: Storage system response time for medium size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_medium
          volume_response_time_by_transfer_size_large:
            description: Storage system response time for large size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_large
          volume_response_time_by_transfer_size_very_large:
            description: Storage system response time for very large size transfer
              for a volume.
            value: volume_response_time_by_transfer_size_very_large
          volume_response_time_ssd_read_cache_hits:
            description: Storage system response time for ssd read cache hits for
              a volume.
            value: volume_response_time_ssd_read_cache_hits
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a volume.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a volume.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a volume.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a volume.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a volume.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a volume.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a volume.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a volume.
            value: volume_dirty_writes_cache_hits
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a volume.
            value: volume_cache_to_disk_transfer_rate
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a volume.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              volume.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              volume.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a volume.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a volume.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a volume.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a volume.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a volume.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a volume.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a volume.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a volume.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a volume.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a volume.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a volume.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a volume.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a volume.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a volume.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a volume.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a volume.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a volume.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a volume.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a volume.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a volume.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a volume.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a volume.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a volume.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a volume.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a volume.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a volume.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a volume.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a volume.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a volume.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_io_rate_compressed_volumes:
            description: Storage system I/O rate compressed volumes for a volume.
            value: volume_io_rate_compressed_volumes
          volume_data_rate_compressed_volumes:
            description: Storage system data rate compressed volumes for a volume.
            value: volume_data_rate_compressed_volumes
          volume_response_time_compressed_volumes:
            description: Storage system response time compressed volumes for a volume.
            value: volume_response_time_compressed_volumes
          volume_io_rate_uncompressed_volumes:
            description: Storage system I/O rate uncompressed volumes for a volume.
            value: volume_io_rate_uncompressed_volumes
          volume_data_rate_uncompressed_volumes:
            description: Storage system data rate uncompressed volumes for a volume.
            value: volume_data_rate_uncompressed_volumes
          volume_response_time_uncompressed_volumes:
            description: Storage system response time uncompressed volumes for a volume.
            value: volume_response_time_uncompressed_volumes
          volume_percentage_high_performance_ficon:
            description: Storage system HDF percentage for a volume.
            value: volume_percentage_high_performance_ficon
          volume_small_io_transfer_size:
            description: Storage system small I/O transfer size for a volume.
            value: volume_small_io_transfer_size
          volume_medium_io_transfer_size:
            description: Storage system medium I/O transfer size for a volume.
            value: volume_medium_io_transfer_size
          volume_large_io_transfer_size:
            description: Storage system large I/O transfer size for a volume.
            value: volume_large_io_transfer_size
          volume_very_large_io_transfer_size:
            description: Storage system very large I/O transfer size for a volume.
            value: volume_very_large_io_transfer_size
          volume_small_data_transfer_size:
            description: Storage system small data transfer size for a volume.
            value: volume_small_data_transfer_size
          volume_medium_data_transfer_size:
            description: Storage system medium data transfer size for a volume.
            value: volume_medium_data_transfer_size
          volume_large_data_transfer_size:
            description: Storage system large data transfer size for a volume.
            value: volume_large_data_transfer_size
          volume_very_large_data_transfer_size:
            description: Storage very large data transfer size for a volume.
            value: volume_very_large_data_transfer_size
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              volume.
            value: volume_cache_to_host_transfer_response_time_other
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          port_send_port_to_host_io_rate:
            description: Storage system send port to host I/O rate by port.
            value: port_send_port_to_host_io_rate
          port_receive_port_to_host_io_rate:
            description: Storage system receive port to host I/O rate by port.
            value: port_receive_port_to_host_io_rate
          port_total_port_to_host_io_rate:
            description: Storage system total port to host I/O rate by port.
            value: port_total_port_to_host_io_rate
          port_send_port_to_disk_io_rate:
            description: Storage system send port to disk I/O rate by port.
            value: port_send_port_to_disk_io_rate
          port_receive_port_to_disk_io_rate-cache_delay_percentage:
            description: Storage system receive port to disk I/O rate cache delay
              percentage by port.
            value: port_receive_port_to_disk_io_rate-cache_delay_percentage
          port_total_port_to_disk_io_rate:
            description: Storage system total port to disk I/O rate by port.
            value: port_total_port_to_disk_io_rate
          port_send_port_to_local_node_io_rate:
            description: Storage system send port to local node I/O rate by port.
            value: port_send_port_to_local_node_io_rate
          port_receive_port_to_local_node_io_rate:
            description: Storage system receive port to local node I/O rate by port.
            value: port_receive_port_to_local_node_io_rate
          port_total_port_to_local_node_io_rate:
            description: Storage system total port to local node I/O rate by port.
            value: port_total_port_to_local_node_io_rate
          port_send_port_to_remote_node_io_rate:
            description: Storage system send port to remote node I/O rate by port.
            value: port_send_port_to_remote_node_io_rate
          port_receive_port_to_remote_node_io_rate:
            description: Storage system receive port to remote node I/O rate by port.
            value: port_receive_port_to_remote_node_io_rate
          port_total_port_to_remote_node_io_rate:
            description: Storage system total port to remote node I/O rate by port.
            value: port_total_port_to_remote_node_io_rate
          'port_send_port_to_host_data_rate ':
            description: Storage system send port to host data rate by port.
            value: port_send_port_to_host_data_rate
          port_receive_port_to_host_data_rate:
            description: Storage system receive port to host data rate by port.
            value: port_receive_port_to_host_data_rate
          port_total_port_to_host_data_rate:
            description: Storage system total port to host data rate by port.
            value: port_total_port_to_host_data_rate
          port_send_port_to_disk_data_rate:
            description: Storage system send port to disk data rate by port.
            value: port_send_port_to_disk_data_rate
          port_receive_port_to_disk_data_rate:
            description: Storage system receive port to disk data rate by port.
            value: port_receive_port_to_disk_data_rate
          port_total_port_to_disk_data_rate:
            description: Storage system total port to disk data rate by port.
            value: port_total_port_to_disk_data_rate
          port_send_port_to_local_node_data_rate:
            description: Storage system send port to local node data rate by port.
            value: port_send_port_to_local_node_data_rate
          port_receive_port_to_local_node_data_rate:
            description: Storage system receive port to local node data rate by port.
            value: port_receive_port_to_local_node_data_rate
          port_total_port_to_local_node_data_rate:
            description: Storage system total port to local node data rate by port.
            value: port_total_port_to_local_node_data_rate
          port_send_port_to_remote_node_data_rate:
            description: Storage system send port to remote node data rate by port.
            value: port_send_port_to_remote_node_data_rate
          port_receive_port_to_remote_node_data_rate:
            description: Storage system receive port to remote node data rate by port.
            value: port_receive_port_to_remote_node_data_rate
          port_total_port_to_remote_node_data_rate:
            description: Storage system total port to remote node data rate by port.
            value: port_total_port_to_remote_node_data_rate
          port_send_port_to_local_node_response_time:
            description: Storage system send port to local node response time by port.
            value: port_send_port_to_local_node_response_time
          port_receive_port_to_local_node_response_time:
            description: Storage system receive port to local node response time by
              port.
            value: port_receive_port_to_local_node_response_time
          port_total_port_to_local_node_response_time:
            description: Storage system total port to local node response time by
              port.
            value: port_total_port_to_local_node_response_time
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc error frame error by port.
            value: port_crc_errors_frame_errors
          port_invalid_relative_offset_rate_frame_errors:
            description: Storage system invalid relative offset rate frame errors
              by port.
            value: port_invalid_relative_offset_rate_frame_errors
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_sequence_timeouts_link_errors:
            description: Storage system sequence timeouts link errors by port.
            value: port_sequence_timeouts_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_zero_buffer_credit_timer_port_protocol_errors:
            description: Storage system zero buffer credit timer port protocol errors
              by port.
            value: port_zero_buffer_credit_timer_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_out_of_order_data_port_protocol_errors:
            description: Storage system out of order data port protocol errors by
              port.
            value: port_out_of_order_data_port_protocol_errors
          port_out_of_order_ack_port_protocol_errors:
            description: Storage system out of order ack port protocol errors by port.
            value: port_out_of_order_ack_port_protocol_errors
          port_duplicate_frames_port_protocol_errors:
            description: Storage system duplicate frames port protocol errors by port.
            value: port_duplicate_frames_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_send_delay_time_port_protocol_errors:
            description: Storage system send delay time port protocol errors by port.
            value: port_send_delay_time_port_protocol_errors
          port_send_delay_io_percentage_port_protocol_errors:
            description: Storage system send delay I/O percentage port protocol errors
              by port.
            value: port_send_delay_io_percentage_port_protocol_errors
          port_extreme_io_concurrency_rate_overload_errors:
            description: Storage system extreme I/O concurrency rate overload errors
              by port.
            value: port_extreme_io_concurrency_rate_overload_errors
          port_extreme_io_concurrency_percentage_overload_errors:
            description: Storage system extreme I/O concurrency percentage overload
              errors by port.
            value: port_extreme_io_concurrency_percentage_overload_errors
          port_io_busy_rate_overload_errors:
            description: Storage system I/O busy rate overload errors by port.
            value: port_io_busy_rate_overload_errors
          port_io_busy_percentage_overload_errors:
            description: Storage system I/O busy percentage overload errors by port.
            value: port_io_busy_percentage_overload_errors
          port_io_overrun_rate_overload_errors:
            description: Storage system I/O overrun rate overload errors by port.
            value: port_io_overrun_rate_overload_errors
          port_io_overrun_percentage_overload_errors:
            description: Storage system I/O overrun percentage overload errors by
              port.
            value: port_io_overrun_percentage_overload_errors
          port_zero_send_buffer_credit_percentage_other:
            description: Storage system zero send buffer credit percentage other by
              port.
            value: port_zero_send_buffer_credit_percentage_other
          port_zero_receive_buffer_credit_percentage_other:
            description: Storage system zero receive buffer credit percentage other
              by port.
            value: port_zero_receive_buffer_credit_percentage_other
          port_send_transfer_size:
            description: Storage system send transfer size by port.
            value: port_send_transfer_size
          port_receive_transfer_size:
            description: Storage system receive transfer size by port.
            value: port_receive_transfer_size
          port_overall_transfer_size:
            description: Storage system overall transfer size by port.
            value: port_overall_transfer_size
          port_send_port_to_local_node_queue_time:
            description: Storage system send port to local node queue time by port.
            value: port_send_port_to_local_node_queue_time
          port_receive_port_to_local_node_queue_time:
            description: Storage system receive port to local node queue time by port.
            value: port_receive_port_to_local_node_queue_time
          port_overall_port_to_local_node_queue_time:
            description: Storage system overall port to local node queue time by port.
            value: port_overall_port_to_local_node_queue_time
          port_send_pprc_io_rate:
            description: Storage system send pprc I/O rate by port.
            value: port_send_pprc_io_rate
          port_receive_pprc_io_rate:
            description: Storage system receive pprc I/O rate by port.
            value: port_receive_pprc_io_rate
          port_total_pprc_io_rate:
            description: Storage system total pprc I/O rate by port.
            value: port_total_pprc_io_rate
          port_send_pprc_data_rate:
            description: Storage system send pprc data rate by port.
            value: port_send_pprc_data_rate
          port_receive_pprc_data_rate:
            description: Storage system receive pprc data rate by port.
            value: port_receive_pprc_data_rate
          port_total_pprc_data_rate:
            description: Storage system total pprc data rate by port.
            value: port_total_pprc_data_rate
          port_send_pprc_response_time:
            description: Storage system send pprc response time by port.
            value: port_send_pprc_response_time
          port_receive_pprc_response_time:
            description: Storage system receive pprc response time by port.
            value: port_receive_pprc_response_time
          port_overall_pprc_response_time:
            description: Storage system overall pprc response time by port.
            value: port_overall_pprc_response_time
          node_send_node_to_local_physical_data_rate:
            description: Storage system send node to local physical data rate by node.
            value: node_send_node_to_local_physical_data_rate
          node_receive_node_to_local_physical_data_rate:
            description: Storage system receive node to local physical data rate by
              node.
            value: node_receive_node_to_local_physical_data_rate
          node_total_node_to_local_physical_data_rate:
            description: Storage system total node to local physical data rate by
              node.
            value: node_total_node_to_local_physical_data_rate
          core1_system_cpu_utilization:
            description: Core 1 system cpu utilization.
            value: core1_system_cpu_utilization
          core2_system_cpu_utilization:
            description: Core 2 system cpu utilization.
            value: core2_system_cpu_utilization
          core3_system_cpu_utilization:
            description: Core 3 system cpu utilization.
            value: core3_system_cpu_utilization
          core4_system_cpu_utilization:
            description: Core 4 system cpu utilization.
            value: core4_system_cpu_utilization
          core5_system_cpu_utilization:
            description: Core 5 system cpu utilization.
            value: core5_system_cpu_utilization
          core6_system_cpu_utilization:
            description: Core 6 system cpu utilization.
            value: core6_system_cpu_utilization
          core7_system_cpu_utilization:
            description: Core 7 system cpu utilization.
            value: core7_system_cpu_utilization
          core8_system_cpu_utilization:
            description: Core 8 system cpu utilization.
            value: core8_system_cpu_utilization
          core9_system_cpu_utilization:
            description: Core 9 system cpu utilization.
            value: core9_system_cpu_utilization
          core10_system_cpu_utilization:
            description: Core 10 system cpu utilization.
            value: core10_system_cpu_utilization
          core11_system_cpu_utilization:
            description: Core 11 system cpu utilization.
            value: core11_system_cpu_utilization
          core12_system_cpu_utilization:
            description: Core 12 system cpu utilization.
            value: core12_system_cpu_utilization
          snapshot_written_capacity:
            description: Storage system snapshot written capacity in bytes.
            value: snapshot_written_capacity
          snapshot_provisioned_capacity:
            description: Storage system snapshot provisioned capacity in bytes.
            value: snapshot_provisioned_capacity
          raw_capacity:
            description: Storage system raw capacity in bytes.
            value: raw_capacity
          written_capacity_limit:
            description: Storage system written capacity limit.
            value: written_capacity_limit
          mapped_capacity:
            description: Storage system mapped capacity in bytes.
            value: mapped_capacity
          unmapped_capacity:
            description: Storage system unmapped capacity in bytes.
            value: unmapped_capacity
          used_written_capacity:
            description: Storage system used written capacity in bytes.
            value: used_written_capacity
          available_written_capacity:
            description: Storage system available written capacity in bytes.
            value: available_written_capacity
          file_system_capacity:
            description: Storage system file system capacity in bytes.
            value: file_system_capacity
          available_file_system_capacity:
            description: Storage system available file system capacity in bytes.
            value: available_file_system_capacity
          used_file_system_capacity:
            description: Storage system used file system capacity in bytes.
            value: used_file_system_capacity
          used_file_system_capacity_percentage:
            description: Storage system used file system capacity percentage.
            value: used_file_system_capacity_percentage
          used_written_capacity_percentage:
            description: Storage system used written capacity percentage.
            value: used_written_capacity_percentage
          total_provisioned_capacity_percentage:
            description: Storage system total provisioned capacity percentage.
            value: total_provisioned_capacity_percentage
          mapped_capacity_percentage:
            description: Storage system mapped capacity percentage.
            value: mapped_capacity_percentage
          used_capacity_percentage:
            description: Storage system used capacity percentage.
            value: used_capacity_percentage
          capacity_percentage:
            description: Storage system capacity percentage.
            value: capacity_percentage
          total_usable_capacity:
            description: Storage system total usable capacity.
            value: total_usable_capacity
          total_capacity:
            description: Storage system used total capacity in bytes.
            value: total_capacity
          safeguarded_capacity:
            description: Storage system used safeguarded capacity in bytes.
            value: safeguarded_capacity
          safeguarded_used_capacity_percentage:
            description: Storage system used safeguarded used capacity percentage
              in bytes.
            value: safeguarded_used_capacity_percentage
          available_system_capacity:
            description: Storage system available system capacity in bytes.
            value: available_system_capacity
          available_capacity_percentage:
            description: Storage system available capacity percentage.
            value: available_capacity_percentage
          drive_compression_savings_percentage:
            description: Storage system drive compression savings percentage.
            value: drive_compression_savings_percentage
          total_compression_savings_percentage:
            description: Storage system total compression savings percentage.
            value: total_compression_savings_percentage
          deduplication_savings_percentage:
            description: Storage system deduplication savings percentage.
            value: deduplication_savings_percentage
          total_savings_percentage:
            description: Storage system total savings percentage.
            value: total_savings_percentage
          total_compression_savings:
            description: Storage system total compression savings in bytes.
            value: total_compression_savings
          deduplication_savings:
            description: Storage system deduplication savings in bytes.
            value: deduplication_savings
          drive_compression_savings:
            description: Storage system drive compression savings in bytes.
            value: drive_compression_savings
          total_compression_ratio:
            description: Storage system total compression ratio.
            value: total_compression_ratio
          drive_compression_ratio:
            description: Storage system drive compression ratio.
            value: drive_compression_ratio
          data_reduction_ratio:
            description: Storage system data reduction ratio.
            value: data_reduction_ratio
          pool_compression_ratio:
            description: Storage system pool compression ratio.
            value: pool_compression_ratio
          pool_compression_savings:
            description: Storage system pool compression savings in bytes.
            value: pool_compression_savings
          pool_compression_savings_percentage:
            description: Storage system pool compression savings percentage.
            value: pool_compression_savings_percentage
          total_savings_ratio:
            description: Storage system total savings ratio.
            value: total_savings_ratio
          overprovisioned_capacity:
            description: Storage system over provisioned capacity in bytes.
            value: overprovisioned_capacity
          overhead_capacity:
            description: Storage system overhead capacity in bytes.
            value: overhead_capacity
          capacity_to_be_licensed:
            description: Storage system capacity to be licensed in bytes.
            value: capacity_to_be_licensed
          monitored_back_end_capacity:
            description: Storage system monitored backend capacity in bytes.
            value: monitored_back_end_capacity
          unmonitored_back_end_capacity:
            description: Storage system unmonitored backend capacity in bytes.
            value: unmonitored_back_end_capacity
          read_cache:
            description: Storage system read cache in bytes.
            value: read_cache
          write_cache:
            description: Storage system write cache in bytes.
            value: write_cache
          available_volume_capacity:
            description: Storage system available volume capacity in bytes.
            value: available_volume_capacity
          flashcopy_used_capacity:
            description: Storage system flashcopy used capacity in bytes.
            value: flashcopy_used_capacity
          flashcopy_provisioned_capacity:
            description: Storage system flashcopy provisioned capacity in bytes.
            value: flashcopy_provisioned_capacity
          data_reduction:
            description: Storage system data reduction in bytes.
            value: data_reduction
          data_reduction_percentage:
            description: Storage system data reduction percentage.
            value: data_reduction_percentage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopUtilizationsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/statistics:
    get:
      tags:
      - Metrics APIs
      summary: Return top clusters utilization by capacity & performance
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: limit
        in: query
        description: Retrieves a specified number of top utilization based on the
          provided limit. Default is 5 records
        schema:
          format: int32
          default: "5"
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: storageType
        in: query
        required: true
        schema:
          type: string
        examples:
          block:
            description: Block storage systems.
            value: block
          file:
            description: File storage systems.
            value: file
          object:
            description: Object storage systems.
            value: object
      - name: type
        in: query
        required: true
        schema:
          type: string
        examples:
          volume_overall_total_io_rate:
            description: Storage system total I/O for a volume.
            value: volume_overall_total_io_rate
          volume_total_data_rate:
            description: Storage system total data rate for a volume
            value: volume_total_data_rate
          volume_total_response_time:
            description: Storage system total response time for a volume.
            value: volume_total_response_time
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopUtilizationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}:
    get:
      tags:
      - Storage System APIs
      summary: Returns details about a specified storage system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSystems'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/advisories:
    get:
      tags:
      - Storage System APIs
      summary: Returns advisories details for a particular storage system.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: duration
        in: query
        description: Advisories requested for particular duration(end with 'm/M' if
          minute(s) or 'h/H' if hour(s)) or 'd/D' if day(s). Advisor retention duration
          is 180 days.
        schema:
          default: 180d
          type: string
      - name: severity
        in: query
        schema:
          type: array
          items:
            type: string
        examples:
          All Severities:
            description: No severity filter applied.
          critical:
            description: Advisor Requested for critical event.
            value: critical
          critical_acknowledged:
            description: Advisor Requested for critical-Acknowledged event.
            value: critical_acknowledged
          warning:
            description: Advisor Requested for warning event.
            value: warning
          warning_acknowledged:
            description: Advisor Requested for warning-Acknowledged event.
            value: warning_acknowledged
          info:
            description: Advisor Requested for informational event.
            value: info
          info_acknowledged:
            description: Advisor Requested for informational-Acknowledged event.
            value: info_acknowledged
          info_approved:
            description: Advisor Requested for informational-Approved event for **SOURCE
              'ADV_CALL_HOME'** only.
            value: info_approved
          info_declined:
            description: Advisor Requested for informational-Declined event for **SOURCE
              'ADV_CALL_HOME'** only.
            value: info_declined
      - name: source
        in: query
        schema:
          type: array
          items:
            type: string
        examples:
          All Sources:
            description: No source filter applied.
          HEALTH_CHECKER:
            description: Advisor Requested for HEALTH_CHECKER.
            value: HEALTH_CHECKER
          ADV_CALL_HOME:
            description: Advisor Requested for ADV_CALL_HOME.
            value: ADV_CALL_HOME
          AI_SUGGESTION:
            description: Advisor Requested for AI_SUGGESTION.
            value: AI_SUGGESTION
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoriesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/alerts:
    get:
      tags:
      - Storage System APIs
      summary: Returns all alerts for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: duration
        in: query
        description: "Alerts can be requested for a specific duration using 'd/D'\
          \ (days), 'h/H' (hours), or 'm/M' (minutes), e.g., '2d', '5h', or '30m';\
          \ maximum allowed duration is 28 days."
        schema:
          default: 28d
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: severity
        in: query
        description: "Alerts Requested for particular Severity(values are critical,\
          \ critical_acknowledged, warning, warning_acknowledged, info, info_acknowledged),\
          \ Multiple severity values can be passed."
        schema:
          type: array
          items:
            type: string
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: type
        in: query
        description: "Type for alerts. supported type: 'security'"
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerts'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
    put:
      tags:
      - Storage System APIs
      summary: "Acknowledge a single or multiple alerts of a given storage system\
        \ in an IBM Storage Insights instance, and clear a ransomware alert reported\
        \ against a storage system volume."
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: It is used to clear a single ransomware alert. The supported
          value is ransomware.
        schema:
          type: string
      requestBody:
        description: The list of alert IDs generated on a storage system in an IBM
          Storage Insights instance.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeAlerts'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/consistency-groups:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all consistency groups for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencyGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/consistency-groups/{consistency_group_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific consistency group for a specified
        storage system for a particular tenant.
      parameters:
      - name: consistency_group_nk
        in: path
        description: The natural key of the consistency group.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencyGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/device-adapters:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all device adapters for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAdaptersResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/device-adapters/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for device adapters in a storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          disk_read_io_rate:
            description: Storage system read I/O rate for a device adapters
            value: disk_read_io_rate
          'disk_write_io_rate ':
            description: Storage system write I/O rate for a device adapters.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate for a device adapters.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate for a device adapters.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate for a device adapters.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate for a device adapters.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate for a device adapters.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate for a device adapters.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate for a device adapters.
            value: disk_total_response_time
          disk_read_transfer_size:
            description: Storage system read transfer size for a device adapters.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size for a device adapters.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by device adapters.
            value: disk_overall_transfer_size
      requestBody:
        description: "device adapters natural keys , fetches metrics for set of natural\
          \ keys if provided or provides metrics for all natural keys in the Storage\
          \ System"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/device-adapters/{device_adapter_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific device adapter for a specified storage
        system for a particular tenant.
      parameters:
      - name: device_adapter_nk
        in: path
        description: The natural key of the Device Adapter.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAdaptersResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/drives:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all the drives for a specified storage system for
        a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDrivesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/drives/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance and capacity metric values for drives in a storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          capacity:
            description: Storage system capacity by drive.
            value: capacity
          physical_capacity:
            description: Storage system physical capacity by drive.
            value: physical_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/drives/{drive_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific drive for a specified storage system
        for a particular tenant.
      parameters:
      - name: drive_nk
        in: path
        description: The natural key of the drive.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageDrivesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/enclosures:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all enclosures for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnclosuresResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/enclosures/{storage_enclosure_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific enclosure for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_enclosure_nk
        in: path
        description: The natural key of the enclosure.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnclosuresResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/fc-ports:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all FC ports for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FCPortsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/fc-ports/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for fc ports in a storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          port_send_io_rate:
            description: Storage system port send I/O rate aggregated by Fibre Channel
              ports.
            value: port_send_io_rate
          port_receive_io_rate:
            description: Storage system port receive I/O rate aggregated by Fibre
              Channel ports.
            value: port_receive_io_rate
          total_port_io_rate:
            description: Storage system port total I/O rate aggregated by Fibre Channel
              ports.
            value: total_port_io_rate
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_response_time:
            description: Storage system port send response time aggregated by Fibre
              Channel ports.
            value: port_send_response_time
          port_receive_response_time:
            description: Storage system port receive response time aggregated by Fibre
              Channel ports.
            value: port_receive_response_time
          port_total_response_time:
            description: Storage system port total response time aggregated by Fibre
              Channel ports.
            value: port_total_response_time
          port_send_port_to_host_io_rate:
            description: Storage system send port to host I/O rate by port.
            value: port_send_port_to_host_io_rate
          port_receive_port_to_host_io_rate:
            description: Storage system receive port to host I/O rate by port.
            value: port_receive_port_to_host_io_rate
          port_total_port_to_host_io_rate:
            description: Storage system total port to host I/O rate by port.
            value: port_total_port_to_host_io_rate
          port_send_port_to_disk_io_rate:
            description: Storage system send port to disk I/O rate by port.
            value: port_send_port_to_disk_io_rate
          port_receive_port_to_disk_io_rate-cache_delay_percentage:
            description: Storage system receive port to disk I/O rate cache delay
              percentage by port.
            value: port_receive_port_to_disk_io_rate-cache_delay_percentage
          port_total_port_to_disk_io_rate:
            description: Storage system total port to disk I/O rate by port.
            value: port_total_port_to_disk_io_rate
          port_send_port_to_local_node_io_rate:
            description: Storage system send port to local node I/O rate by port.
            value: port_send_port_to_local_node_io_rate
          port_receive_port_to_local_node_io_rate:
            description: Storage system receive port to local node I/O rate by port.
            value: port_receive_port_to_local_node_io_rate
          port_total_port_to_local_node_io_rate:
            description: Storage system total port to local node I/O rate by port.
            value: port_total_port_to_local_node_io_rate
          port_send_port_to_remote_node_io_rate:
            description: Storage system send port to remote node I/O rate by port.
            value: port_send_port_to_remote_node_io_rate
          port_receive_port_to_remote_node_io_rate:
            description: Storage system receive port to remote node I/O rate by port.
            value: port_receive_port_to_remote_node_io_rate
          port_total_port_to_remote_node_io_rate:
            description: Storage system total port to remote node I/O rate by port.
            value: port_total_port_to_remote_node_io_rate
          'port_send_port_to_host_data_rate ':
            description: Storage system send port to host data rate by port.
            value: port_send_port_to_host_data_rate
          port_receive_port_to_host_data_rate:
            description: Storage system receive port to host data rate by port.
            value: port_receive_port_to_host_data_rate
          port_total_port_to_host_data_rate:
            description: Storage system total port to host data rate by port.
            value: port_total_port_to_host_data_rate
          port_send_port_to_disk_data_rate:
            description: Storage system send port to disk data rate by port.
            value: port_send_port_to_disk_data_rate
          port_receive_port_to_disk_data_rate:
            description: Storage system receive port to disk data rate by port.
            value: port_receive_port_to_disk_data_rate
          port_total_port_to_disk_data_rate:
            description: Storage system total port to disk data rate by port.
            value: port_total_port_to_disk_data_rate
          port_send_port_to_local_node_data_rate:
            description: Storage system send port to local node data rate by port.
            value: port_send_port_to_local_node_data_rate
          port_receive_port_to_local_node_data_rate:
            description: Storage system receive port to local node data rate by port.
            value: port_receive_port_to_local_node_data_rate
          port_total_port_to_local_node_data_rate:
            description: Storage system total port to local node data rate by port.
            value: port_total_port_to_local_node_data_rate
          port_send_port_to_remote_node_data_rate:
            description: Storage system send port to remote node data rate by port.
            value: port_send_port_to_remote_node_data_rate
          port_receive_port_to_remote_node_data_rate:
            description: Storage system receive port to remote node data rate by port.
            value: port_receive_port_to_remote_node_data_rate
          port_total_port_to_remote_node_data_rate:
            description: Storage system total port to remote node data rate by port.
            value: port_total_port_to_remote_node_data_rate
          port_send_port_to_local_node_response_time:
            description: Storage system send port to local node response time by port.
            value: port_send_port_to_local_node_response_time
          port_receive_port_to_local_node_response_time:
            description: Storage system receive port to local node response time by
              port.
            value: port_receive_port_to_local_node_response_time
          port_total_port_to_local_node_response_time:
            description: Storage system total port to local node response time by
              port.
            value: port_total_port_to_local_node_response_time
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc error frame error by port.
            value: port_crc_errors_frame_errors
          port_invalid_relative_offset_rate_frame_errors:
            description: Storage system invalid relative offset rate frame errors
              by port.
            value: port_invalid_relative_offset_rate_frame_errors
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_sequence_timeouts_link_errors:
            description: Storage system sequence timeouts link errors by port.
            value: port_sequence_timeouts_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_zero_buffer_credit_timer_port_protocol_errors:
            description: Storage system zero buffer credit timer port protocol errors
              by port.
            value: port_zero_buffer_credit_timer_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_out_of_order_data_port_protocol_errors:
            description: Storage system out of order data port protocol errors by
              port.
            value: port_out_of_order_data_port_protocol_errors
          port_out_of_order_ack_port_protocol_errors:
            description: Storage system out of order ack port protocol errors by port.
            value: port_out_of_order_ack_port_protocol_errors
          port_duplicate_frames_port_protocol_errors:
            description: Storage system duplicate frames port protocol errors by port.
            value: port_duplicate_frames_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_send_delay_time_port_protocol_errors:
            description: Storage system send delay time port protocol errors by port.
            value: port_send_delay_time_port_protocol_errors
          port_send_delay_io_percentage_port_protocol_errors:
            description: Storage system send delay I/O percentage port protocol errors
              by port.
            value: port_send_delay_io_percentage_port_protocol_errors
          port_extreme_io_concurrency_rate_overload_errors:
            description: Storage system extreme I/O concurrency rate overload errors
              by port.
            value: port_extreme_io_concurrency_rate_overload_errors
          port_extreme_io_concurrency_percentage_overload_errors:
            description: Storage system extreme I/O concurrency percentage overload
              errors by port.
            value: port_extreme_io_concurrency_percentage_overload_errors
          port_io_busy_rate_overload_errors:
            description: Storage system I/O busy rate overload errors by port.
            value: port_io_busy_rate_overload_errors
          port_io_busy_percentage_overload_errors:
            description: Storage system I/O busy percentage overload errors by port.
            value: port_io_busy_percentage_overload_errors
          port_io_overrun_rate_overload_errors:
            description: Storage system I/O overrun rate overload errors by port.
            value: port_io_overrun_rate_overload_errors
          port_io_overrun_percentage_overload_errors:
            description: Storage system I/O overrun percentage overload errors by
              port.
            value: port_io_overrun_percentage_overload_errors
          port_zero_send_buffer_credit_percentage_other:
            description: Storage system zero send buffer credit percentage other by
              port.
            value: port_zero_send_buffer_credit_percentage_other
          port_zero_receive_buffer_credit_percentage_other:
            description: Storage system zero receive buffer credit percentage other
              by port.
            value: port_zero_receive_buffer_credit_percentage_other
          port_send_transfer_size:
            description: Storage system send transfer size by port.
            value: port_send_transfer_size
          port_receive_transfer_size:
            description: Storage system receive transfer size by port.
            value: port_receive_transfer_size
          port_overall_transfer_size:
            description: Storage system overall transfer size by port.
            value: port_overall_transfer_size
          port_send_port_to_local_node_queue_time:
            description: Storage system send port to local node queue time by port.
            value: port_send_port_to_local_node_queue_time
          port_receive_port_to_local_node_queue_time:
            description: Storage system receive port to local node queue time by port.
            value: port_receive_port_to_local_node_queue_time
          port_overall_port_to_local_node_queue_time:
            description: Storage system overall port to local node queue time by port.
            value: port_overall_port_to_local_node_queue_time
          port_send_pprc_io_rate:
            description: Storage system send pprc I/O rate by port.
            value: port_send_pprc_io_rate
          port_receive_pprc_io_rate:
            description: Storage system receive pprc I/O rate by port.
            value: port_receive_pprc_io_rate
          port_total_pprc_io_rate:
            description: Storage system total pprc I/O rate by port.
            value: port_total_pprc_io_rate
          port_send_pprc_data_rate:
            description: Storage system send pprc data rate by port.
            value: port_send_pprc_data_rate
          port_receive_pprc_data_rate:
            description: Storage system receive pprc data rate by port.
            value: port_receive_pprc_data_rate
          port_total_pprc_data_rate:
            description: Storage system total pprc data rate by port.
            value: port_total_pprc_data_rate
          port_send_pprc_response_time:
            description: Storage system send pprc response time by port.
            value: port_send_pprc_response_time
          port_receive_pprc_response_time:
            description: Storage system receive pprc response time by port.
            value: port_receive_pprc_response_time
          port_overall_pprc_response_time:
            description: Storage system overall pprc response time by port.
            value: port_overall_pprc_response_time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/fc-ports/{storage_fcport_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific FC port for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_fcport_nk
        in: path
        description: The natural key of the fc port.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FCPortsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/filesets:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all filesets for a specified storage system for
        a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSetsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/filesets/{fileset_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific fileset for a specified storage system
        for a particular tenant.
      parameters:
      - name: fileset_nk
        in: path
        description: The natural key of the fileset.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSetsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/filesystems:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all file systems for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/filesystems/{filesystems_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific file system for a specified storage
        system for a particular tenant.
      parameters:
      - name: filesystems_nk
        in: path
        description: The natural key of the file system.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/flash-copies:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all flash copies for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCopiesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/flash-copies/{flash_copy_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific flash copy for a specified storage
        system for a particular tenant.
      parameters:
      - name: flash_copy_nk
        in: path
        description: The natural key of the flash copy.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCopiesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/host-adapters/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for host adapters in a storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          port_send_io_rate:
            description: Storage system port send I/O rate aggregated by host adapters.
            value: port_send_io_rate
          port_receive_io_rate:
            description: Storage system port receive I/O rate aggregated by host adapters.
            value: port_receive_io_rate
          total_port_io_rate:
            description: Storage system port total I/O rate aggregated by host adapters.
            value: total_port_io_rate
          port_send_data_rate:
            description: Storage system port send data rate aggregated by host adapters.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by host
              adapters.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by host adapters.
            value: port_total_data_rate
          port_send_response_time:
            description: Storage system port send response time aggregated by host
              adapters.
            value: port_send_response_time
          port_receive_response_time:
            description: Storage system port receive response time aggregated by host
              adapters.
            value: port_receive_response_time
          port_total_response_time:
            description: Storage system port total response time aggregated by host
              adapters.
            value: port_total_response_time
          port_extreme_io_concurrency_rate_overload_errors:
            description: Storage system extreme I/O concurrency rate overload errors
              by host adapters.
            value: port_extreme_io_concurrency_rate_overload_errors
          port_extreme_io_concurrency_percentage_overload_errors:
            description: Storage system extreme I/O concurrency percentage overload
              errors by host adapters.
            value: port_extreme_io_concurrency_percentage_overload_errors
          port_io_busy_rate_overload_errors:
            description: Storage system I/O busy rate overload errors by host adapters.
            value: port_io_busy_rate_overload_errors
          port_io_busy_percentage_overload_errors:
            description: Storage system I/O busy percentage overload errors by host
              adapters.
            value: port_io_busy_percentage_overload_errors
          port_io_overrun_rate_overload_errors:
            description: Storage system I/O overrun rate overload errors by host adapters.
            value: port_io_overrun_rate_overload_errors
          port_io_overrun_percentage_overload_errors:
            description: Storage system I/O overrun percentage overload errors by
              host adapters.
            value: port_io_overrun_percentage_overload_errors
          port_zero_send_buffer_credit_percentage_other:
            description: Storage system zero send buffer credit percentage other by
              host adapters.
            value: port_zero_send_buffer_credit_percentage_other
          port_zero_receive_buffer_credit_percentage_other:
            description: Storage system zero receive buffer credit percentage other
              by host adapters.
            value: port_zero_receive_buffer_credit_percentage_other
          port_send_transfer_size:
            description: Storage system send transfer size by host adapters.
            value: port_send_transfer_size
          port_receive_transfer_size:
            description: Storage system receive transfer size by host adapters.
            value: port_receive_transfer_size
          port_overall_transfer_size:
            description: Storage system overall transfer size by host adapters.
            value: port_overall_transfer_size
          port_send_pprc_io_rate:
            description: Storage system send pprc I/O rate by host adapters.
            value: port_send_pprc_io_rate
          port_receive_pprc_io_rate:
            description: Storage system receive pprc I/O rate by host adapters.
            value: port_receive_pprc_io_rate
          port_total_pprc_io_rate:
            description: Storage system total pprc I/O rate by host adapters.
            value: port_total_pprc_io_rate
          port_send_pprc_data_rate:
            description: Storage system send pprc data rate by host adapters.
            value: port_send_pprc_data_rate
          port_receive_pprc_data_rate:
            description: Storage system receive pprc data rate by host adapters.
            value: port_receive_pprc_data_rate
          port_total_pprc_data_rate:
            description: Storage system total pprc data rate by host adapters.
            value: port_total_pprc_data_rate
          port_send_pprc_response_time:
            description: Storage system send pprc response time by host adapters.
            value: port_send_pprc_response_time
          port_receive_pprc_response_time:
            description: Storage system receive pprc response time by host adapters.
            value: port_receive_pprc_response_time
          port_overall_pprc_response_time:
            description: Storage system overall pprc response time by host adapters.
            value: port_overall_pprc_response_time
      requestBody:
        description: "host adapters natural keys , fetches metrics for set of natural\
          \ keys if provided or provides metrics for all natural keys in the Storage\
          \ System"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/host-connections:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all host connections for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConnectionsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/host-connections/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for host connections in a storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by IO.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by io groups.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by io groups.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by io groups.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by io
              groups.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by io
              groups.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by io
              groups.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by io groups.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by io groups.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by io groups.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by io
              groups.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by io groups.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by io groups.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by io groups.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              io groups.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by io groups.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by io groups.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by io groups.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by io groups.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by io groups.
            value: volume_host_time_percentage
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a io group.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a io group.
            value: volume_write_cache_delay_io_rate
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a io group.
            value: volume_cache_to_disk_transfer_rate
          volume_peak_read_response_time:
            description: Storage system peak read response time for a io group.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a io group.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a io group.
            value: volume_peak_unmap_response_time
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a io group.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a io
              group.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a io group.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a io
              group.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a io group.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a io group.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a io group.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a io group.
            value: volume_dirty_writes_cache_hits
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a io
              group.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              io group.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              io group.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a io group.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a io group.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a io group.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a io group.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a io group.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a io group.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a io group.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a io group.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a io group.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a io group.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a io group.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a io group.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a io group.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a io group.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a io
              group.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a io group.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a io group.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a io group.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a io group.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a io group.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a io group.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a io group.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a io group.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a io group.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a io group.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a io group.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a io group.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a io group.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a io
              group.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a io group.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a io group.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              io group.
            value: volume_cache_to_host_transfer_response_time_other
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a io group.
            value: volume_unaligned_unmap_io_rate
      requestBody:
        description: "host connections natural keys , fetches metrics for set of natural\
          \ keys if provided or provides metrics for all natural keys in the Storage\
          \ System"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/host-connections/{host_connection_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific host connection for a specified storage
        system for a particular tenant.
      parameters:
      - name: host_connection_nk
        in: path
        description: The natural key of the host connection.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConnectionsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/hyperswaps:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all hyperswaps for a specified storage system for
        a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperSwapsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/hyperswaps/{hyperswap_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific hyperswap for a specified storage
        system for a particular tenant.
      parameters:
      - name: hyperswap_nk
        in: path
        description: The natural key of the hyperswap.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperSwapsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/io-groups:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all I/O groups for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IOGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/io-groups/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for io-groups in a storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by IO.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by io groups.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by io groups.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by io groups.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by io
              groups.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by io
              groups.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by io
              groups.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by io groups.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by io groups.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by io groups.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by io
              groups.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by io groups.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by io groups.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by io groups.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              io groups.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by io groups.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by io groups.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by io groups.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by io groups.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by io groups.
            value: volume_host_time_percentage
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a io group.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a io group.
            value: volume_write_cache_delay_io_rate
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a io group.
            value: volume_cache_to_disk_transfer_rate
          volume_peak_read_response_time:
            description: Storage system peak read response time for a io group.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a io group.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a io group.
            value: volume_peak_unmap_response_time
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a io group.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a io
              group.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a io group.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a io
              group.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a io group.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a io group.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a io group.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a io group.
            value: volume_dirty_writes_cache_hits
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a io
              group.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              io group.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              io group.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a io group.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a io group.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a io group.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a io group.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a io group.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a io group.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a io group.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a io group.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a io group.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a io group.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a io group.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a io group.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a io group.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a io group.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a io
              group.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a io group.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a io group.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a io group.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a io group.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a io group.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a io group.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a io group.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a io group.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a io group.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a io group.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a io group.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a io group.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a io group.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a io
              group.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a io group.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a io group.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              io group.
            value: volume_cache_to_host_transfer_response_time_other
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a io group.
            value: volume_unaligned_unmap_io_rate
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          port_send_io_rate:
            description: Storage system port send I/O rate aggregated by Fibre Channel
              ports.
            value: port_send_io_rate
          port_receive_io_rate:
            description: Storage system port receive I/O rate aggregated by Fibre
              Channel ports.
            value: port_receive_io_rate
          total_port_io_rate:
            description: Storage system port total I/O rate aggregated by Fibre Channel
              ports.
            value: total_port_io_rate
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_response_time:
            description: Storage system port send response time aggregated by Fibre
              Channel ports.
            value: port_send_response_time
          port_receive_response_time:
            description: Storage system port receive response time aggregated by Fibre
              Channel ports.
            value: port_receive_response_time
          port_total_response_time:
            description: Storage system port total response time aggregated by Fibre
              Channel ports.
            value: port_total_response_time
          port_send_port_to_host_io_rate:
            description: Storage system send port to host I/O rate by port.
            value: port_send_port_to_host_io_rate
          port_receive_port_to_host_io_rate:
            description: Storage system receive port to host I/O rate by port.
            value: port_receive_port_to_host_io_rate
          port_total_port_to_host_io_rate:
            description: Storage system total port to host I/O rate by port.
            value: port_total_port_to_host_io_rate
          port_send_port_to_disk_io_rate:
            description: Storage system send port to disk I/O rate by port.
            value: port_send_port_to_disk_io_rate
          port_receive_port_to_disk_io_rate-cache_delay_percentage:
            description: Storage system receive port to disk I/O rate cache delay
              percentage by port.
            value: port_receive_port_to_disk_io_rate-cache_delay_percentage
          port_total_port_to_disk_io_rate:
            description: Storage system total port to disk I/O rate by port.
            value: port_total_port_to_disk_io_rate
          port_send_port_to_local_node_io_rate:
            description: Storage system send port to local node I/O rate by port.
            value: port_send_port_to_local_node_io_rate
          port_receive_port_to_local_node_io_rate:
            description: Storage system receive port to local node I/O rate by port.
            value: port_receive_port_to_local_node_io_rate
          port_total_port_to_local_node_io_rate:
            description: Storage system total port to local node I/O rate by port.
            value: port_total_port_to_local_node_io_rate
          port_send_port_to_remote_node_io_rate:
            description: Storage system send port to remote node I/O rate by port.
            value: port_send_port_to_remote_node_io_rate
          port_receive_port_to_remote_node_io_rate:
            description: Storage system receive port to remote node I/O rate by port.
            value: port_receive_port_to_remote_node_io_rate
          port_total_port_to_remote_node_io_rate:
            description: Storage system total port to remote node I/O rate by port.
            value: port_total_port_to_remote_node_io_rate
          port_send_port_to_host_data_rate:
            description: Storage system send port to host data rate by port.
            value: port_send_port_to_host_data_rate
          port_receive_port_to_host_data_rate:
            description: Storage system receive port to host data rate by port.
            value: port_receive_port_to_host_data_rate
          port_total_port_to_host_data_rate:
            description: Storage system total port to host data rate by port.
            value: port_total_port_to_host_data_rate
          port_send_port_to_disk_data_rate:
            description: Storage system send port to disk data rate by port.
            value: port_send_port_to_disk_data_rate
          port_receive_port_to_disk_data_rate:
            description: Storage system receive port to disk data rate by port.
            value: port_receive_port_to_disk_data_rate
          port_total_port_to_disk_data_rate:
            description: Storage system total port to disk data rate by port.
            value: port_total_port_to_disk_data_rate
          port_send_port_to_local_node_data_rate:
            description: Storage system send port to local node data rate by port.
            value: port_send_port_to_local_node_data_rate
          port_receive_port_to_local_node_data_rate:
            description: Storage system receive port to local node data rate by port.
            value: port_receive_port_to_local_node_data_rate
          port_total_port_to_local_node_data_rate:
            description: Storage system total port to local node data rate by port.
            value: port_total_port_to_local_node_data_rate
          port_send_port_to_remote_node_data_rate:
            description: Storage system send port to remote node data rate by port.
            value: port_send_port_to_remote_node_data_rate
          port_receive_port_to_remote_node_data_rate:
            description: Storage system receive port to remote node data rate by port.
            value: port_receive_port_to_remote_node_data_rate
          port_total_port_to_remote_node_data_rate:
            description: Storage system total port to remote node data rate by port.
            value: port_total_port_to_remote_node_data_rate
          port_send_port_to_local_node_response_time:
            description: Storage system send port to local node response time by port.
            value: port_send_port_to_local_node_response_time
          port_receive_port_to_local_node_response_time:
            description: Storage system receive port to local node response time by
              port.
            value: port_receive_port_to_local_node_response_time
          port_total_port_to_local_node_response_time:
            description: Storage system total port to local node response time by
              port.
            value: port_total_port_to_local_node_response_time
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc error frame error by port.
            value: port_crc_errors_frame_errors
          port_invalid_relative_offset_rate_frame_errors:
            description: Storage system invalid relative offset rate frame errors
              by port.
            value: port_invalid_relative_offset_rate_frame_errors
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_sequence_timeouts_link_errors:
            description: Storage system sequence timeouts link errors by port.
            value: port_sequence_timeouts_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_zero_buffer_credit_timer_port_protocol_errors:
            description: Storage system zero buffer credit timer port protocol errors
              by port.
            value: port_zero_buffer_credit_timer_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_out_of_order_data_port_protocol_errors:
            description: Storage system out of order data port protocol errors by
              port.
            value: port_out_of_order_data_port_protocol_errors
          port_out_of_order_ack_port_protocol_errors:
            description: Storage system out of order ack port protocol errors by port.
            value: port_out_of_order_ack_port_protocol_errors
          port_duplicate_frames_port_protocol_errors:
            description: Storage system duplicate frames port protocol errors by port.
            value: port_duplicate_frames_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_zero_send_buffer_credit_percentage_other:
            description: Storage system zero send buffer credit percentage other by
              port.
            value: port_zero_send_buffer_credit_percentage_other
          port_zero_receive_buffer_credit_percentage_other:
            description: Storage system zero receive buffer credit percentage other
              by port.
            value: port_zero_receive_buffer_credit_percentage_other
          port_send_transfer_size:
            description: Storage system send transfer size by port.
            value: port_send_transfer_size
          port_receive_transfer_size:
            description: Storage system receive transfer size by port.
            value: port_receive_transfer_size
          port_overall_transfer_size:
            description: Storage system overall transfer size by port.
            value: port_overall_transfer_size
          port_send_port_to_local_node_queue_time:
            description: Storage system send port to local node queue time by port.
            value: port_send_port_to_local_node_queue_time
          port_receive_port_to_local_node_queue_time:
            description: Storage system receive port to local node queue time by port.
            value: port_receive_port_to_local_node_queue_time
          port_overall_port_to_local_node_queue_time:
            description: Storage system overall port to local node queue time by port.
            value: port_overall_port_to_local_node_queue_time
          ip_replication_transfer_send_size:
            description: Storage system IP replication transfer send size.
            value: ip_replication_transfer_send_size
          ip_replication_transfer_receive_size:
            description: Storage system IP replication transfer receive size.
            value: ip_replication_transfer_receive_size
          ip_replication_transfer_total_size:
            description: Storage system IP replication transfer total size.
            value: ip_replication_transfer_total_size
          ip_replication_latency:
            description: Storage system IP replication latency.
            value: ip_replication_latency
          ip_replication_to_remote_node_send_data_rate:
            description: Storage system IP replication to remote node send data rate.
            value: ip_replication_to_remote_node_send_data_rate
          ip_replication_to_remote_node_receive_data_rate:
            description: Storage system IP replication to remote node receive data
              rate.
            value: ip_replication_to_remote_node_receive_data_rate
          ip_replication_to_remote_node_re_send_data_rate:
            description: Storage system IP replication to remote node re-send data
              rate.
            value: ip_replication_to_remote_node_re_send_data_rate
          ip_replication_compressed_send_data_rate:
            description: Storage system IP replication compressed send data rate.
            value: ip_replication_compressed_send_data_rate
          ip_replication_compressed_receive_data_rate:
            description: Storage system IP replication compressed receive data rate.
            value: ip_replication_compressed_receive_data_rate
          physical_node_send_data_rate:
            description: Storage system physical node send data rate aggregated for
              all nodes.
            value: physical_node_send_data_rate
          physical_node_receive_data_rate:
            description: Storage system physical node receive data rate aggregated
              for all nodes.
            value: physical_node_receive_data_rate
          physical_node_total_data_rate:
            description: Storage system physical node total data rate aggregated for
              all nodes.
            value: physical_node_total_data_rate
          node_logical_send_data_rate:
            description: Storage system node logical send data rate aggregated for
              all nodes.
            value: node_logical_send_data_rate
          node_logical_receive_data_rate:
            description: Storage system node logical receive data rate aggregated
              for all nodes.
            value: node_logical_receive_data_rate
          node_logical_total_data_rate:
            description: Storage system node logical total data rate aggregated for
              all nodes.
            value: node_logical_total_data_rate
          cpu_utilization:
            description: Storage system cpu utilization aggregated for all nodes.
            value: cpu_utilization
          gc_moved_size:
            description: Storage system garbage collection moved size aggregated for
              all nodes.
            value: gc_moved_size
          node_read_cache_fullness:
            description: Storage system node read cache fullness aggregated for all
              nodes.
            value: node_read_cache_fullness
          node_write_cache_fullness:
            description: Storage system node write cache fullness aggregated for all
              nodes.
            value: node_write_cache_fullness
          node_send_node_to_local_physical_data_rate:
            description: Storage system send node to local physical data rate by node.
            value: node_send_node_to_local_physical_data_rate
          node_receive_node_to_local_physical_data_rate:
            description: Storage system receive node to local physical data rate by
              node.
            value: node_receive_node_to_local_physical_data_rate
          node_total_node_to_local_physical_data_rate:
            description: Storage system total node to local physical data rate by
              node.
            value: node_total_node_to_local_physical_data_rate
          core1_system_cpu_utilization:
            description: Core 1 system cpu utilization.
            value: core1_system_cpu_utilization
          core2_system_cpu_utilization:
            description: Core 2 system cpu utilization.
            value: core2_system_cpu_utilization
          core3_system_cpu_utilization:
            description: Core 3 system cpu utilization.
            value: core3_system_cpu_utilization
          core4_system_cpu_utilization:
            description: Core 4 system cpu utilization.
            value: core4_system_cpu_utilization
          core5_system_cpu_utilization:
            description: Core 5 system cpu utilization.
            value: core5_system_cpu_utilization
          core6_system_cpu_utilization:
            description: Core 6 system cpu utilization.
            value: core6_system_cpu_utilization
          core7_system_cpu_utilization:
            description: Core 7 system cpu utilization.
            value: core7_system_cpu_utilization
          core8_system_cpu_utilization:
            description: Core 8 system cpu utilization.
            value: core8_system_cpu_utilization
          core9_system_cpu_utilization:
            description: Core 9 system cpu utilization.
            value: core9_system_cpu_utilization
          core10_system_cpu_utilization:
            description: Core 10 system cpu utilization.
            value: core10_system_cpu_utilization
          core11_system_cpu_utilization:
            description: Core 11 system cpu utilization.
            value: core11_system_cpu_utilization
          core12_system_cpu_utilization:
            description: Core 12 system cpu utilization.
            value: core12_system_cpu_utilization
      requestBody:
        description: "io-groups natural keys , fetches metrics for set of natural\
          \ keys if provided or provides metrics for all natural keys in the Storage\
          \ System"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/io-groups/{io_group_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific I/O group for a specified storage
        system for a particular tenant.
      parameters:
      - name: io_group_nk
        in: path
        description: The natural key of the I/O Group.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IOGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/ip-ports:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all IP ports for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPPortsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/ip-ports/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for ip ports in a storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          ip_replication_transfer_send_size:
            description: Storage system IP replication transfer send size.
            value: ip_replication_transfer_send_size
          ip_replication_transfer_receive_size:
            description: Storage system IP replication transfer receive size.
            value: ip_replication_transfer_receive_size
          ip_replication_transfer_total_size:
            description: Storage system IP replication transfer total size.
            value: ip_replication_transfer_total_size
          ip_replication_latency:
            description: Storage system IP replication latency.
            value: ip_replication_latency
          ip_replication_to_remote_node_send_data_rate:
            description: Storage system IP replication to remote node send data rate.
            value: ip_replication_to_remote_node_send_data_rate
          ip_replication_to_remote_node_receive_data_rate:
            description: Storage system IP replication to remote node receive data
              rate.
            value: ip_replication_to_remote_node_receive_data_rate
          ip_replication_to_remote_node_re_send_data_rate:
            description: Storage system IP replication to remote node re-send data
              rate.
            value: ip_replication_to_remote_node_re_send_data_rate
          ip_replication_compressed_send_data_rate:
            description: Storage system IP replication compressed send data rate.
            value: ip_replication_compressed_send_data_rate
          ip_replication_compressed_receive_data_rate:
            description: Storage system IP replication compressed receive data rate.
            value: ip_replication_compressed_receive_data_rate
      requestBody:
        description: "Pass an array of natural keys to fetch specified ip ports' metrics\
          \ details. Maximum 30 natural keys are allowed. To retrieve metrics details\
          \ for all ip ports pass an empty array, e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/ip-ports/{storage_ipport_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific IP port for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_ipport_nk
        in: path
        description: The natural key of the ip port.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPPortsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/ip-replication:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all ip replications for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPReplicationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/ip-replication/{ip_replication_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific ip replication for a specified storage
        system for a particular tenant.
      parameters:
      - name: ip_replication_nk
        in: path
        description: The natural key of the ip replication.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPReplicationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/managed-disks:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all managed disks for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MdisksResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/managed-disks/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance and capacity metric values for managed-disks in
        a storage system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          capacity:
            description: Storage system capacity for a volume.
            value: capacity
          drive_compression_savings_percentage:
            description: Storage system drive compression savings percentage.
            value: drive_compression_savings_percentage
          total_compression_savings_percentage:
            description: Storage system total compression savings percentage.
            value: total_compression_savings_percentage
          total_compression_savings:
            description: Storage system total compression savings in bytes.
            value: total_compression_savings
          drive_compression_savings:
            description: Storage system drive compression savings in bytes.
            value: drive_compression_savings
          total_compression_ratio:
            description: Storage system total compression ratio.
            value: total_compression_ratio
          drive_compression_ratio:
            description: Storage system drive compression ratio.
            value: drive_compression_ratio
          pool_compression_ratio:
            description: Storage system pool compression ratio.
            value: pool_compression_ratio
          pool_compression_savings:
            description: Storage system pool compression savings in bytes.
            value: pool_compression_savings
          pool_compression_savings_percentage:
            description: Storage system pool compression savings percentage.
            value: pool_compression_savings_percentage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/managed-disks/{managed_disk_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific managed disk for a specified storage
        system for a particular tenant.
      parameters:
      - name: managed_disk_nk
        in: path
        description: The natural key of the mdisk.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MdisksResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns capacity and performance metric values for a specified storage
        system for a particular tenant.(This API is available for both IBM Storage
        Insights Pro and Free users)
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 12H, i.e. 12 hours for Pro users and 1D, i.e. 24 hours for Free users.\
          \ The duration ends with h/H or d/D, which refers to duration hours or days."
        schema:
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by volumes.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by volumes.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by volumes.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by volumes.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by volumes.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by volumes.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by volumes.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by volumes.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by volumes.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by volumes.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by volumes.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by volumes.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by volumes.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by volumes.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              volumes.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by volumes.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by volumes.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by volumes.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by volumes.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by volumes.
            value: volume_host_time_percentage
          volume_utilization:
            description: Storage system utilization value aggregated by volumes.
            value: volume_utilization
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          port_send_io_rate:
            description: Storage system port send I/O rate aggregated by Fibre Channel
              ports.
            value: port_send_io_rate
          port_receive_io_rate:
            description: Storage system port receive I/O rate aggregated by Fibre
              Channel ports.
            value: port_receive_io_rate
          total_port_io_rate:
            description: Storage system port total I/O rate aggregated by Fibre Channel
              ports.
            value: total_port_io_rate
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_response_time:
            description: Storage system port send response time aggregated by Fibre
              Channel ports.
            value: port_send_response_time
          port_receive_response_time:
            description: Storage system port receive response time aggregated by Fibre
              Channel ports.
            value: port_receive_response_time
          port_total_response_time:
            description: Storage system port total response time aggregated by Fibre
              Channel ports.
            value: port_total_response_time
          ip_replication_transfer_send_size:
            description: Storage system IP replication transfer send size.
            value: ip_replication_transfer_send_size
          ip_replication_transfer_receive_size:
            description: Storage system IP replication transfer receive size.
            value: ip_replication_transfer_receive_size
          ip_replication_transfer_total_size:
            description: Storage system IP replication transfer total size.
            value: ip_replication_transfer_total_size
          ip_replication_latency:
            description: Storage system IP replication latency.
            value: ip_replication_latency
          ip_replication_to_remote_node_send_data_rate:
            description: Storage system IP replication to remote node send data rate.
            value: ip_replication_to_remote_node_send_data_rate
          ip_replication_to_remote_node_receive_data_rate:
            description: Storage system IP replication to remote node receive data
              rate.
            value: ip_replication_to_remote_node_receive_data_rate
          ip_replication_to_remote_node_re_send_data_rate:
            description: Storage system IP replication to remote node re-send data
              rate.
            value: ip_replication_to_remote_node_re_send_data_rate
          ip_replication_compressed_send_data_rate:
            description: Storage system IP replication compressed send data rate.
            value: ip_replication_compressed_send_data_rate
          ip_replication_compressed_receive_data_rate:
            description: Storage system IP replication compressed receive data rate.
            value: ip_replication_compressed_receive_data_rate
          physical_node_send_data_rate:
            description: Storage system physical node send data rate aggregated for
              all nodes.
            value: physical_node_send_data_rate
          physical_node_receive_data_rate:
            description: Storage system physical node receive data rate aggregated
              for all nodes.
            value: physical_node_receive_data_rate
          physical_node_total_data_rate:
            description: Storage system physical node total data rate aggregated for
              all nodes.
            value: physical_node_total_data_rate
          node_logical_send_data_rate:
            description: Storage system node logical send data rate aggregated for
              all nodes.
            value: node_logical_send_data_rate
          node_logical_receive_data_rate:
            description: Storage system node logical receive data rate aggregated
              for all nodes.
            value: node_logical_receive_data_rate
          node_logical_total_data_rate:
            description: Storage system node logical total data rate aggregated for
              all nodes.
            value: node_logical_total_data_rate
          cpu_utilization:
            description: Storage system cpu utilization aggregated for all nodes.
            value: cpu_utilization
          gc_moved_size:
            description: Storage system garbage collection moved size aggregated for
              all nodes.
            value: gc_moved_size
          node_read_cache_fullness:
            description: Storage system node read cache fullness aggregated for all
              nodes.
            value: node_read_cache_fullness
          node_write_cache_fullness:
            description: Storage system node write cache fullness aggregated for all
              nodes.
            value: node_write_cache_fullness
          max_node_read_cache_fullness:
            description: Storage system max node read cache fullness aggregated for
              all nodes.
            value: max_node_read_cache_fullness
          max_node_write_cache_fullness:
            description: Storage system max node write cache fullness aggregated for
              all nodes.
            value: max_node_write_cache_fullness
          filesystem_and_node_read_io:
            description: Storage file system node read I/O.
            value: filesystem_and_node_read_io
          filesystem_and_node_write_io:
            description: Storage file system node write I/O.
            value: filesystem_and_node_write_io
          filesystem_and_node_total_io:
            description: Storage file system node total I/O.
            value: filesystem_and_node_total_io
          filesystem_and_node_bytes_read:
            description: Storage file system node read bytes.
            value: filesystem_and_node_bytes_read
          filesystem_and_node_bytes_write:
            description: Storage file system node write bytes.
            value: filesystem_and_node_bytes_write
          filesystem_and_node_bytes_total:
            description: Storage file system node total bytes.
            value: filesystem_and_node_bytes_total
          filesystem_read_response_time:
            description: Storage file system read response time.
            value: filesystem_read_response_time
          filesystem_write_response_time:
            description: Storage file system write response time.
            value: filesystem_write_response_time
          filesystem_total_response_time:
            description: Storage file system total response time.
            value: filesystem_total_response_time
          filesystem_read_transfer_size:
            description: Storage file system read transfer size.
            value: filesystem_read_transfer_size
          filesystem_write_transfer_size:
            description: Storage file system write transfer size.
            value: filesystem_write_transfer_size
          filesystem_total_transfer_size:
            description: Storage file system total transfer size.
            value: filesystem_total_transfer_size
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
          usable_capacity:
            description: Storage system total usable capacity.
            value: usable_capacity
          total_provisioned_capacity:
            description: Storage system total provisioned capacity.
            value: total_provisioned_capacity
          shortfall_percent:
            description: Storage system shortfall percentage.
            value: shortfall_percent
          recent_growth:
            description: Storage system recent growth in bytes.
            value: recent_growth
          recent_fill_rate:
            description: Storage system recent fill rate in bytes.
            value: recent_fill_rate
          temperature_c:
            description: Storage system's temperature in Celsius.
            value: temperature_c
          temperature_f:
            description: Storage system's temperature in Fahrenheit.
            value: temperature_f
          total_power_w:
            description: Storage system's total power.
            value: total_power_w
          power_efficiency:
            description: Storage system's power efficiency.
            value: power_efficiency
          co2_emission:
            description: Storage system's carbon emission.
            value: co2_emission
          volume_normal_read_io_rate:
            description: Storage system normal read I/O rate for a volume.
            value: volume_normal_read_io_rate
          volume_normal_write_io_rate:
            description: Storage system normal write I/O rate for a volume.
            value: volume_normal_write_io_rate
          volume_normal_total_io_rate:
            description: Storage system normal total I/O rate for a volume.
            value: volume_normal_total_io_rate
          volume_sequential_read_io_rate:
            description: Storage system sequential read I/O rate for a volume.
            value: volume_sequential_read_io_rate
          volume_sequential_write_io_rate:
            description: Storage system sequential write I/O rate for a volume.
            value: volume_sequential_write_io_rate
          volume_sequential_total_io_rate:
            description: Storage system sequential total I/O rate for a volume.
            value: volume_sequential_total_io_rate
          volume_record_mode_reads_io_rate:
            description: Storage system record mode read I/O rate for a volume.
            value: volume_record_mode_reads_io_rate
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a volume.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a volume.
            value: volume_write_cache_delay_io_rate
          volume_high_performance_ficon_read:
            description: Storage system HPF read for a volume.
            value: volume_high_performance_ficon_read
          volume_high_performance_ficon_write:
            description: Storage system HPF write for a volume.
            value: volume_high_performance_ficon_write
          volume_high_performance_ficon_total:
            description: Storage system HPF total for a volume.
            value: volume_high_performance_ficon_total
          volume_pprc_transfer_rate_others:
            description: Storage system PPRC transfer rate for a volume.
            value: volume_pprc_transfer_rate_others
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a volume.
            value: volume_unaligned_unmap_io_rate
          volume_normal_read_io_cache_hits:
            description: Storage system normal read I/O cache hits for a volume.
            value: volume_normal_read_io_cache_hits
          volume_normal_write_io_cache_hits:
            description: Storage system normal write I/O cache hits for a volume.
            value: volume_normal_write_io_cache_hits
          volume_normal_total_io_cache_hits:
            description: Storage system normal total I/O cache hits for a volume.
            value: volume_normal_total_io_cache_hits
          volume_sequential_read_io_cache_hits:
            description: Storage system sequential read I/O cache hits for a volume.
            value: volume_sequential_read_io_cache_hits
          volume_sequential_write_io_cache_hits:
            description: Storage system sequential write I/O cache hits for a volume.
            value: volume_sequential_write_io_cache_hits
          volume_sequential_total_io_cache_hits:
            description: Storage system sequential total I/O cache hits for a volume.
            value: volume_sequential_total_io_cache_hits
          volume_record_mode_reads_cache_hits:
            description: Storage system record mode reads cache hits for a volume.
            value: volume_record_mode_reads_cache_hits
          volume_data_read_cache_hits:
            description: Storage system data read cache hits for a volume.
            value: volume_data_read_cache_hits
          volume_data_write_cache_hits:
            description: Storage system data write cache hits for a volume.
            value: volume_data_write_cache_hits
          volume_data_overall_cache_hits:
            description: Storage system data overall cache hits for a volume.
            value: volume_data_overall_cache_hits
          volume_io_ssd_read_cache_hits:
            description: Storage system I/O SSD read cache hits for a volume.
            value: volume_io_ssd_read_cache_hits
          volume_data_ssd_read_cache_hits:
            description: Storage system data SSD read cache hits for a volume.
            value: volume_data_ssd_read_cache_hits
          volume_peak_read_response_time:
            description: Storage system peak read response time for a volume.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a volume.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a volume.
            value: volume_peak_unmap_response_time
          volume_read_cache_hit_response_time:
            description: Storage system read cache hit response time for a volume.
            value: volume_read_cache_hit_response_time
          volume_write_cache_hit_response_time:
            description: Storage system write cache hit response time for a volume.
            value: volume_write_cache_hit_response_time
          volume_overall_cache_hit_response_time:
            description: Storage system overall cache hit response time for a volume.
            value: volume_overall_cache_hit_response_time
          volume_read_cache_miss_response_time:
            description: Storage system read cache miss response time for a volume.
            value: volume_read_cache_miss_response_time
          volume_write_cache_miss_response_time:
            description: Storage system write cache miss response time for a volume.
            value: volume_write_cache_miss_response_time
          volume_overall_cache_miss_response_time:
            description: Storage system overall cache miss response time for a volume.
            value: volume_overall_cache_miss_response_time
          volume_response_time_by_transfer_size_small:
            description: Storage system response time for small size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_small
          volume_response_time_by_transfer_size_medium:
            description: Storage system response time for medium size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_medium
          volume_response_time_by_transfer_size_large:
            description: Storage system response time for large size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_large
          volume_response_time_by_transfer_size_very_large:
            description: Storage system response time for very large size transfer
              for a volume.
            value: volume_response_time_by_transfer_size_very_large
          volume_response_time_ssd_read_cache_hits:
            description: Storage system response time for ssd read cache hits for
              a volume.
            value: volume_response_time_ssd_read_cache_hits
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a volume.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a volume.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a volume.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a volume.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a volume.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a volume.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a volume.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a volume.
            value: volume_dirty_writes_cache_hits
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a volume.
            value: volume_cache_to_disk_transfer_rate
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a volume.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              volume.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              volume.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a volume.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a volume.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a volume.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a volume.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a volume.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a volume.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a volume.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a volume.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a volume.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a volume.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a volume.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a volume.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a volume.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a volume.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a volume.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a volume.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a volume.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a volume.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a volume.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a volume.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a volume.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a volume.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a volume.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a volume.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a volume.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a volume.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a volume.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a volume.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a volume.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_io_rate_compressed_volumes:
            description: Storage system I/O rate compressed volumes for a volume.
            value: volume_io_rate_compressed_volumes
          volume_data_rate_compressed_volumes:
            description: Storage system data rate compressed volumes for a volume.
            value: volume_data_rate_compressed_volumes
          volume_response_time_compressed_volumes:
            description: Storage system response time compressed volumes for a volume.
            value: volume_response_time_compressed_volumes
          volume_io_rate_uncompressed_volumes:
            description: Storage system I/O rate uncompressed volumes for a volume.
            value: volume_io_rate_uncompressed_volumes
          volume_data_rate_uncompressed_volumes:
            description: Storage system data rate uncompressed volumes for a volume.
            value: volume_data_rate_uncompressed_volumes
          volume_response_time_uncompressed_volumes:
            description: Storage system response time uncompressed volumes for a volume.
            value: volume_response_time_uncompressed_volumes
          volume_percentage_high_performance_ficon:
            description: Storage system HDF percentage for a volume.
            value: volume_percentage_high_performance_ficon
          volume_small_io_transfer_size:
            description: Storage system small I/O transfer size for a volume.
            value: volume_small_io_transfer_size
          volume_medium_io_transfer_size:
            description: Storage system medium I/O transfer size for a volume.
            value: volume_medium_io_transfer_size
          volume_large_io_transfer_size:
            description: Storage system large I/O transfer size for a volume.
            value: volume_large_io_transfer_size
          volume_very_large_io_transfer_size:
            description: Storage system very large I/O transfer size for a volume.
            value: volume_very_large_io_transfer_size
          volume_small_data_transfer_size:
            description: Storage system small data transfer size for a volume.
            value: volume_small_data_transfer_size
          volume_medium_data_transfer_size:
            description: Storage system medium data transfer size for a volume.
            value: volume_medium_data_transfer_size
          volume_large_data_transfer_size:
            description: Storage system large data transfer size for a volume.
            value: volume_large_data_transfer_size
          volume_very_large_data_transfer_size:
            description: Storage very large data transfer size for a volume.
            value: volume_very_large_data_transfer_size
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              volume.
            value: volume_cache_to_host_transfer_response_time_other
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          port_send_port_to_host_io_rate:
            description: Storage system send port to host I/O rate by port.
            value: port_send_port_to_host_io_rate
          port_receive_port_to_host_io_rate:
            description: Storage system receive port to host I/O rate by port.
            value: port_receive_port_to_host_io_rate
          port_total_port_to_host_io_rate:
            description: Storage system total port to host I/O rate by port.
            value: port_total_port_to_host_io_rate
          port_send_port_to_disk_io_rate:
            description: Storage system send port to disk I/O rate by port.
            value: port_send_port_to_disk_io_rate
          port_receive_port_to_disk_io_rate-cache_delay_percentage:
            description: Storage system receive port to disk I/O rate cache delay
              percentage by port.
            value: port_receive_port_to_disk_io_rate-cache_delay_percentage
          port_total_port_to_disk_io_rate:
            description: Storage system total port to disk I/O rate by port.
            value: port_total_port_to_disk_io_rate
          port_send_port_to_local_node_io_rate:
            description: Storage system send port to local node I/O rate by port.
            value: port_send_port_to_local_node_io_rate
          port_receive_port_to_local_node_io_rate:
            description: Storage system receive port to local node I/O rate by port.
            value: port_receive_port_to_local_node_io_rate
          port_total_port_to_local_node_io_rate:
            description: Storage system total port to local node I/O rate by port.
            value: port_total_port_to_local_node_io_rate
          port_send_port_to_remote_node_io_rate:
            description: Storage system send port to remote node I/O rate by port.
            value: port_send_port_to_remote_node_io_rate
          port_receive_port_to_remote_node_io_rate:
            description: Storage system receive port to remote node I/O rate by port.
            value: port_receive_port_to_remote_node_io_rate
          port_total_port_to_remote_node_io_rate:
            description: Storage system total port to remote node I/O rate by port.
            value: port_total_port_to_remote_node_io_rate
          'port_send_port_to_host_data_rate ':
            description: Storage system send port to host data rate by port.
            value: port_send_port_to_host_data_rate
          port_receive_port_to_host_data_rate:
            description: Storage system receive port to host data rate by port.
            value: port_receive_port_to_host_data_rate
          port_total_port_to_host_data_rate:
            description: Storage system total port to host data rate by port.
            value: port_total_port_to_host_data_rate
          port_send_port_to_disk_data_rate:
            description: Storage system send port to disk data rate by port.
            value: port_send_port_to_disk_data_rate
          port_receive_port_to_disk_data_rate:
            description: Storage system receive port to disk data rate by port.
            value: port_receive_port_to_disk_data_rate
          port_total_port_to_disk_data_rate:
            description: Storage system total port to disk data rate by port.
            value: port_total_port_to_disk_data_rate
          port_send_port_to_local_node_data_rate:
            description: Storage system send port to local node data rate by port.
            value: port_send_port_to_local_node_data_rate
          port_receive_port_to_local_node_data_rate:
            description: Storage system receive port to local node data rate by port.
            value: port_receive_port_to_local_node_data_rate
          port_total_port_to_local_node_data_rate:
            description: Storage system total port to local node data rate by port.
            value: port_total_port_to_local_node_data_rate
          port_send_port_to_remote_node_data_rate:
            description: Storage system send port to remote node data rate by port.
            value: port_send_port_to_remote_node_data_rate
          port_receive_port_to_remote_node_data_rate:
            description: Storage system receive port to remote node data rate by port.
            value: port_receive_port_to_remote_node_data_rate
          port_total_port_to_remote_node_data_rate:
            description: Storage system total port to remote node data rate by port.
            value: port_total_port_to_remote_node_data_rate
          port_send_port_to_local_node_response_time:
            description: Storage system send port to local node response time by port.
            value: port_send_port_to_local_node_response_time
          port_receive_port_to_local_node_response_time:
            description: Storage system receive port to local node response time by
              port.
            value: port_receive_port_to_local_node_response_time
          port_total_port_to_local_node_response_time:
            description: Storage system total port to local node response time by
              port.
            value: port_total_port_to_local_node_response_time
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc error frame error by port.
            value: port_crc_errors_frame_errors
          port_invalid_relative_offset_rate_frame_errors:
            description: Storage system invalid relative offset rate frame errors
              by port.
            value: port_invalid_relative_offset_rate_frame_errors
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_sequence_timeouts_link_errors:
            description: Storage system sequence timeouts link errors by port.
            value: port_sequence_timeouts_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_zero_buffer_credit_timer_port_protocol_errors:
            description: Storage system zero buffer credit timer port protocol errors
              by port.
            value: port_zero_buffer_credit_timer_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_out_of_order_data_port_protocol_errors:
            description: Storage system out of order data port protocol errors by
              port.
            value: port_out_of_order_data_port_protocol_errors
          port_out_of_order_ack_port_protocol_errors:
            description: Storage system out of order ack port protocol errors by port.
            value: port_out_of_order_ack_port_protocol_errors
          port_duplicate_frames_port_protocol_errors:
            description: Storage system duplicate frames port protocol errors by port.
            value: port_duplicate_frames_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_send_delay_time_port_protocol_errors:
            description: Storage system send delay time port protocol errors by port.
            value: port_send_delay_time_port_protocol_errors
          port_send_delay_io_percentage_port_protocol_errors:
            description: Storage system send delay I/O percentage port protocol errors
              by port.
            value: port_send_delay_io_percentage_port_protocol_errors
          port_extreme_io_concurrency_rate_overload_errors:
            description: Storage system extreme I/O concurrency rate overload errors
              by port.
            value: port_extreme_io_concurrency_rate_overload_errors
          port_extreme_io_concurrency_percentage_overload_errors:
            description: Storage system extreme I/O concurrency percentage overload
              errors by port.
            value: port_extreme_io_concurrency_percentage_overload_errors
          port_io_busy_rate_overload_errors:
            description: Storage system I/O busy rate overload errors by port.
            value: port_io_busy_rate_overload_errors
          port_io_busy_percentage_overload_errors:
            description: Storage system I/O busy percentage overload errors by port.
            value: port_io_busy_percentage_overload_errors
          port_io_overrun_rate_overload_errors:
            description: Storage system I/O overrun rate overload errors by port.
            value: port_io_overrun_rate_overload_errors
          port_io_overrun_percentage_overload_errors:
            description: Storage system I/O overrun percentage overload errors by
              port.
            value: port_io_overrun_percentage_overload_errors
          port_zero_send_buffer_credit_percentage_other:
            description: Storage system zero send buffer credit percentage other by
              port.
            value: port_zero_send_buffer_credit_percentage_other
          port_zero_receive_buffer_credit_percentage_other:
            description: Storage system zero receive buffer credit percentage other
              by port.
            value: port_zero_receive_buffer_credit_percentage_other
          port_send_transfer_size:
            description: Storage system send transfer size by port.
            value: port_send_transfer_size
          port_receive_transfer_size:
            description: Storage system receive transfer size by port.
            value: port_receive_transfer_size
          port_overall_transfer_size:
            description: Storage system overall transfer size by port.
            value: port_overall_transfer_size
          port_send_port_to_local_node_queue_time:
            description: Storage system send port to local node queue time by port.
            value: port_send_port_to_local_node_queue_time
          port_receive_port_to_local_node_queue_time:
            description: Storage system receive port to local node queue time by port.
            value: port_receive_port_to_local_node_queue_time
          port_overall_port_to_local_node_queue_time:
            description: Storage system overall port to local node queue time by port.
            value: port_overall_port_to_local_node_queue_time
          port_send_pprc_io_rate:
            description: Storage system send pprc I/O rate by port.
            value: port_send_pprc_io_rate
          port_receive_pprc_io_rate:
            description: Storage system receive pprc I/O rate by port.
            value: port_receive_pprc_io_rate
          port_total_pprc_io_rate:
            description: Storage system total pprc I/O rate by port.
            value: port_total_pprc_io_rate
          port_send_pprc_data_rate:
            description: Storage system send pprc data rate by port.
            value: port_send_pprc_data_rate
          port_receive_pprc_data_rate:
            description: Storage system receive pprc data rate by port.
            value: port_receive_pprc_data_rate
          port_total_pprc_data_rate:
            description: Storage system total pprc data rate by port.
            value: port_total_pprc_data_rate
          port_send_pprc_response_time:
            description: Storage system send pprc response time by port.
            value: port_send_pprc_response_time
          port_receive_pprc_response_time:
            description: Storage system receive pprc response time by port.
            value: port_receive_pprc_response_time
          port_overall_pprc_response_time:
            description: Storage system overall pprc response time by port.
            value: port_overall_pprc_response_time
          node_send_node_to_local_physical_data_rate:
            description: Storage system send node to local physical data rate by node.
            value: node_send_node_to_local_physical_data_rate
          node_receive_node_to_local_physical_data_rate:
            description: Storage system receive node to local physical data rate by
              node.
            value: node_receive_node_to_local_physical_data_rate
          node_total_node_to_local_physical_data_rate:
            description: Storage system total node to local physical data rate by
              node.
            value: node_total_node_to_local_physical_data_rate
          core1_system_cpu_utilization:
            description: Core 1 system cpu utilization.
            value: core1_system_cpu_utilization
          core2_system_cpu_utilization:
            description: Core 2 system cpu utilization.
            value: core2_system_cpu_utilization
          core3_system_cpu_utilization:
            description: Core 3 system cpu utilization.
            value: core3_system_cpu_utilization
          core4_system_cpu_utilization:
            description: Core 4 system cpu utilization.
            value: core4_system_cpu_utilization
          core5_system_cpu_utilization:
            description: Core 5 system cpu utilization.
            value: core5_system_cpu_utilization
          core6_system_cpu_utilization:
            description: Core 6 system cpu utilization.
            value: core6_system_cpu_utilization
          core7_system_cpu_utilization:
            description: Core 7 system cpu utilization.
            value: core7_system_cpu_utilization
          core8_system_cpu_utilization:
            description: Core 8 system cpu utilization.
            value: core8_system_cpu_utilization
          core9_system_cpu_utilization:
            description: Core 9 system cpu utilization.
            value: core9_system_cpu_utilization
          core10_system_cpu_utilization:
            description: Core 10 system cpu utilization.
            value: core10_system_cpu_utilization
          core11_system_cpu_utilization:
            description: Core 11 system cpu utilization.
            value: core11_system_cpu_utilization
          core12_system_cpu_utilization:
            description: Core 12 system cpu utilization.
            value: core12_system_cpu_utilization
          snapshot_written_capacity:
            description: Storage system snapshot written capacity in bytes.
            value: snapshot_written_capacity
          snapshot_provisioned_capacity:
            description: Storage system snapshot provisioned capacity in bytes.
            value: snapshot_provisioned_capacity
          raw_capacity:
            description: Storage system raw capacity in bytes.
            value: raw_capacity
          written_capacity_limit:
            description: Storage system written capacity limit.
            value: written_capacity_limit
          mapped_capacity:
            description: Storage system mapped capacity in bytes.
            value: mapped_capacity
          unmapped_capacity:
            description: Storage system unmapped capacity in bytes.
            value: unmapped_capacity
          used_written_capacity:
            description: Storage system used written capacity in bytes.
            value: used_written_capacity
          available_written_capacity:
            description: Storage system available written capacity in bytes.
            value: available_written_capacity
          file_system_capacity:
            description: Storage system file system capacity in bytes.
            value: file_system_capacity
          available_file_system_capacity:
            description: Storage system available file system capacity in bytes.
            value: available_file_system_capacity
          used_file_system_capacity:
            description: Storage system used file system capacity in bytes.
            value: used_file_system_capacity
          used_written_capacity_percentage:
            description: Storage system used written capacity percentage.
            value: used_written_capacity_percentage
          total_provisioned_capacity_percentage:
            description: Storage system total provisioned capacity percentage.
            value: total_provisioned_capacity_percentage
          mapped_capacity_percentage:
            description: Storage system mapped capacity percentage.
            value: mapped_capacity_percentage
          used_capacity_percentage:
            description: Storage system used capacity percentage.
            value: used_capacity_percentage
          capacity_percentage:
            description: Storage system capacity percentage.
            value: capacity_percentage
          total_usable_capacity:
            description: Storage system total usable capacity.
            value: total_usable_capacity
          total_capacity:
            description: Storage system used total capacity in bytes.
            value: total_capacity
          safeguarded_capacity:
            description: Storage system used safeguarded capacity in bytes.
            value: safeguarded_capacity
          safeguarded_used_capacity_percentage:
            description: Storage system used safeguarded used capacity percentage
              in bytes.
            value: safeguarded_used_capacity_percentage
          available_system_capacity:
            description: Storage system available system capacity in bytes.
            value: available_system_capacity
          available_capacity_percentage:
            description: Storage system available capacity percentage.
            value: available_capacity_percentage
          drive_compression_savings_percentage:
            description: Storage system drive compression savings percentage.
            value: drive_compression_savings_percentage
          total_compression_savings_percentage:
            description: Storage system total compression savings percentage.
            value: total_compression_savings_percentage
          deduplication_savings_percentage:
            description: Storage system deduplication savings percentage.
            value: deduplication_savings_percentage
          total_savings_percentage:
            description: Storage system total savings percentage.
            value: total_savings_percentage
          total_compression_savings:
            description: Storage system total compression savings in bytes.
            value: total_compression_savings
          deduplication_savings:
            description: Storage system deduplication savings in bytes.
            value: deduplication_savings
          drive_compression_savings:
            description: Storage system drive compression savings in bytes.
            value: drive_compression_savings
          total_compression_ratio:
            description: Storage system total compression ratio.
            value: total_compression_ratio
          drive_compression_ratio:
            description: Storage system drive compression ratio.
            value: drive_compression_ratio
          data_reduction_ratio:
            description: Storage system data reduction ratio.
            value: data_reduction_ratio
          pool_compression_ratio:
            description: Storage system pool compression ratio.
            value: pool_compression_ratio
          pool_compression_savings:
            description: Storage system pool compression savings in bytes.
            value: pool_compression_savings
          pool_compression_savings_percentage:
            description: Storage system pool compression savings percentage.
            value: pool_compression_savings_percentage
          total_savings_ratio:
            description: Storage system total savings ratio.
            value: total_savings_ratio
          overprovisioned_capacity:
            description: Storage system over provisioned capacity in bytes.
            value: overprovisioned_capacity
          overhead_capacity:
            description: Storage system overhead capacity in bytes.
            value: overhead_capacity
          capacity_to_be_licensed:
            description: Storage system capacity to be licensed in bytes.
            value: capacity_to_be_licensed
          monitored_back_end_capacity:
            description: Storage system monitored backend capacity in bytes.
            value: monitored_back_end_capacity
          unmonitored_back_end_capacity:
            description: Storage system unmonitored backend capacity in bytes.
            value: unmonitored_back_end_capacity
          read_cache:
            description: Storage system read cache in bytes.
            value: read_cache
          write_cache:
            description: Storage system write cache in bytes.
            value: write_cache
          available_volume_capacity:
            description: Storage system available volume capacity in bytes.
            value: available_volume_capacity
          flashcopy_used_capacity:
            description: Storage system flashcopy used capacity in bytes.
            value: flashcopy_used_capacity
          flashcopy_provisioned_capacity:
            description: Storage system flashcopy provisioned capacity in bytes.
            value: flashcopy_provisioned_capacity
          data_reduction:
            description: Storage system data reduction in bytes.
            value: data_reduction
          data_reduction_percentage:
            description: Storage system data reduction percentage.
            value: data_reduction_percentage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/mirrors:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all Mirrors for a specified storage system for a
        particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MirrorsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/mirrors/{mirror_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific mirror for a specified storage system
        for a particular tenant.
      parameters:
      - name: mirror_nk
        in: path
        description: The natural key of the mirror.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MirrorsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/network-shared-disks:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all Network Shared Disks for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSDResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/network-shared-disks/{nsd_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific Network Shared Disk for a specified
        storage system for a particular tenant.
      parameters:
      - name: nsd_nk
        in: path
        description: The natural key of the network shared disks.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSDsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/nodes:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all nodes for a specified storage system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/nodes/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for nodes in a storage system for
        a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by IO.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by io groups.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by io groups.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by io groups.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by io
              groups.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by io
              groups.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by io
              groups.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by io groups.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by io groups.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by io groups.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by io
              groups.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by io groups.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by io groups.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by io groups.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              io groups.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by io groups.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by io groups.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by io groups.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by io groups.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by io groups.
            value: volume_host_time_percentage
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a io group.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a io group.
            value: volume_write_cache_delay_io_rate
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a io group.
            value: volume_cache_to_disk_transfer_rate
          volume_peak_read_response_time:
            description: Storage system peak read response time for a io group.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a io group.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a io group.
            value: volume_peak_unmap_response_time
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a io group.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a io
              group.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a io group.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a io
              group.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a io group.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a io group.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a io group.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a io group.
            value: volume_dirty_writes_cache_hits
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a io
              group.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              io group.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              io group.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a io group.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a io group.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a io group.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a io group.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a io group.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a io group.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a io group.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a io group.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a io group.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a io group.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a io group.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a io group.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a io group.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a io group.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a io
              group.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a io group.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a io group.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a io group.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a io group.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a io group.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a io group.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a io group.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a io group.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a io group.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a io group.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a io group.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a io group.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a io group.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a io
              group.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a io group.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a io group.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              io group.
            value: volume_cache_to_host_transfer_response_time_other
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a io group.
            value: volume_unaligned_unmap_io_rate
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          port_send_io_rate:
            description: Storage system port send I/O rate aggregated by Fibre Channel
              ports.
            value: port_send_io_rate
          port_receive_io_rate:
            description: Storage system port receive I/O rate aggregated by Fibre
              Channel ports.
            value: port_receive_io_rate
          total_port_io_rate:
            description: Storage system port total I/O rate aggregated by Fibre Channel
              ports.
            value: total_port_io_rate
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_response_time:
            description: Storage system port send response time aggregated by Fibre
              Channel ports.
            value: port_send_response_time
          port_receive_response_time:
            description: Storage system port receive response time aggregated by Fibre
              Channel ports.
            value: port_receive_response_time
          port_total_response_time:
            description: Storage system port total response time aggregated by Fibre
              Channel ports.
            value: port_total_response_time
          port_send_port_to_host_io_rate:
            description: Storage system send port to host I/O rate by port.
            value: port_send_port_to_host_io_rate
          port_receive_port_to_host_io_rate:
            description: Storage system receive port to host I/O rate by port.
            value: port_receive_port_to_host_io_rate
          port_total_port_to_host_io_rate:
            description: Storage system total port to host I/O rate by port.
            value: port_total_port_to_host_io_rate
          port_send_port_to_disk_io_rate:
            description: Storage system send port to disk I/O rate by port.
            value: port_send_port_to_disk_io_rate
          port_receive_port_to_disk_io_rate-cache_delay_percentage:
            description: Storage system receive port to disk I/O rate cache delay
              percentage by port.
            value: port_receive_port_to_disk_io_rate-cache_delay_percentage
          port_total_port_to_disk_io_rate:
            description: Storage system total port to disk I/O rate by port.
            value: port_total_port_to_disk_io_rate
          port_send_port_to_local_node_io_rate:
            description: Storage system send port to local node I/O rate by port.
            value: port_send_port_to_local_node_io_rate
          port_receive_port_to_local_node_io_rate:
            description: Storage system receive port to local node I/O rate by port.
            value: port_receive_port_to_local_node_io_rate
          port_total_port_to_local_node_io_rate:
            description: Storage system total port to local node I/O rate by port.
            value: port_total_port_to_local_node_io_rate
          port_send_port_to_remote_node_io_rate:
            description: Storage system send port to remote node I/O rate by port.
            value: port_send_port_to_remote_node_io_rate
          port_receive_port_to_remote_node_io_rate:
            description: Storage system receive port to remote node I/O rate by port.
            value: port_receive_port_to_remote_node_io_rate
          port_total_port_to_remote_node_io_rate:
            description: Storage system total port to remote node I/O rate by port.
            value: port_total_port_to_remote_node_io_rate
          port_send_port_to_host_data_rate:
            description: Storage system send port to host data rate by port.
            value: port_send_port_to_host_data_rate
          port_receive_port_to_host_data_rate:
            description: Storage system receive port to host data rate by port.
            value: port_receive_port_to_host_data_rate
          port_total_port_to_host_data_rate:
            description: Storage system total port to host data rate by port.
            value: port_total_port_to_host_data_rate
          port_send_port_to_disk_data_rate:
            description: Storage system send port to disk data rate by port.
            value: port_send_port_to_disk_data_rate
          port_receive_port_to_disk_data_rate:
            description: Storage system receive port to disk data rate by port.
            value: port_receive_port_to_disk_data_rate
          port_total_port_to_disk_data_rate:
            description: Storage system total port to disk data rate by port.
            value: port_total_port_to_disk_data_rate
          port_send_port_to_local_node_data_rate:
            description: Storage system send port to local node data rate by port.
            value: port_send_port_to_local_node_data_rate
          port_receive_port_to_local_node_data_rate:
            description: Storage system receive port to local node data rate by port.
            value: port_receive_port_to_local_node_data_rate
          port_total_port_to_local_node_data_rate:
            description: Storage system total port to local node data rate by port.
            value: port_total_port_to_local_node_data_rate
          port_send_port_to_remote_node_data_rate:
            description: Storage system send port to remote node data rate by port.
            value: port_send_port_to_remote_node_data_rate
          port_receive_port_to_remote_node_data_rate:
            description: Storage system receive port to remote node data rate by port.
            value: port_receive_port_to_remote_node_data_rate
          port_total_port_to_remote_node_data_rate:
            description: Storage system total port to remote node data rate by port.
            value: port_total_port_to_remote_node_data_rate
          port_send_port_to_local_node_response_time:
            description: Storage system send port to local node response time by port.
            value: port_send_port_to_local_node_response_time
          port_receive_port_to_local_node_response_time:
            description: Storage system receive port to local node response time by
              port.
            value: port_receive_port_to_local_node_response_time
          port_total_port_to_local_node_response_time:
            description: Storage system total port to local node response time by
              port.
            value: port_total_port_to_local_node_response_time
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc error frame error by port.
            value: port_crc_errors_frame_errors
          port_invalid_relative_offset_rate_frame_errors:
            description: Storage system invalid relative offset rate frame errors
              by port.
            value: port_invalid_relative_offset_rate_frame_errors
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_sequence_timeouts_link_errors:
            description: Storage system sequence timeouts link errors by port.
            value: port_sequence_timeouts_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_zero_buffer_credit_timer_port_protocol_errors:
            description: Storage system zero buffer credit timer port protocol errors
              by port.
            value: port_zero_buffer_credit_timer_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_out_of_order_data_port_protocol_errors:
            description: Storage system out of order data port protocol errors by
              port.
            value: port_out_of_order_data_port_protocol_errors
          port_out_of_order_ack_port_protocol_errors:
            description: Storage system out of order ack port protocol errors by port.
            value: port_out_of_order_ack_port_protocol_errors
          port_duplicate_frames_port_protocol_errors:
            description: Storage system duplicate frames port protocol errors by port.
            value: port_duplicate_frames_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_zero_send_buffer_credit_percentage_other:
            description: Storage system zero send buffer credit percentage other by
              port.
            value: port_zero_send_buffer_credit_percentage_other
          port_zero_receive_buffer_credit_percentage_other:
            description: Storage system zero receive buffer credit percentage other
              by port.
            value: port_zero_receive_buffer_credit_percentage_other
          port_send_transfer_size:
            description: Storage system send transfer size by port.
            value: port_send_transfer_size
          port_receive_transfer_size:
            description: Storage system receive transfer size by port.
            value: port_receive_transfer_size
          port_overall_transfer_size:
            description: Storage system overall transfer size by port.
            value: port_overall_transfer_size
          port_send_port_to_local_node_queue_time:
            description: Storage system send port to local node queue time by port.
            value: port_send_port_to_local_node_queue_time
          port_receive_port_to_local_node_queue_time:
            description: Storage system receive port to local node queue time by port.
            value: port_receive_port_to_local_node_queue_time
          port_overall_port_to_local_node_queue_time:
            description: Storage system overall port to local node queue time by port.
            value: port_overall_port_to_local_node_queue_time
          ip_replication_transfer_send_size:
            description: Storage system IP replication transfer send size.
            value: ip_replication_transfer_send_size
          ip_replication_transfer_receive_size:
            description: Storage system IP replication transfer receive size.
            value: ip_replication_transfer_receive_size
          ip_replication_transfer_total_size:
            description: Storage system IP replication transfer total size.
            value: ip_replication_transfer_total_size
          ip_replication_latency:
            description: Storage system IP replication latency.
            value: ip_replication_latency
          ip_replication_to_remote_node_send_data_rate:
            description: Storage system IP replication to remote node send data rate.
            value: ip_replication_to_remote_node_send_data_rate
          ip_replication_to_remote_node_receive_data_rate:
            description: Storage system IP replication to remote node receive data
              rate.
            value: ip_replication_to_remote_node_receive_data_rate
          ip_replication_to_remote_node_re_send_data_rate:
            description: Storage system IP replication to remote node re-send data
              rate.
            value: ip_replication_to_remote_node_re_send_data_rate
          ip_replication_compressed_send_data_rate:
            description: Storage system IP replication compressed send data rate.
            value: ip_replication_compressed_send_data_rate
          ip_replication_compressed_receive_data_rate:
            description: Storage system IP replication compressed receive data rate.
            value: ip_replication_compressed_receive_data_rate
          filesystem_and_node_read_io:
            description: Storage file system node read I/O.
            value: filesystem_and_node_read_io
          filesystem_and_node_write_io:
            description: Storage file system node write I/O.
            value: filesystem_and_node_write_io
          filesystem_and_node_total_io:
            description: Storage file system node total I/O.
            value: filesystem_and_node_total_io
          filesystem_and_node_bytes_read:
            description: Storage file system node read bytes.
            value: filesystem_and_node_bytes_read
          filesystem_and_node_bytes_write:
            description: Storage file system node write bytes.
            value: filesystem_and_node_bytes_write
          filesystem_and_node_bytes_total:
            description: Storage file system node total bytes.
            value: filesystem_and_node_bytes_total
          filesystem_read_response_time:
            description: Storage file system read response time.
            value: filesystem_read_response_time
          filesystem_write_response_time:
            description: Storage file system write response time.
            value: filesystem_write_response_time
          filesystem_total_response_time:
            description: Storage file system total response time.
            value: filesystem_total_response_time
          filesystem_read_transfer_size:
            description: Storage file system read transfer size.
            value: filesystem_read_transfer_size
          filesystem_write_transfer_size:
            description: Storage file system write transfer size.
            value: filesystem_write_transfer_size
          filesystem_total_transfer_size:
            description: Storage file system total transfer size.
            value: filesystem_total_transfer_size
          physical_node_send_data_rate:
            description: Storage system physical node send data rate aggregated for
              all nodes.
            value: physical_node_send_data_rate
          physical_node_receive_data_rate:
            description: Storage system physical node receive data rate aggregated
              for all nodes.
            value: physical_node_receive_data_rate
          physical_node_total_data_rate:
            description: Storage system physical node total data rate aggregated for
              all nodes.
            value: physical_node_total_data_rate
          node_logical_send_data_rate:
            description: Storage system node logical send data rate aggregated for
              all nodes.
            value: node_logical_send_data_rate
          node_logical_receive_data_rate:
            description: Storage system node logical receive data rate aggregated
              for all nodes.
            value: node_logical_receive_data_rate
          node_logical_total_data_rate:
            description: Storage system node logical total data rate aggregated for
              all nodes.
            value: node_logical_total_data_rate
          cpu_utilization:
            description: Storage system cpu utilization aggregated for all nodes.
            value: cpu_utilization
          node_gc_consumed:
            description: Storage system garbage collection consumed size aggregated
              for all nodes.
            value: node_gc_consumed
          node_gc_extent_col:
            description: Storage system garbage collection extent collection size
              aggregated for all nodes.
            value: node_gc_extent_col
          gc_moved_size:
            description: Storage system garbage collection moved size aggregated for
              all nodes.
            value: gc_moved_size
          node_gc_new:
            description: Storage system garbage collection new size aggregated for
              all nodes.
            value: node_gc_new
          node_gc_reclaimed:
            description: Storage system garbage collection reclaim size aggregated
              for all nodes.
            value: node_gc_reclaimed
          node_gc_recovered:
            description: Storage system garbage collection recovered size aggregated
              for all nodes.
            value: node_gc_recovered
          node_util_percentage:
            description: the approximate bandwidth utilization of the node.
            value: node_util_percentage
          node_read_cache_fullness:
            description: Storage system node read cache fullness aggregated for all
              nodes.
            value: node_read_cache_fullness
          node_write_cache_fullness:
            description: Storage system node write cache fullness aggregated for all
              nodes.
            value: node_write_cache_fullness
          max_node_read_cache_fullness:
            description: Storage system max node read cache fullness aggregated for
              all nodes.
            value: max_node_read_cache_fullness
          max_node_write_cache_fullness:
            description: Storage system max node write cache fullness aggregated for
              all nodes.
            value: max_node_write_cache_fullness
          node_send_node_to_local_physical_data_rate:
            description: Storage system send node to local physical data rate by node.
            value: node_send_node_to_local_physical_data_rate
          node_receive_node_to_local_physical_data_rate:
            description: Storage system receive node to local physical data rate by
              node.
            value: node_receive_node_to_local_physical_data_rate
          node_total_node_to_local_physical_data_rate:
            description: Storage system total node to local physical data rate by
              node.
            value: node_total_node_to_local_physical_data_rate
          node_send_node_to_remote_physical_data_rate:
            description: Storage system send node to remote physical data rate by
              node.
            value: node_send_node_to_remote_physical_data_rate
          node_receive_node_to_remote_physical_data_rate:
            description: Storage system receive node to remote physical data rate
              by node.
            value: node_receive_node_to_remote_physical_data_rate
          node_total_node_to_remote_physical_data_rate:
            description: Storage system total node to remote physical data rate by
              node.
            value: node_total_node_to_remote_physical_data_rate
          node_send_node_to_local_logical_data_rate:
            description: Storage system send node to local logical data rate by node.
            value: node_send_node_to_local_logical_data_rate
          node_receive_node_to_local_logical_data_rate:
            description: Storage system receive node to local logical data rate by
              node.
            value: node_receive_node_to_local_logical_data_rate
          node_total_node_to_local_logical_data_rate:
            description: Storage system total node to local logical data rate by node.
            value: node_total_node_to_local_logical_data_rate
          node_send_node_to_remote_logical_data_rate:
            description: Storage system send node to remote logical data rate by node.
            value: node_send_node_to_remote_logical_data_rate
          node_receive_node_to_remote_logical_data_rate:
            description: Storage system receive node to remote logical data rate by
              node.
            value: node_receive_node_to_remote_logical_data_rate
          node_total_node_to_remote_logical_data_rate:
            description: Storage system total node to remote logical data rate by
              node.
            value: node_total_node_to_remote_logical_data_rate
          core1_system_cpu_utilization:
            description: Core 1 system cpu utilization.
            value: core1_system_cpu_utilization
          core2_system_cpu_utilization:
            description: Core 2 system cpu utilization.
            value: core2_system_cpu_utilization
          core3_system_cpu_utilization:
            description: Core 3 system cpu utilization.
            value: core3_system_cpu_utilization
          core4_system_cpu_utilization:
            description: Core 4 system cpu utilization.
            value: core4_system_cpu_utilization
          core5_system_cpu_utilization:
            description: Core 5 system cpu utilization.
            value: core5_system_cpu_utilization
          core6_system_cpu_utilization:
            description: Core 6 system cpu utilization.
            value: core6_system_cpu_utilization
          core7_system_cpu_utilization:
            description: Core 7 system cpu utilization.
            value: core7_system_cpu_utilization
          core8_system_cpu_utilization:
            description: Core 8 system cpu utilization.
            value: core8_system_cpu_utilization
          core9_system_cpu_utilization:
            description: Core 9 system cpu utilization.
            value: core9_system_cpu_utilization
          core10_system_cpu_utilization:
            description: Core 10 system cpu utilization.
            value: core10_system_cpu_utilization
          core11_system_cpu_utilization:
            description: Core 11 system cpu utilization.
            value: core11_system_cpu_utilization
          core12_system_cpu_utilization:
            description: Core 12 system cpu utilization.
            value: core12_system_cpu_utilization
          core13_system_cpu_utilization:
            description: Core 13 system cpu utilization.
            value: core13_system_cpu_utilization
          core14_system_cpu_utilization:
            description: Core 14 system cpu utilization.
            value: core14_system_cpu_utilization
          core15_system_cpu_utilization:
            description: Core 15 system cpu utilization.
            value: core15_system_cpu_utilization
          core16_system_cpu_utilization:
            description: Core 16 system cpu utilization.
            value: core16_system_cpu_utilization
          core17_system_cpu_utilization:
            description: Core 17 system cpu utilization.
            value: core17_system_cpu_utilization
          core18_system_cpu_utilization:
            description: Core 18 system cpu utilization.
            value: core18_system_cpu_utilization
          core19_system_cpu_utilization:
            description: Core 19 system cpu utilization.
            value: core19_system_cpu_utilization
          core20_system_cpu_utilization:
            description: Core 20 system cpu utilization.
            value: core20_system_cpu_utilization
      requestBody:
        description: "nodes natural keys , fetches metrics for set of natural keys\
          \ if provided or provides metrics for all natural keys in the Storage System"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/nodes/{node_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific node for a specified storage system
        for a particular tenant.
      parameters:
      - name: node_nk
        in: path
        description: The natural key of the node.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/notifications:
    get:
      tags:
      - Storage System APIs
      summary: Returns all notifications for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: duration
        in: query
        description: Notifications Requested for particular Duration(end with 'd/D'
          if day(s) or 'h/H' if hour(s))
        schema:
          type: string
      - name: severity
        in: query
        description: "Notifications Requested for particular Severity(values are critical,\
          \ critical_acknowledged, warning, warning_acknowledged, info, info_acknowledged)"
        schema:
          default: ""
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_key: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/object-storage-pools:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all object storage pools for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStoragePoolsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/object-storage-pools/{object_storage_pool_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific object storage pool for a specified
        storage system for a particular tenant.
      parameters:
      - name: object_storage_pool_nk
        in: path
        description: The natural key of the object storage pool.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStoragePoolsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/pools:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all pools for a specified storage system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/pools/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance and capacity metric values for pools in a storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by pools.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by pools.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by pools.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by pools.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by pools.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by pools.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by pools.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by pools.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by pools.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by pools.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by pools.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by pools.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by pools.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by pools.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              pools.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by pools.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by pools.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by pools.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by pools.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by pools.
            value: volume_host_time_percentage
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a pool.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a pool.
            value: volume_write_cache_delay_io_rate
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a pool.
            value: volume_cache_to_disk_transfer_rate
          volume_peak_read_response_time:
            description: Storage system peak read response time for a pool.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a pool.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a pool.
            value: volume_peak_unmap_response_time
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a pool.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a pool.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a pool.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a pool.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a pool.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a pool.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a pool.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a pool.
            value: volume_dirty_writes_cache_hits
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a pool.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              pool.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              pool.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a pool.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a pool.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a pool.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a pool.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a pool.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a pool.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a pool.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a pool.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a pool.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a pool.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a pool.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a pool.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a pool.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a pool.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a pool.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a pool.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a pool.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a pool.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a pool.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a pool.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a pool.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a pool.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a pool.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a pool.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a pool.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a pool.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a pool.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a pool.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a pool.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a pool.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a pool.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              pool.
            value: volume_cache_to_host_transfer_response_time_other
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a pool.
            value: volume_unaligned_unmap_io_rate
          disk_read_io_rate:
            description: Storage system read I/O rate aggregated by drives.
            value: disk_read_io_rate
          disk_write_io_rate:
            description: Storage system write I/O rate aggregated by drives.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate aggregated by drives.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate aggregated by drives.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate aggregated by drives.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate aggregated by drives.
            value: disk_total_response_time
          disk_read_queue_time:
            description: Storage system read queue time by drive.
            value: disk_read_queue_time
          disk_write_queue_time:
            description: Storage system write queue time by drive.
            value: disk_write_queue_time
          disk_overall_queue_time:
            description: Storage system overall queue time by drive.
            value: disk_overall_queue_time
          disk_read_peak_backend_response_time:
            description: Storage system read peak backend response time by drive.
            value: disk_read_peak_backend_response_time
          disk_write_peak_backend_response_time:
            description: Storage system write peak backend response time by drive.
            value: disk_write_peak_backend_response_time
          disk_read_peak_backend_queue_time:
            description: Storage system read peak backend queue time by drive.
            value: disk_read_peak_backend_queue_time
          disk_write_peak_backend_queue_time:
            description: Storage system write peak backend queue time by drive.
            value: disk_write_peak_backend_queue_time
          disk_read_transfer_size:
            description: Storage system read transfer size by drive.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size by drive.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by drive.
            value: disk_overall_transfer_size
          pool_write_cache_fullness:
            description: Storage system node write cache fullness aggregated for all
              pools.
            value: pool_write_cache_fullness
          max_pool_write_cache_fullness:
            description: Storage system max node write cache fullness aggregated for
              all pools.
            value: max_pool_write_cache_fullness
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
          usable_capacity:
            description: Storage system total usable capacity.
            value: usable_capacity
          total_provisioned_capacity:
            description: Storage system total provisioned capacity.
            value: total_provisioned_capacity
          shortfall_percent:
            description: Storage system shortfall percentage.
            value: shortfall_percent
          recent_growth:
            description: Storage system recent growth in bytes.
            value: recent_growth
          recent_fill_rate:
            description: Storage system recent fill rate in bytes.
            value: recent_fill_rate
          written_capacity_limit:
            description: Storage system written capacity limit.
            value: written_capacity_limit
          mapped_capacity:
            description: Storage system mapped capacity in bytes.
            value: mapped_capacity
          unmapped_capacity:
            description: Storage system unmapped capacity in bytes.
            value: unmapped_capacity
          used_written_capacity:
            description: Storage system used written capacity in bytes.
            value: used_written_capacity
          available_written_capacity:
            description: Storage system available written capacity in bytes.
            value: available_written_capacity
          used_written_capacity_percentage:
            description: Storage system used written capacity percentage.
            value: used_written_capacity_percentage
          total_provisioned_capacity_percentage:
            description: Storage system total provisioned capacity percentage.
            value: total_provisioned_capacity_percentage
          used_capacity_percentage:
            description: Storage system used capacity percentage.
            value: used_capacity_percentage
          total_compression_savings_percentage:
            description: Storage system total compression savings percentage.
            value: total_compression_savings_percentage
          deduplication_savings_percentage:
            description: Storage system deduplication savings percentage.
            value: deduplication_savings_percentage
          total_savings_percentage:
            description: Storage system total savings percentage.
            value: total_savings_percentage
          total_compression_savings:
            description: Storage system total compression savings in bytes.
            value: total_compression_savings
          deduplication_savings:
            description: Storage system deduplication savings in bytes.
            value: deduplication_savings
          total_compression_ratio:
            description: Storage system total compression ratio.
            value: total_compression_ratio
          data_reduction_ratio:
            description: Storage system data reduction ratio.
            value: data_reduction_ratio
          pool_compression_ratio:
            description: Storage system pool compression ratio.
            value: pool_compression_ratio
          pool_compression_savings:
            description: Storage system pool compression savings in bytes.
            value: pool_compression_savings
          pool_compression_savings_percentage:
            description: Storage system pool compression savings percentage.
            value: pool_compression_savings_percentage
          overprovisioned_capacity:
            description: Storage system over provisioned capacity in bytes.
            value: overprovisioned_capacity
          overhead_capacity:
            description: Storage system overhead capacity in bytes.
            value: overhead_capacity
          available_volume_capacity:
            description: Storage system available volume capacity in bytes.
            value: available_volume_capacity
          reserved_volume_capacity:
            description: Storage system reserved volume capacity for a volume.
            value: reserved_volume_capacity
          tier_0_flash_capacity:
            description: Storage system tier 0 flash capacity for a volume.
            value: tier_0_flash_capacity
          tier_1_flash_capacity:
            description: Storage system tier 1 flash capacity for a volume.
            value: tier_1_flash_capacity
          tier_2_flash_capacity:
            description: Storage system tier 2 flash capacity for a volume.
            value: tier_2_flash_capacity
          enterprise_hdd_capacity:
            description: Storage system enterprise hdd capacity for a volume.
            value: enterprise_hdd_capacity
          enterprise_hdd_available_capacity:
            description: Storage system enterprise hdd available capacity for a volume.
            value: enterprise_hdd_available_capacity
          enterprise_hdd_capacity_percentage:
            description: Storage system enterprise hdd capacity percentage for a volume.
            value: enterprise_hdd_capacity_percentage
          nearline_hdd_capacity:
            description: Storage system nearline hdd capacity for a volume.
            value: nearline_hdd_capacity
          nearline_hdd_available_capacity:
            description: Storage system nearline hdd available capacity for a volume.
            value: nearline_hdd_capacity
          nearline_hdd_capacity_percentage:
            description: Storage system nearline hdd capacity percentage for a volume.
            value: nearline_hdd_capacity_percentage
          tier_0_flash_available_capacity:
            description: Storage system tier 0 flash available capacity for a volume.
            value: tier_0_flash_available_capacity
          tier_1_flash_available_capacity:
            description: Storage system tier 1 flash available capacity for a volume.
            value: tier_1_flash_available_capacity
          tier_2_flash_available_capacity:
            description: Storage system tier 2 flash available capacity for a volume.
            value: tier_2_flash_available_capacity
          extent_size:
            description: Storage system extent size for a volume.
            value: extent_size
          scm_capacity:
            description: Storage system scm capacity for a volume.
            value: scm_capacity
          scm_capacity_percentage:
            description: Storage system scm capacity percentage for a volume.
            value: scm_capacity_percentage
          tier_0_flash_available_space:
            description: Storage system tier 0 flash available capacity for a volume.
            value: tier_0_flash_available_capacity
          tier_1_flash_available_space:
            description: Storage system tier 1 flash available capacity for a volume.
            value: tier_1_flash_available_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/pools/{storage_pool_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific pool for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_pool_nk
        in: path
        description: The natural key of the pool.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/quotas:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all quotas for a specified storage system for a
        particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/quotas/{quota_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific quota for a specified storage system
        for a particular tenant.
      parameters:
      - name: quota_nk
        in: path
        description: The natural key of the quota.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/raid-arrays:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all RAID arrays for a specified storage system for
        a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RaidArraysResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/raid-arrays/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance and capacity metric values for raid arrays in a
        storage system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          disk_read_io_rate:
            description: Storage system read I/O rate for a raid arrays
            value: disk_read_io_rate
          'disk_write_io_rate ':
            description: Storage system write I/O rate for a raid arrays.
            value: disk_write_io_rate
          total_disk_io_rate:
            description: Storage system total I/O rate for a raid arrays.
            value: total_disk_io_rate
          disk_read_data_rate:
            description: Storage system read data rate for a raid arrays.
            value: disk_read_data_rate
          disk_write_data_rate:
            description: Storage system write data rate for a raid arrays.
            value: disk_write_data_rate
          disk_total_data_rate:
            description: Storage system total data rate for a raid arrays.
            value: disk_total_data_rate
          disk_read_response_time:
            description: Storage system read data rate for a raid arrays.
            value: disk_read_response_time
          disk_write_response_time:
            description: Storage system write data rate for a raid arrays.
            value: disk_write_response_time
          disk_total_response_time:
            description: Storage system total data rate for a raid arrays.
            value: disk_total_response_time
          disk_read_transfer_size:
            description: Storage system read transfer size for a raid arrays.
            value: disk_read_transfer_size
          disk_write_transfer_size:
            description: Storage system write transfer size for a raid arrays.
            value: disk_write_transfer_size
          disk_overall_transfer_size:
            description: Storage system overall transfer size by raid arrays.
            value: disk_overall_transfer_size
          disk_utilization_percentage:
            description: Storage system disk utilization percentage by raid arrays.
            value: disk_utilization_percentage
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          capacity:
            description: Storage system capacity for a raid array.
            value: capacity
          total_compression_savings_percentage:
            description: Storage system total compression savings percentage.
            value: total_compression_savings_percentage
          total_compression_savings:
            description: Storage system total compression savings in bytes.
            value: total_compression_savings
          drive_compression_ratio:
            description: Storage system drive compression ratio.
            value: drive_compression_ratio
          ddm_capacity:
            description: Storage system ddm capacity in bytes.
            value: ddm_capacity
          physical_capacity:
            description: Storage system physical capacity in bytes.
            value: physical_capacity
          available_physical_capacity_percentage:
            description: Storage system available physical capacity percentage.
            value: available_physical_capacity_percentage
      requestBody:
        description: "Pass an array of natural keys to fetch specified raid arrays'\
          \ metrics details. Maximum 30 natural keys are allowed. To retrieve metrics\
          \ details for all raid arrays pass an empty array, e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/raid-arrays/{raid_array_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific RAID array for a specified storage
        system for a particular tenant.
      parameters:
      - name: raid_array_nk
        in: path
        description: The natural key of the RAID array.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RaidArraysResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/remote-relationships:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all remote relationships for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: type
        in: query
        schema:
          type: string
        examples:
          metro_mirror:
            description: Metro Mirror is a type of remote copy that creates a synchronous
              copy of data from a primary volume to a secondary volume.
            value: metro_mirror
          global_mirror:
            description: The Global Mirror function provides an asynchronous copy
              process.
            value: global_mirror
          global_copy:
            description: The Global Copy of the remote relationship.
            value: global_copy
          global_mirror_with_change_volumes:
            description: Global Mirror with change volumes (cycling mode set to Multiple)
              provides the same basic function of asynchronous copy operations between
              source and target volumes for disaster recovery.
            value: global_mirror_with_change_volumes
          multi_target_incremental_resynchronization:
            description: The Multi-target Incremental Resynchronization.
            value: multi_target_incremental_resynchronization
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteRelationshipsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/remote-relationships/{remote_relationship_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific remote relationship for a specified
        storage system for a particular tenant.
      parameters:
      - name: remote_relationship_nk
        in: path
        description: The natural key of the remote relationship.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: type
        in: query
        schema:
          type: string
        examples:
          metro_mirror:
            description: Metro Mirror is a type of remote copy that creates a synchronous
              copy of data from a primary volume to a secondary volume.
            value: metro_mirror
          global_mirror:
            description: The Global Mirror function provides an asynchronous copy
              process.
            value: global_mirror
          global_copy:
            description: The Global Copy of the remote relationship.
            value: global_copy
          global_mirror_with_change_volumes:
            description: Global Mirror with change volumes (cycling mode set to Multiple)
              provides the same basic function of asynchronous copy operations between
              source and target volumes for disaster recovery.
            value: global_mirror_with_change_volumes
          multi_target_incremental_resynchronization:
            description: The Multi-target Incremental Resynchronization.
            value: multi_target_incremental_resynchronization
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteRelationshipsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/replication-policies:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all replication policies for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationPoliciesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/replication-policies/{replication_policy_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific replication policy for a specified
        storage system for a particular tenant.
      parameters:
      - name: replication_policy_nk
        in: path
        description: The natural key of the replication policy.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationPoliciesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/safe-guarded-copies:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all safeguarded copies for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafeGuardedCopiesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/safe-guarded-copies/{safe_guarded_copy_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific safeguarded copy for a specified storage
        system for a particular tenant.
      parameters:
      - name: safe_guarded_copy_nk
        in: path
        description: The natural key of the safeguarded copy.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafeGuardedCopiesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/shares:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all shares for a specified storage system for a
        particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/shares/{share_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific share for a specified storage system
        for a particular tenant.
      parameters:
      - name: share_nk
        in: path
        description: The natural key of the share.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/sites:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all sites for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/sites/{site_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific Site for a specified storage system
        for a particular tenant.
      parameters:
      - name: site_nk
        in: path
        description: The natural key of the sites.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/statistics:
    get:
      tags:
      - Metrics APIs
      summary: Return top luns/disks utilization by capacity & performance for a storage
        system
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: compType
        in: query
        required: true
        schema:
          type: string
        examples:
          luns:
            description: Storage system lun
            value: luns
          disks:
            description: Storage system disk.
            value: disks
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 24h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: limit
        in: query
        description: Retrieves a specified number of top utilization based on the
          provided limit. Default is 5
        schema:
          format: int32
          default: "5"
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: type
        in: query
        required: true
        schema:
          type: string
        examples:
          volume_overall_total_io_rate:
            description: Storage system total I/O rate for a volume.
            value: volume_overall_total_io_rate
          volume_read_data_rate:
            description: Storage system read data rate for a volume.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate for a volume.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate for a volume
            value: volume_total_data_rate
          volume_total_response_time:
            description: Storage system total response time for a volume.
            value: volume_total_response_time
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hits for a volume.
            value: volume_overall_read_cache_hit_percentage
          total_disk_io_rate:
            description: Storage system total I/O rate for a drive.
            value: total_disk_io_rate
          disk_total_data_rate:
            description: Storage system total data rate for a drive.
            value: disk_total_data_rate
          disk_total_response_time:
            description: Storage system total data rate for a drive.
            value: disk_total_response_time
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopUtilizationsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/storage-partitions:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all partitions for a given storage system for a
        particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePartitionsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/storage-partitions/{storage_partition_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific partition for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_partition_nk
        in: path
        description: The natural key of the storage partition.
        required: true
        schema:
          type: string
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePartitionsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/summary:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns summary information for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummarySectionsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/vdisk-mirrors:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all vdisk mirrors for a specified storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VdiskMirrorsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/vdisk-mirrors/{vdisk_mirror_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific vdisk mirror for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: vdisk_mirror_nk
        in: path
        description: The natural key of the vdisk mirror.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VdiskMirrorsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volume-groups:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all volume-groups for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volume-groups-snapshots:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details of all volume group snapshots for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupsSnapshotsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volume-groups-snapshots/{volume_groups_snapshot_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific volume group snapshots for a specified
        storage system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: volume_groups_snapshot_nk
        in: path
        description: The natural key of the volume groups snapshots.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupsSnapshotsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volume-groups/{volume_group_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific volume-group for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: volume_group_nk
        in: path
        description: The natural key of the volume group.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGroupsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volume-mappings:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all volume mappings for a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeMappingsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volume-mappings/{volume_mapping_nk}:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns details about a specific volume mapping for a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: volume_mapping_nk
        in: path
        description: The natural key of the volume mapping.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeMappingsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volume-snapshots:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all volume snapshots in a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volumes:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all volumes in a specified storage system for a particular
        tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      - name: unprotected
        in: query
        description: Get the Unprotected Volumes data.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeDetails'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volumes/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for a volume in a storage system
        for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          volume_overall_read_io_rate:
            description: Storage system read I/O rate aggregated by volumes.
            value: volume_overall_read_io_rate
          volume_overall_write_io_rate:
            description: Storage system write I/O rate aggregated by volumes.
            value: volume_overall_write_io_rate
          volume_overall_total_io_rate:
            description: Storage system total I/O rate aggregated by volumes.
            value: volume_overall_total_io_rate
          volume_unmapped_volumes_io_rate:
            description: Storage system unmapped volumes total I/O rate aggregated
              by volumes.
            value: volume_unmapped_volumes_io_rate
          volume_overall_read_cache_hit_percentage:
            description: Storage system read cache hit percentage aggregated by volumes.
            value: volume_overall_read_cache_hit_percentage
          volume_overall_write_cache_hit_percentage:
            description: Storage system write cache hit percentage aggregated by volumes.
            value: volume_overall_write_cache_hit_percentage
          volume_overall_total_cache_hit_percentage:
            description: Storage system total cache hit percentage aggregated by volumes.
            value: volume_overall_total_cache_hit_percentage
          volume_read_data_rate:
            description: Storage system read data rate aggregated by volumes.
            value: volume_read_data_rate
          volume_write_data_rate:
            description: Storage system write data rate aggregated by volumes.
            value: volume_write_data_rate
          volume_total_data_rate:
            description: Storage system total data rate aggregated by volumes.
            value: volume_total_data_rate
          volume_unmapped_volumes_data_rate:
            description: Storage system unmapped volumes data rate aggregated by volumes.
            value: volume_unmapped_volumes_data_rate
          volume_read_transfer_size:
            description: Storage system read transfer size aggregated by volumes.
            value: volume_read_transfer_size
          volume_write_transfer_size:
            description: Storage system write transfer size aggregated by volumes.
            value: volume_write_transfer_size
          volume_total_transfer_size:
            description: Storage system total transfer size aggregated by volumes.
            value: volume_total_transfer_size
          volume_write_cache_delay_percentage:
            description: Storage system write cache delay percentage aggregated by
              volumes.
            value: volume_write_cache_delay_percentage
          volume_read_response_time:
            description: Storage system read response time aggregated by volumes.
            value: volume_read_response_time
          volume_write_response_time:
            description: Storage system write response time aggregated by volumes.
            value: volume_write_response_time
          volume_total_response_time:
            description: Storage system total response time aggregated by volumes.
            value: volume_total_response_time
          volumes_unmapped_response_time:
            description: Storage system unmapped response time aggregated by volumes.
            value: volumes_unmapped_response_time
          volume_host_time_percentage:
            description: Storage system host time percentage aggregated by volumes.
            value: volume_host_time_percentage
          volume_utilization:
            description: Storage system utilization value aggregated by volumes.
            value: volume_utilization
          volume_normal_read_io_rate:
            description: Storage system normal read I/O rate for a volume.
            value: volume_normal_read_io_rate
          volume_normal_write_io_rate:
            description: Storage system normal write I/O rate for a volume.
            value: volume_normal_write_io_rate
          volume_normal_total_io_rate:
            description: Storage system normal total I/O rate for a volume.
            value: volume_normal_total_io_rate
          volume_sequential_read_io_rate:
            description: Storage system sequential read I/O rate for a volume.
            value: volume_sequential_read_io_rate
          volume_sequential_write_io_rate:
            description: Storage system sequential write I/O rate for a volume.
            value: volume_sequential_write_io_rate
          volume_sequential_total_io_rate:
            description: Storage system sequential total I/O rate for a volume.
            value: volume_sequential_total_io_rate
          volume_record_mode_reads_io_rate:
            description: Storage system record mode read I/O rate for a volume.
            value: volume_record_mode_reads_io_rate
          volume_disk_to_cache_transfer_rate:
            description: Storage system disk to cache transfer rate for a volume.
            value: volume_disk_to_cache_transfer_rate
          volume_write_cache_delay_io_rate:
            description: Storage system write cache delay I/O rate for a volume.
            value: volume_write_cache_delay_io_rate
          volume_high_performance_ficon_read:
            description: Storage system HPF read for a volume.
            value: volume_high_performance_ficon_read
          volume_high_performance_ficon_write:
            description: Storage system HPF write for a volume.
            value: volume_high_performance_ficon_write
          volume_high_performance_ficon_total:
            description: Storage system HPF total for a volume.
            value: volume_high_performance_ficon_total
          volume_pprc_transfer_rate_others:
            description: Storage system PPRC transfer rate for a volume.
            value: volume_pprc_transfer_rate_others
          volume_unaligned_unmap_io_rate:
            description: Storage system  unaligned unmapped I/O rate for a volume.
            value: volume_unaligned_unmap_io_rate
          volume_normal_read_io_cache_hits:
            description: Storage system normal read I/O cache hits for a volume.
            value: volume_normal_read_io_cache_hits
          volume_normal_write_io_cache_hits:
            description: Storage system normal write I/O cache hits for a volume.
            value: volume_normal_write_io_cache_hits
          volume_normal_total_io_cache_hits:
            description: Storage system normal total I/O cache hits for a volume.
            value: volume_normal_total_io_cache_hits
          volume_sequential_read_io_cache_hits:
            description: Storage system sequential read I/O cache hits for a volume.
            value: volume_sequential_read_io_cache_hits
          volume_sequential_write_io_cache_hits:
            description: Storage system sequential write I/O cache hits for a volume.
            value: volume_sequential_write_io_cache_hits
          volume_sequential_total_io_cache_hits:
            description: Storage system sequential total I/O cache hits for a volume.
            value: volume_sequential_total_io_cache_hits
          volume_record_mode_reads_cache_hits:
            description: Storage system record mode reads cache hits for a volume.
            value: volume_record_mode_reads_cache_hits
          volume_data_read_cache_hits:
            description: Storage system data read cache hits for a volume.
            value: volume_data_read_cache_hits
          volume_data_write_cache_hits:
            description: Storage system data write cache hits for a volume.
            value: volume_data_write_cache_hits
          volume_data_overall_cache_hits:
            description: Storage system data overall cache hits for a volume.
            value: volume_data_overall_cache_hits
          volume_io_ssd_read_cache_hits:
            description: Storage system I/O SSD read cache hits for a volume.
            value: volume_io_ssd_read_cache_hits
          volume_data_ssd_read_cache_hits:
            description: Storage system data SSD read cache hits for a volume.
            value: volume_data_ssd_read_cache_hits
          volume_peak_read_response_time:
            description: Storage system peak read response time for a volume.
            value: volume_peak_read_response_time
          volume_peak_write_response_time:
            description: Storage system peak write response time for a volume.
            value: volume_peak_write_response_time
          volume_peak_unmap_response_time:
            description: Storage system peak unmapped response time for a volume.
            value: volume_peak_unmap_response_time
          volume_read_cache_hit_response_time:
            description: Storage system read cache hit response time for a volume.
            value: volume_read_cache_hit_response_time
          volume_write_cache_hit_response_time:
            description: Storage system write cache hit response time for a volume.
            value: volume_write_cache_hit_response_time
          volume_overall_cache_hit_response_time:
            description: Storage system overall cache hit response time for a volume.
            value: volume_overall_cache_hit_response_time
          volume_read_cache_miss_response_time:
            description: Storage system read cache miss response time for a volume.
            value: volume_read_cache_miss_response_time
          volume_write_cache_miss_response_time:
            description: Storage system write cache miss response time for a volume.
            value: volume_write_cache_miss_response_time
          volume_overall_cache_miss_response_time:
            description: Storage system overall cache miss response time for a volume.
            value: volume_overall_cache_miss_response_time
          volume_response_time_by_transfer_size_small:
            description: Storage system response time for small size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_small
          volume_response_time_by_transfer_size_medium:
            description: Storage system response time for medium size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_medium
          volume_response_time_by_transfer_size_large:
            description: Storage system response time for large size transfer for
              a volume.
            value: volume_response_time_by_transfer_size_large
          volume_response_time_by_transfer_size_very_large:
            description: Storage system response time for very large size transfer
              for a volume.
            value: volume_response_time_by_transfer_size_very_large
          volume_response_time_ssd_read_cache_hits:
            description: Storage system response time for ssd read cache hits for
              a volume.
            value: volume_response_time_ssd_read_cache_hits
          volume_global_mirror_write_io_rate:
            description: Storage system global mirror write I/O rate for a volume.
            value: volume_global_mirror_write_io_rate
          volume_global_mirror_overlapping_writes:
            description: Storage system global mirror overlapping writes for a volume.
            value: volume_global_mirror_overlapping_writes
          volume_global_mirror_overlapping_write_io_rate:
            description: Storage system global mirror overlapping write I/O rate for
              a volume.
            value: volume_global_mirror_overlapping_write_io_rate
          volume_global_mirror_secondary_write_lag:
            description: Storage system global mirror secondary write lag for a volume.
            value: volume_global_mirror_secondary_write_lag
          volume_read_cache_hits:
            description: Storage system read cache hits for a volume.
            value: volume_read_cache_hits
          volume_write_cache_hits:
            description: Storage system write cache hits for a volume.
            value: volume_write_cache_hits
          volume_total_cache_hits:
            description: Storage system total cache hits for a volume.
            value: volume_total_cache_hits
          volume_dirty_writes_cache_hits:
            description: Storage system dirty writes cache hits for a volume.
            value: volume_dirty_writes_cache_hits
          volume_cache_to_disk_transfer_rate:
            description: Storage system cache to disk transfer rate for a volume.
            value: volume_cache_to_disk_transfer_rate
          volume_total_delay_write_delay_percentage:
            description: Storage system total delay write delay percentage for a volume.
            value: volume_total_delay_write_delay_percentage
          volume_flush_through_write_delay_percentage:
            description: Storage system flush through write delay percentage for a
              volume.
            value: volume_flush_through_write_delay_percentage
          volume_write_through_write_delay_percentage:
            description: Storage system write through write delay percentage for a
              volume.
            value: volume_write_through_write_delay_percentage
          volume_total_delay_write_delay_rate:
            description: Storage system total delay write delay rate for a volume.
            value: volume_total_delay_write_delay_rate
          volume_flush_through_write_delay_rate:
            description: Storage system flush through write delay rate for a volume.
            value: volume_flush_through_write_delay_rate
          volume_write_through_write_delay_rate:
            description: Storage system write through write delay rate for a volume.
            value: volume_write_through_write_delay_rate
          volume_read_io_rate:
            description: Storage system read I/O rate for a volume.
            value: volume_read_io_rate
          volume_write_io_rate:
            description: Storage system write I/O rate for a volume.
            value: volume_write_io_rate
          volume_destage_io_rate:
            description: Storage system destage I/O rate for a volume.
            value: volume_destage_io_rate
          volume_stage_io_rate:
            description: Storage system stage I/O rate for a volume.
            value: volume_stage_io_rate
          volume_total_io_rate:
            description: Storage system total I/O rate for a volume.
            value: volume_total_io_rate
          volume_destage_response_time:
            description: Storage system destage response time for a volume.
            value: volume_destage_response_time
          volume_stage_response_time:
            description: Storage system stage response time for a volume.
            value: volume_stage_response_time
          volume_fast_write_write_data_rate:
            description: Storage system fast write data rate for a volume.
            value: volume_fast_write_write_data_rate
          volume_copy_cache_read_cache_hits:
            description: Storage system copy cache read cache hits for a volume.
            value: volume_copy_cache_read_cache_hits
          volume_copy_cache_write_cache_hits:
            description: Storage system copy cache write cache hits for a volume.
            value: volume_copy_cache_write_cache_hits
          volume_copy_cache_total_cache_hits:
            description: Storage system copy cache total cache hits for a volume.
            value: volume_copy_cache_total_cache_hits
          volume_copy_cache_dirty_writes_cache_hits:
            description: Storage system copy cache dirty writes cache hits for a volume.
            value: volume_copy_cache_dirty_writes_cache_hits
          volume_copy_cache_disk_to_cache_transfer_rate:
            description: Storage system copy cache disk to cache transfer rate for
              a volume.
            value: volume_copy_cache_disk_to_cache_transfer_rate
          volume_copy_cache_cache_to_disk_transfer_rate:
            description: Storage system copy cache cache to disk transfer rate for
              a volume.
            value: volume_copy_cache_cache_to_disk_transfer_rate
          volume_copy_cache_total_delay_write_delay_percentage:
            description: Storage system copy cache total delay write delay percentage
              for a volume.
            value: volume_copy_cache_total_delay_write_delay_percentage
          volume_copy_cache_flush_through_write_delay_percentage:
            description: Storage system copy cache flush through write delay percentage
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_percentage
          volume_copy_cache_write_through_write_delay_percentage:
            description: Storage system copy cache write through write delay percentage
              for a volume.
            value: volume_copy_cache_write_through_write_delay_percentage
          volume_copy_cache_total_delay_write_delay_rate:
            description: Storage system copy cache total delay write delay rate for
              a volume.
            value: volume_copy_cache_total_delay_write_delay_rate
          volume_copy_cache_flush_through_write_delay_rate:
            description: Storage system copy cache flush through write delay rate
              for a volume.
            value: volume_copy_cache_flush_through_write_delay_rate
          volume_copy_cache_write_through_write_delay_rate:
            description: Storage system copy cache write through write delay rate
              for a volume.
            value: volume_copy_cache_write_through_write_delay_rate
          volume_copy_cache_read_io_rate:
            description: Storage system copy cache read I/O rate for a volume.
            value: volume_copy_cache_read_io_rate
          volume_copy_cache_write_io_rate:
            description: Storage system copy cache write I/O rate for a volume.
            value: volume_copy_cache_write_io_rate
          volume_copy_cache_destage_io_rate:
            description: Storage system copy cache destage I/O rate for a volume.
            value: volume_copy_cache_destage_io_rate
          volume_copy_cache_stage_io_rate:
            description: Storage system copy cache stage I/O rate for a volume.
            value: volume_copy_cache_stage_io_rate
          volume_copy_cache_total_io_rate:
            description: Storage system copy cache total I/O rate for a volume.
            value: volume_copy_cache_total_io_rate
          volume_copy_cache_destage_response_time:
            description: Storage system copy cache destage response time for a volume.
            value: volume_copy_cache_destage_response_time
          volume_copy_cache_stage_response_time:
            description: Storage system copy cache stage response time for a volume.
            value: volume_copy_cache_stage_response_time
          volume_copy_cache_fast_write_write_data_rate:
            description: Storage system copy cache fast write date rate for a volume.
            value: volume_copy_cache_fast_write_write_data_rate
          volume_io_rate_compressed_volumes:
            description: Storage system I/O rate compressed volumes for a volume.
            value: volume_io_rate_compressed_volumes
          volume_data_rate_compressed_volumes:
            description: Storage system data rate compressed volumes for a volume.
            value: volume_data_rate_compressed_volumes
          volume_response_time_compressed_volumes:
            description: Storage system response time compressed volumes for a volume.
            value: volume_response_time_compressed_volumes
          volume_io_rate_uncompressed_volumes:
            description: Storage system I/O rate uncompressed volumes for a volume.
            value: volume_io_rate_uncompressed_volumes
          volume_data_rate_uncompressed_volumes:
            description: Storage system data rate uncompressed volumes for a volume.
            value: volume_data_rate_uncompressed_volumes
          volume_response_time_uncompressed_volumes:
            description: Storage system response time uncompressed volumes for a volume.
            value: volume_response_time_uncompressed_volumes
          volume_percentage_high_performance_ficon:
            description: Storage system HDF percentage for a volume.
            value: volume_percentage_high_performance_ficon
          volume_small_io_transfer_size:
            description: Storage system small I/O transfer size for a volume.
            value: volume_small_io_transfer_size
          volume_medium_io_transfer_size:
            description: Storage system medium I/O transfer size for a volume.
            value: volume_medium_io_transfer_size
          volume_large_io_transfer_size:
            description: Storage system large I/O transfer size for a volume.
            value: volume_large_io_transfer_size
          volume_very_large_io_transfer_size:
            description: Storage system very large I/O transfer size for a volume.
            value: volume_very_large_io_transfer_size
          volume_small_data_transfer_size:
            description: Storage system small data transfer size for a volume.
            value: volume_small_data_transfer_size
          volume_medium_data_transfer_size:
            description: Storage system medium data transfer size for a volume.
            value: volume_medium_data_transfer_size
          volume_large_data_transfer_size:
            description: Storage system large data transfer size for a volume.
            value: volume_large_data_transfer_size
          volume_very_large_data_transfer_size:
            description: Storage very large data transfer size for a volume.
            value: volume_very_large_data_transfer_size
          volume_cache_to_host_transfer_response_time_other:
            description: Storage system cache to host transfer response time for a
              volume.
            value: volume_cache_to_host_transfer_response_time_other
          available_capacity:
            description: Storage system available capacity.
            value: available_capacity
          used_capacity:
            description: Storage system used capacity.
            value: used_capacity
          written_capacity:
            description: Storage system written capacity for a volume.
            value: written_capacity
          capacity:
            description: Storage system capacity for a volume.
            value: capacity
          shortfall_percent:
            description: Storage system shortfall percentage.
            value: shortfall_percent
          reserved_volume_capacity:
            description: Storage system reserved volume capacity for a volume.
            value: reserved_volume_capacity
          tier_0_flash_capacity:
            description: Storage system tier 0 flash capacity for a volume.
            value: tier_0_flash_capacity
          tier_1_flash_capacity:
            description: Storage system tier 1 flash capacity for a volume.
            value: tier_1_flash_capacity
          tier_2_flash_capacity:
            description: Storage system tier 2 flash capacity for a volume.
            value: tier_2_flash_capacity
          enterprise_hdd_capacity:
            description: Storage system enterprise hdd capacity for a volume.
            value: enterprise_hdd_capacity
          enterprise_hdd_available_capacity:
            description: Storage system enterprise hdd available capacity for a volume.
            value: enterprise_hdd_available_capacity
          enterprise_hdd_capacity_percentage:
            description: Storage system enterprise hdd capacity percentage for a volume.
            value: enterprise_hdd_capacity_percentage
          nearline_hdd_capacity:
            description: Storage system nearline hdd capacity for a volume.
            value: nearline_hdd_capacity
          nearline_hdd_available_capacity:
            description: Storage system nearline hdd available capacity for a volume.
            value: nearline_hdd_capacity
          nearline_hdd_capacity_percentage:
            description: Storage system nearline hdd capacity percentage for a volume.
            value: nearline_hdd_capacity_percentage
          tier_0_flash_available_capacity:
            description: Storage system tier 0 flash available capacity for a volume.
            value: tier_0_flash_available_capacity
          tier_1_flash_available_capacity:
            description: Storage system tier 1 flash available capacity for a volume.
            value: tier_1_flash_available_capacity
          tier_2_flash_available_capacity:
            description: Storage system tier 2 flash available capacity for a volume.
            value: tier_2_flash_available_capacity
          unused_capacity:
            description: Storage system unused capacity for a volume.
            value: unused_capacity
          grain_size:
            description: Storage system grain size for a volume.
            value: grain_size
          used_written_capacity:
            description: Storage system used written capacity for a volume.
            value: used_written_capacity
          provisioned_capacity_percentage:
            description: Storage system provisioned capacity percentage for a volume.
            value: provisioned_capacity_percentage
          warning_level_percentage:
            description: Storage system warning level percentage for a volume.
            value: warning_level_percentage
          used_capacity_percentage:
            description: Storage system used capacity percentage for a volume.
            value: used_capacity_percentage
          extent_size:
            description: Storage system extent size for a volume.
            value: extent_size
          scm_capacity:
            description: Storage system scm capacity for a volume.
            value: scm_capacity
          scm_capacity_percentage:
            description: Storage system scm capacity percentage for a volume.
            value: scm_capacity_percentage
          tier_0_flash_available_space:
            description: Storage system tier 0 flash available capacity for a volume.
            value: tier_0_flash_available_capacity
          tier_1_flash_available_space:
            description: Storage system tier 1 flash available capacity for a volume.
            value: tier_1_flash_available_capacity
      requestBody:
        description: "Pass an array of natural keys to fetch specified volumes' metrics\
          \ details. To retrieve metrics details for all volumes, pass an empty array,\
          \ e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/storage-systems/{storage_system_uuid}/volumes/{storage_volume_nk}/volume-snapshots:
    get:
      tags:
      - Storage System Components APIs
      summary: Returns all volume snapshots for a specific volume in a specified storage
        system for a particular tenant.
      parameters:
      - name: storage_system_uuid
        in: path
        description: The unique identifier of the storage system in IBM Storage Insights.
        required: true
        schema:
          type: string
      - name: storage_volume_nk
        in: path
        description: The natural key of the volume snapshot
        required: true
        schema:
          type: string
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshotsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches:
    get:
      tags:
      - Tenant APIs
      summary: Returns details of all switches for a particular tenant.(This API is
        available for both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwitchesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for all switches in a tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_bandwidth_percentage:
            description: Storage system port send bandwidth percentage aggregated
              by Fibre Channel ports.
            value: port_send_bandwidth_percentage
          port_receive_bandwidth_percentage:
            description: Storage system port receive bandwidth percentage aggregated
              by Fibre Channel ports.
            value: port_receive_bandwidth_percentage
          overall_port_bandwidth_percentage:
            description: Storage system overall port bandwidth percentage aggregated
              by Fibre Channel ports.
            value: overall_port_bandwidth_percentage
          total_port_error_rate:
            description: Storage system total port error rate aggregated by Fibre
              Channel ports.
            value: total_port_error_rate
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc errors frame errors by port.
            value: port_crc_errors_frame_errors
          port_short_frame_rate:
            description: Storage system short frame rate of port.
            value: port_short_frame_rate
          port_long_frame_rate:
            description: Storage system long frame rate of port.
            value: port_long_frame_rate
          port_discarded_c3_frame_rate:
            description: Storage system discarded class 3 frame rate of port.
            value: port_discarded_c3_frame_rate
          port_fbsy_frame_rate:
            description: Storage system fbsy frame rate of port.
            value: port_fbsy_frame_rate
          port_frjt_frame_rate:
            description: Storage system frjt frame rate of port.
            value: port_frjt_frame_rate
          port_bad_eof_crc_error_rate:
            description: Storage system bad EOF crc error rate of port.
            value: port_bad_eof_crc_error_rate
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_discarded_frame_rate:
            description: Storage system discarded frame rate by port.
            value: port_discarded_frame_rate
          port_c3_send_timeout_frame_rate:
            description: Storage system class 3 send timeout frame rate by port.
            value: port_c3_send_timeout_frame_rate
          port_c3_receive_timeout_frame_rate:
            description: Storage system class 3 receive timeout frame rate by port.
            value: port_c3_receive_timeout_frame_rate
          port_zero_buffer_credit_rate:
            description: Storage system zero buffer credit rate by port.
            value: port_zero_buffer_credit_rate
          port_congestion_index:
            description: Storage system port congestion index by port.
            value: port_congestion_index
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_encoding_disparity_error_rate:
            description: Storage system encoding disparity error rate by port.
            value: port_encoding_disparity_error_rate
          port_send_frame_size:
            description: Storage system send frame size by port.
            value: port_send_frame_size
          port_receive_frame_size:
            description: Storage system receive frame size by port.
            value: port_receive_frame_size
          overall_port_frame_size:
            description: Storage system overall frame size by port.
            value: overall_port_frame_size
          port_link_quality_percentage:
            description: Storage system link quality percentage by port.
            value: port_link_quality_percentage
          port_send_frame_rate:
            description: Storage system send frame rate by port.
            value: port_send_frame_rate
          port_receive_frame_rate:
            description: Storage system receive frame rate by port.
            value: port_receive_frame_rate
          total_port_frame_rate:
            description: Storage system total frame rate by port.
            value: total_port_frame_rate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/{switch_uuid}:
    get:
      tags:
      - Switch APIs
      summary: Returns details of a switch for a particular tenant.
      parameters:
      - name: switch_uuid
        in: path
        description: The unique identifier of the switch in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwitchesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/{switch_uuid}/fc-ports:
    get:
      tags:
      - Switch APIs
      summary: Returns details of all switch fc ports for a specified switch for a
        particular tenant.
      parameters:
      - name: switch_uuid
        in: path
        description: The unique identifier of the switch in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwitchFCPortsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/{switch_uuid}/fc-ports/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for switch ports for a particular
        tenant.
      parameters:
      - name: switch_uuid
        in: path
        description: The unique identifier of the switch in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_bandwidth_percentage:
            description: Storage system port send bandwidth percentage aggregated
              by Fibre Channel ports.
            value: port_send_bandwidth_percentage
          port_receive_bandwidth_percentage:
            description: Storage system port receive bandwidth percentage aggregated
              by Fibre Channel ports.
            value: port_receive_bandwidth_percentage
          overall_port_bandwidth_percentage:
            description: Storage system overall port bandwidth percentage aggregated
              by Fibre Channel ports.
            value: overall_port_bandwidth_percentage
          port_peak_send_data_rate:
            description: Storage system port peak send data rate aggregated by Fibre
              Channel ports.
            value: port_peak_send_data_rate
          port_peak_receive_data_rate:
            description: Storage system port peak receive data rate aggregated by
              Fibre Channel ports.
            value: port_peak_receive_data_rate
          total_port_error_rate:
            description: Storage system total port error rate aggregated by Fibre
              Channel ports.
            value: total_port_error_rate
          total_physical_port_error_rate:
            description: Storage system total physical port error rate aggregated
              by Fibre Channel ports.
            value: total_physical_port_error_rate
          total_logical_port_error_rate:
            description: Storage system total logical port error rate aggregated by
              Fibre Channel ports.
            value: total_logical_port_error_rate
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc errors frame errors by port.
            value: port_crc_errors_frame_errors
          port_short_frame_rate:
            description: Storage system short frame rate of port.
            value: port_short_frame_rate
          port_long_frame_rate:
            description: Storage system long frame rate of port.
            value: port_long_frame_rate
          port_discarded_c3_frame_rate:
            description: Storage system discarded class 3 frame rate of port.
            value: port_discarded_c3_frame_rate
          port_fbsy_frame_rate:
            description: Storage system fbsy frame rate of port.
            value: port_fbsy_frame_rate
          port_frjt_frame_rate:
            description: Storage system frjt frame rate of port.
            value: port_frjt_frame_rate
          port_bad_eof_crc_error_rate:
            description: Storage system bad EOF crc error rate of port.
            value: port_bad_eof_crc_error_rate
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_discarded_frame_rate:
            description: Storage system discarded frame rate by port.
            value: port_discarded_frame_rate
          port_c3_send_timeout_frame_rate:
            description: Storage system class 3 send timeout frame rate by port.
            value: port_c3_send_timeout_frame_rate
          port_c3_receive_timeout_frame_rate:
            description: Storage system class 3 receive timeout frame rate by port.
            value: port_c3_receive_timeout_frame_rate
          port_zero_buffer_credit_rate:
            description: Storage system zero buffer credit rate by port.
            value: port_zero_buffer_credit_rate
          port_congestion_index:
            description: Storage system port congestion index by port.
            value: port_congestion_index
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_encoding_disparity_error_rate:
            description: Storage system encoding disparity error rate by port.
            value: port_encoding_disparity_error_rate
          port_send_frame_size:
            description: Storage system send frame size by port.
            value: port_send_frame_size
          port_receive_frame_size:
            description: Storage system receive frame size by port.
            value: port_receive_frame_size
          overall_port_frame_size:
            description: Storage system overall frame size by port.
            value: overall_port_frame_size
          port_link_quality_percentage:
            description: Storage system link quality percentage by port.
            value: port_link_quality_percentage
          port_send_frame_rate:
            description: Storage system send frame rate by port.
            value: port_send_frame_rate
          port_receive_frame_rate:
            description: Storage system receive frame rate by port.
            value: port_receive_frame_rate
          total_port_frame_rate:
            description: Storage system total frame rate by port.
            value: total_port_frame_rate
      requestBody:
        description: "Pass an array of natural keys to fetch specified fc-ports' metrics\
          \ details. Maximum 30 natural keys are allowed. To retrieve metrics details\
          \ for all fc-ports pass an empty array, e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/{switch_uuid}/fc-ports/{fc_port_nk}:
    get:
      tags:
      - Switch APIs
      summary: Returns details about a specific switch fc ports for a specified switch
        for a particular tenant.
      parameters:
      - name: fc_port_nk
        in: path
        description: The natural key of the switch fc port.
        required: true
        schema:
          type: string
      - name: switch_uuid
        in: path
        description: The unique identifier of the switch in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwitchFCPortsResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/{switch_uuid}/metrics:
    get:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for a switch in a tenant.
      parameters:
      - name: switch_uuid
        in: path
        description: The unique identifier of the switch in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_bandwidth_percentage:
            description: Storage system port send bandwidth percentage aggregated
              by Fibre Channel ports.
            value: port_send_bandwidth_percentage
          port_receive_bandwidth_percentage:
            description: Storage system port receive bandwidth percentage aggregated
              by Fibre Channel ports.
            value: port_receive_bandwidth_percentage
          overall_port_bandwidth_percentage:
            description: Storage system overall port bandwidth percentage aggregated
              by Fibre Channel ports.
            value: overall_port_bandwidth_percentage
          total_port_error_rate:
            description: Storage system total port error rate aggregated by Fibre
              Channel ports.
            value: total_port_error_rate
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc errors frame errors by port.
            value: port_crc_errors_frame_errors
          port_short_frame_rate:
            description: Storage system short frame rate of port.
            value: port_short_frame_rate
          port_long_frame_rate:
            description: Storage system long frame rate of port.
            value: port_long_frame_rate
          port_discarded_c3_frame_rate:
            description: Storage system discarded class 3 frame rate of port.
            value: port_discarded_c3_frame_rate
          port_fbsy_frame_rate:
            description: Storage system fbsy frame rate of port.
            value: port_fbsy_frame_rate
          port_frjt_frame_rate:
            description: Storage system frjt frame rate of port.
            value: port_frjt_frame_rate
          port_bad_eof_crc_error_rate:
            description: Storage system bad EOF crc error rate of port.
            value: port_bad_eof_crc_error_rate
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_discarded_frame_rate:
            description: Storage system discarded frame rate by port.
            value: port_discarded_frame_rate
          port_c3_send_timeout_frame_rate:
            description: Storage system class 3 send timeout frame rate by port.
            value: port_c3_send_timeout_frame_rate
          port_c3_receive_timeout_frame_rate:
            description: Storage system class 3 receive timeout frame rate by port.
            value: port_c3_receive_timeout_frame_rate
          port_zero_buffer_credit_rate:
            description: Storage system zero buffer credit rate by port.
            value: port_zero_buffer_credit_rate
          port_congestion_index:
            description: Storage system port congestion index by port.
            value: port_congestion_index
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_encoding_disparity_error_rate:
            description: Storage system encoding disparity error rate by port.
            value: port_encoding_disparity_error_rate
          port_send_frame_size:
            description: Storage system send frame size by port.
            value: port_send_frame_size
          port_receive_frame_size:
            description: Storage system receive frame size by port.
            value: port_receive_frame_size
          overall_port_frame_size:
            description: Storage system overall frame size by port.
            value: overall_port_frame_size
          port_link_quality_percentage:
            description: Storage system link quality percentage by port.
            value: port_link_quality_percentage
          port_send_frame_rate:
            description: Storage system send frame rate by port.
            value: port_send_frame_rate
          port_receive_frame_rate:
            description: Storage system receive frame rate by port.
            value: port_receive_frame_rate
          total_port_frame_rate:
            description: Storage system total frame rate by port.
            value: total_port_frame_rate
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/{switch_uuid}/trunks:
    get:
      tags:
      - Switch APIs
      summary: Returns details of all trunks for a specified switch for a particular
        tenant.
      parameters:
      - name: switch_uuid
        in: path
        description: The unique identifier of the switch in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunksResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/{switch_uuid}/trunks/metrics:
    post:
      tags:
      - Metrics APIs
      summary: Returns performance metric values for switch trunks for a particular
        tenant.
      parameters:
      - name: switch_uuid
        in: path
        description: The unique identifier of the switch in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: data-resolution
        in: query
        description: "Data resolution refers to the granularity of the data that is\
          \ requested for performance and capacity metrics.\n\n **The following data\
          \ resolution values are supported:**\n\n Sample: Set the granularity to\
          \ show 1-day increments for performance and metrics data.\n\n Hourly: Set\
          \ the granularity to show 1-hour increments for performance and metrics\
          \ data.\n\n Daily: Set the granularity to show sample data collected, for\
          \ example, at 15-minute intervals.\n\n **The following data resolution configurations\
          \ are supported:**  \n\n Less than 1 hour - Sample(default) \n\n Greater\
          \ than 1 hour and less than a day - Sample (default value) and Hourly \n\
          \n Greater than 1 day but less than 15 days - Sample (default value), Hourly,\
          \ and Daily \n\n Greater than 15 days but less than 30 days - Hourly( default\
          \ value) and Daily \n\n Greater than 30 days - Daily)"
        schema:
          type: string
      - name: duration
        in: query
        description: "Duration for which metric value is requested. Default value\
          \ is 24 Hours for performance metrics and 30 Days for capacity metrics.\
          \ The duration should ends with m/M or h/H or d/D, which refers to duration\
          \ minutes or hours or days. i.e. 30M, 24H, 30D."
        schema:
          default: 12h
          type: string
      - name: end-time
        in: query
        description: "Requested end time (Unix Epoch timestamp (milliseconds)) to\
          \ retrieve data. If no value is provided for end time, the current time\
          \ is used as the default value."
        schema:
          format: int64
          type: integer
      - name: start-time
        in: query
        description: Requested start time (Unix Epoch timestamp (milliseconds)) to
          retrieve data. The start time takes precedence over the duration to retrieve
          data.
        schema:
          format: int64
          type: integer
      - name: types
        in: query
        description: Metric **'types'** query parameter accepts up to 3 metric values
          only.
        required: true
        schema:
          type: array
          items:
            type: string
        examples:
          port_send_data_rate:
            description: Storage system port send data rate aggregated by Fibre Channel
              ports.
            value: port_send_data_rate
          port_receive_data_rate:
            description: Storage system port receive data rate aggregated by Fibre
              Channel ports.
            value: port_receive_data_rate
          port_total_data_rate:
            description: Storage system port total data rate aggregated by Fibre Channel
              ports.
            value: port_total_data_rate
          port_send_bandwidth_percentage:
            description: Storage system port send bandwidth percentage aggregated
              by Fibre Channel ports.
            value: port_send_bandwidth_percentage
          port_receive_bandwidth_percentage:
            description: Storage system port receive bandwidth percentage aggregated
              by Fibre Channel ports.
            value: port_receive_bandwidth_percentage
          overall_port_bandwidth_percentage:
            description: Storage system overall port bandwidth percentage aggregated
              by Fibre Channel ports.
            value: overall_port_bandwidth_percentage
          total_port_error_rate:
            description: Storage system total port error rate aggregated by Fibre
              Channel ports.
            value: total_port_error_rate
          port_error_frames_frame_errors:
            description: Storage system error frame error by port.
            value: port_error_frames_frame_errors
          port_crc_errors_frame_errors:
            description: Storage system crc errors frame errors by port.
            value: port_crc_errors_frame_errors
          port_short_frame_rate:
            description: Storage system short frame rate of port.
            value: port_short_frame_rate
          port_long_frame_rate:
            description: Storage system long frame rate of port.
            value: port_long_frame_rate
          port_discarded_c3_frame_rate:
            description: Storage system discarded class 3 frame rate of port.
            value: port_discarded_c3_frame_rate
          port_fbsy_frame_rate:
            description: Storage system fbsy frame rate of port.
            value: port_fbsy_frame_rate
          port_frjt_frame_rate:
            description: Storage system frjt frame rate of port.
            value: port_frjt_frame_rate
          port_bad_eof_crc_error_rate:
            description: Storage system bad EOF crc error rate of port.
            value: port_bad_eof_crc_error_rate
          port_credit_recovery_link_reset_rate_port_protocol_errors:
            description: Storage system credit recovery link reset rate port protocol
              errors by port.
            value: port_credit_recovery_link_reset_rate_port_protocol_errors
          port_link_reset_transmitted_port_protocol_errors:
            description: Storage system link reset transmitted port protocol errors
              by port.
            value: port_link_reset_transmitted_port_protocol_errors
          port_link_reset_received_port_protocol_errors:
            description: Storage system link reset received port protocol errors by
              port.
            value: port_link_reset_received_port_protocol_errors
          port_zero_buffer_credit_percentage_port_protocol_errors:
            description: Storage system zero buffer credit percentage port protocol
              errors by port.
            value: port_zero_buffer_credit_percentage_port_protocol_errors
          port_discarded_frame_rate:
            description: Storage system discarded frame rate by port.
            value: port_discarded_frame_rate
          port_c3_send_timeout_frame_rate:
            description: Storage system class 3 send timeout frame rate by port.
            value: port_c3_send_timeout_frame_rate
          port_c3_receive_timeout_frame_rate:
            description: Storage system class 3 receive timeout frame rate by port.
            value: port_c3_receive_timeout_frame_rate
          port_zero_buffer_credit_rate:
            description: Storage system zero buffer credit rate by port.
            value: port_zero_buffer_credit_rate
          port_congestion_index:
            description: Storage system port congestion index by port.
            value: port_congestion_index
          port_link_failures_link_errors:
            description: Storage system link failure link errors by port.
            value: port_link_failures_link_errors
          port_sync_loss_link_errors:
            description: Storage system sync loss link errors by port.
            value: port_sync_loss_link_errors
          port_signal_loss_link_errors:
            description: Storage system signal loss link errors by port.
            value: port_signal_loss_link_errors
          port_primitive_sequence_protocol_errors_link_errors:
            description: Storage system primitive sequence protocol errors by port.
            value: port_primitive_sequence_protocol_errors_link_errors
          port_invalid_transmission_link_rate_link_errors:
            description: Storage system invalid transmission link rate link errors
              by port.
            value: port_invalid_transmission_link_rate_link_errors
          port_invalid_transmission_words_link_errors:
            description: Storage system invalid transmission words link errors by
              port.
            value: port_invalid_transmission_words_link_errors
          port_encoding_disparity_error_rate:
            description: Storage system encoding disparity error rate by port.
            value: port_encoding_disparity_error_rate
          port_send_frame_size:
            description: Storage system send frame size by port.
            value: port_send_frame_size
          port_receive_frame_size:
            description: Storage system receive frame size by port.
            value: port_receive_frame_size
          overall_port_frame_size:
            description: Storage system overall frame size by port.
            value: overall_port_frame_size
          port_send_frame_rate:
            description: Storage system send frame rate by port.
            value: port_send_frame_rate
          port_receive_frame_rate:
            description: Storage system receive frame rate by port.
            value: port_receive_frame_rate
          total_port_frame_rate:
            description: Storage system total frame rate by port.
            value: total_port_frame_rate
      requestBody:
        description: "Pass an array of natural keys to fetch specified Trunks' metrics\
          \ details. Maximum 30 natural keys are allowed. To retrieve metrics details\
          \ for all Trunks pass an empty array, e.g. []"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentMetricsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        "204":
          description: No content in the response.
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Too many natural keys provided. The maximum allowed is 30
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/switches/{switch_uuid}/trunks/{trunk_nk}:
    get:
      tags:
      - Switch APIs
      summary: Returns details about a specific trunk for a specified switch for a
        particular tenant.
      parameters:
      - name: switch_uuid
        in: path
        description: The unique identifier of the switch in IBM Storage Insights.
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: trunk_nk
        in: path
        description: The natural key of the trunk.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunksResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/tiers:
    get:
      tags:
      - Tenant APIs
      summary: Get details of all tiers for a particular tenant.
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
  /restapi/v1/tenants/{tenant_uuid}/token:
    post:
      tags:
      - Token API
      summary: Creates an API token for the tenant user.(This API is available for
        both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          type: string
      responses:
        "201":
          description: API token was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        "400":
          description: Invalid request. Please review the request data and try again.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "404":
          description: No tenant entity can be found for the identifier
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
      security:
      - api_key: []
  /restapi/v1/tenants/{tenant_uuid}/warranties:
    get:
      tags:
      - Tenant APIs
      summary: Returns warranty information for all systems of the tenant.(This API
        is available for both IBM Storage Insights Pro and Free users)
      parameters:
      - name: tenant_uuid
        in: path
        description: "The unique identifier of the customer’s IBM Storage Insights\
          \ instance. For example, In an IBM Storage Insights URL: https://insights.ibm.com/gui/abcd-efgh-ijkl-mnop-xyz,\
          \ the last of the URL, \"abcd-efgh-ijkl-mnop-xyz\" is the unique identifier."
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: type
        in: query
        description: Warranty information requested for 'all' storage systems or 'expired'
          storage systems.
        schema:
          default: all
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarrantiesResponse'
        "500":
          description: An unexpected server error occurred while processing the request.
            Please try again later.
        "400":
          description: Invalid request. Please review the request data and try again.
        "403":
          description: User is not authorized to access the resource. Check access
            permissions.
        "401":
          description: "Unable to authenticate the user. API token is not provided,\
            \ invalid, or expired."
        "404":
          description: Resource not found.
      security:
      - api_token: []
components:
  schemas:
    APIResponse:
      description: SI API JSON response
      required:
      - result
      - metadata
      type: object
      properties:
        result:
          description: API invocation result
          type: object
          example: {}
        metadata:
          description: API invocation meta data
          type: object
          example:
            rc: success
            took: 10
      readOnly: true
    AcknowledgeAlerts:
      description: JSON data structure to acknowledge storage system alerts in a tenant.
      required:
      - alertIds
      type: object
      properties:
        alertIds:
          description: The list of alert Id's generated on a storage system in a tenant
          type: array
          items:
            type: string
      readOnly: true
    Advisor:
      description: Get advisories details for the particular tenant.
      required:
      - occur_timestamp
      type: object
      properties:
        event:
          description: The event of the advisor.
          type: string
        eventUUID:
          description: The event uuid of the advisor.
          type: string
        severity:
          description: The severity of the event.
          type: string
        source:
          description: The source of the event.
          type: string
        occur_timestamp:
          format: int64
          description: "The date and time when the advisor was occurred, it is timestamp\
            \ in epoch milliseconds."
          type: integer
        device_name:
          description: The name of the device.
          type: string
        more_information:
          description: The description of the event.
          type: string
        recommendation:
          description: The recommendation of the advisor.
          type: string
        related_url:
          description: Related URL of the advisor.
          type: string
        device_type:
          description: The recommendation of the advisor.
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a advisor as acknowledged.
          type: string
        serial_number:
          description: The serial number of the advisor.
          type: string
        reportingHardware:
          description: The reporting hardware of the advisor.
          type: string
        event_owner:
          description: The role/event owner of the advisor.
          type: string
        category:
          description: The category of the event.
          type: string
        system_uuid:
          description: System UUID.
          type: string
        message_code:
          description: Message Code.
          type: string
        event_instance:
          allOf:
          - $ref: '#/components/schemas/EventInstanceResponse'
          - description: Event Instance Details.
            type: string
      readOnly: true
    AdvisoriesResponse:
      description: Get advisories details for a given tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Advisor'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    AffectedResource:
      required:
      - resource
      - resourceCount
      - affectedResourceDetail
      type: object
      properties:
        resource:
          description: Affected resource component for which alert triggers.
          type: string
        resourceCount:
          format: int32
          description: Count of affected resource component for which alert triggers.
          type: integer
        affectedResourceDetail:
          description: resource(s) name and its detail which are affected.
          type: array
          additionalProperties:
            type: object
            additionalProperties: {}
        affectedResources:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
    AlertCondition:
      required:
      - conditionTitle
      - conditionViolation
      - componentType
      type: object
      properties:
        conditionTitle:
          description: Detail Condition(s) of triggered Alert.
          type: array
          items:
            type: string
        conditionViolation:
          description: The value(s) which is compared against the triggering condition
            for the attribute to determine whether an alert is generated.
          type: array
          items:
            type: string
        componentType:
          description: Parent Component for which Alert generated.
          type: string
    Alerts:
      description: Get a list of all available alerts.
      required:
      - tenantID
      - startTimestamp
      - endTimestamp
      - status
      - message
      - path
      - method
      - links
      type: object
      properties:
        tenantID:
          description: Tenant UUID of Alerts Generated.
          type: string
        startTimestamp:
          description: The start of the time range for the Alerts.
          type: number
        endTimestamp:
          description: The end of the time range for the Alerts.
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
        status:
          format: int32
          description: Response Status of Api invoked.
          type: integer
        message:
          description: Response message of Api invoked.
          type: string
        path:
          description: Api Path to invoke Alert Api.
          type: string
        method:
          description: Request Method to invoke Alert Api.
          type: string
        links:
          description: Pagination Link for Api if there are more than 500 events.
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        total_records:
          format: int32
          description: total number of records available in the dataset regardless
            of pagination
          type: integer
        totalRecords:
          format: int32
          type: integer
      readOnly: true
    Application:
      description: Get specific application details for a particular tenant.
      type: object
      properties:
        name:
          description: The name of the Application.
          type: string
        description:
          description: Description for the Application
          type: string
        block_capacity_bytes:
          description: Block capacity of the Application in bytes
          type: integer
        block_available_capacity_bytes:
          description: Block available capacity of the Application in bytes
          type: integer
        block_used_capacity_bytes:
          description: Block used capacity of the Application in bytes
          type: integer
        block_provisioned_capacity_bytes:
          description: Block provisioned capacity of the Application in bytes
          type: integer
        flash_copy_provisioned_capacity_bytes:
          description: Flash copy provisioned capacity of the Application in bytes
          type: integer
        flash_copy_used_capacity_bytes:
          description: Flash copy used capacity of the Application in bytes
          type: integer
        primary_provisioned_capacity_bytes:
          description: Primary provisioned capacity of the Application in bytes
          type: integer
        primary_used_capacity_bytes:
          description: Primary used capacity of the Application in bytes
          type: integer
        remote_mirror_provisioned_capacity_bytes:
          description: Remote mirror provisioned capacity of the Application in bytes
          type: integer
        remote_mirror_used_capacity_bytes:
          description: Remote mirror used capacity of the Application in bytes
          type: integer
        vdisk_mirror_provisioned_capacity_bytes:
          description: Vdisk mirror provisioned capacity of the Application in bytes
          type: integer
        vdisk_mirror_used_capacity_bytes:
          description: Vdisk mirror used capacity of the Application in bytes
          type: integer
        file_capacity_bytes:
          description: File capacity of the Application in bytes
          type: integer
        object_capacity_bytes:
          description: Object capacity of the Application in bytes
          type: integer
        volumes:
          description: Volumes in the Application
          type: string
        hosts:
          description: Hosts in the Application
          type: string
        vaults:
          description: Vaults in the Application
          type: string
        departments:
          description: Departments of the Application
          type: string
        type:
          description: Type of the Application
          type: string
        subtype:
          description: Subtype of the Application
          type: string
        custom_tag_1:
          description: Any user-defined text that is associated with the application.
          type: string
        custom_tag_2:
          description: Any user-defined text that is associated with the application.
          type: string
        custom_tag_3:
          description: Any user-defined text that is associated with the application.
          type: string
        system_id:
          description: The unique identifier of the storage system associated with
            the application.
          type: string
        natural_key:
          description: The unique identifier of a application.
          type: string
      readOnly: true
    ApplicationVolumeResponse:
      description: Get volume details for a particular application.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/ApplicationVolumeResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    ApplicationsResponse:
      description: Get Applications details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Application'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    ComponentMetricsRequest:
      type: object
      properties:
        naturalKeys:
          type: array
          items:
            type: string
    ConsistencyGroup:
      description: Get the details of all consistency groups for a specified storage
        system.
      required:
      - last_data_collection
      type: object
      properties:
        name:
          description: The name of the consistency group.
          type: string
        status:
          description: The status of a consistency group.
          type: string
        type:
          description: The type of the consistency group.
          type: string
        relationship_count:
          format: int32
          description: Count of the relationship of the consistency group.
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        source_storage_system:
          description: The name of the source storage system of the consistency group.
          type: string
        target_storage_system:
          description: The name of the target storage system of the consistency group.
          type: string
        natural_key:
          description: The unique identifier for consistency group.
          type: string
      readOnly: true
    ConsistencyGroupsResponse:
      description: Get storage consistency groups details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/ConsistencyGroup'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Data:
      required:
      - id
      - resource
      - name
      - condition
      - violation
      - severity
      - resourceType
      - category
      - acknowledgedBy
      - occurenceTime
      - occurences
      - parentResource
      - policy
      - source
      - creator
      - details
      - method
      type: object
      properties:
        id:
          description: A unique identifier assigned to an Alert.
          type: string
        resource:
          description: The storage resources where the alert condition was detected.
          type: string
        name:
          description: The name of an alert.
          type: string
        condition:
          description: The condition on a resource that triggered an alert.
          type: string
        violation:
          description: The value which is compared against the triggering condition
            for the attribute to determine whether an alert is generated.
          type: string
        severity:
          description: Determine the priority to resolve alerts.
          type: string
        resourceType:
          description: Parent Category of an Alert.
          type: string
        category:
          description: Sub Category of an Alert.
          type: string
        acknowledgedBy:
          description: The name of the user that acknowledged an alert.
          type: string
        occurenceTime:
          description: The date and time when the alert condition was detected on
            the storage resource.
          type: number
        occurences:
          format: int32
          description: The number of times the alert condition was detected on the
            storage resource.
          type: integer
        parentResource:
          description: The name of the storage resource where an alert condition was
            detected.
          type: string
        policy:
          description: Shows whether an alert was triggered from an alert definition
            in an alert policy.
          type: string
        source:
          description: The name of the policy which defines the alert Definition.
          type: string
        creator:
          description: The user name of the person who created the alert.
          type: string
        details:
          allOf:
          - $ref: '#/components/schemas/Details'
          - description: Details of an Alert
        method:
          description: Alert method type
          type: string
    DataNotifications:
      required:
      - event
      - severity
      - time
      - device_name
      - more_information
      - recommendation
      - related_url
      - device_type
      - event_acknowledged
      - serial_number
      - reporting_hardware
      - id
      - detailsList
      type: object
      properties:
        event:
          description: Event.
          type: string
        severity:
          description: Severity.
          type: string
        time:
          description: The time that the event occurred in the time zone of your browser
          type: number
        device_name:
          description: The name of the storage system device.
          type: string
        more_information:
          description: More Information.
          type: string
        recommendation:
          description: Recommendation
          type: string
        related_url:
          description: Related URL.
          type: string
        device_type:
          description: Device Type.
          type: string
        event_acknowledged:
          description: Acknowledged.
          type: string
        serial_number:
          description: Serial Number
          type: string
        reporting_hardware:
          description: The hardware component that reported the event
          type: string
        id:
          description: A unique number that is assigned to an alert
          type: string
        detailsList:
          description: Details List of the notifications
          type: string
          items:
            $ref: '#/components/schemas/NotificationsRows'
        details:
          type: array
          items:
            $ref: '#/components/schemas/NotificationsRows'
    Department:
      description: Get specific department details for a particular tenant.
      type: object
      properties:
        name:
          description: The name of the Department.
          type: string
        description:
          description: Description of the Department.
          type: string
        block_capacity_bytes:
          format: int64
          description: Block capacity of the Department in bytes
          type: integer
        block_available_capacity_bytes:
          format: int64
          description: Block available capacity of the Department in bytes
          type: integer
        block_used_capacity_bytes:
          format: int64
          description: Block used capacity of the Department in bytes
          type: integer
        block_provisioned_capacity_bytes:
          format: int64
          description: Block provisioned capacity of the Department in bytes
          type: integer
        flash_copy_provisioned_capacity_bytes:
          format: int64
          description: Flash copy provisioned capacity of the Department in bytes
          type: integer
        flash_copy_used_capacity_bytes:
          format: int64
          description: Flash copy used capacity of the Department in bytes
          type: integer
        primary_provisioned_capacity_bytes:
          format: int64
          description: Primary provisioned capacity of the Department in bytes
          type: integer
        primary_used_capacity_bytes:
          format: int64
          description: Primary used capacity of the Department in bytes
          type: integer
        remote_mirror_provisioned_capacity_bytes:
          format: int64
          description: Remote mirror provisioned capacity of the Department in bytes
          type: integer
        remote_mirror_used_capacity_bytes:
          format: int64
          description: Remote mirror used capacity of the Department in bytes
          type: integer
        vdisk_mirror_provisioned_capacity_bytes:
          format: int64
          description: Vdisk mirror provisioned capacity of the Department in bytes
          type: integer
        vdisk_mirror_used_capacity_bytes:
          format: int64
          description: Vdisk mirror used capacity of the Department in bytes
          type: integer
        file_capacity_bytes:
          format: int64
          description: File capacity of the Department in bytes
          type: integer
        object_capacity_bytes:
          format: int64
          description: Object capacity of the Department in bytes
          type: integer
        application:
          description: List of the volumes which are part of Volume Group.
          type: array
          items:
            type: string
        subDepartments:
          description: List of the volumes which are part of Volume Group.
          type: array
          items:
            type: string
        type:
          description: Type of the Department
          type: string
        subtype:
          description: Subtype of the Department
          type: string
        custom_tag_1:
          description: Any user-defined text that is associated with the Department.
          type: string
        custom_tag_2:
          description: Any user-defined text that is associated with the Department.
          type: string
        custom_tag_3:
          description: Any user-defined text that is associated with the Department.
          type: string
        system_id:
          description: The unique identifier of the storage system associated with
            the switch.
          type: string
        natural_key:
          description: The unique identifier of a Department.
          type: string
      readOnly: true
    DepartmentsResponse:
      description: Get departments details for a given tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Department'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Details:
      required:
      - occurrenceTimeInMs
      type: object
      properties:
        alertConditions:
          $ref: '#/components/schemas/AlertCondition'
        occurrenceTimeInMs:
          description: MilliSeconds time when the alert condition was detected on
            the storage resource.
          type: number
        affectedResourceCounts:
          $ref: '#/components/schemas/AffectedResource'
    DeviceAdapter:
      description: Get the details of all device adapters for a specified storage
        system.
      type: object
      properties:
        name:
          description: The name of the associated storage system.
          type: string
        status:
          description: "The status of a device adapter. Values include Operational,\
            \ Warning, and Error."
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a device adapter
            as acknowledged.
          type: string
        storage_system:
          description: The name of the storage system.
          type: string
        io_enclosure:
          description: The ID of the enclosure that is associated with the device
            adapter.
          type: string
        frame:
          description: The unique identifier of the equipment frame for the device
            adapter. The DS8000 hardware unit where the device adapter is located.
          type: string
        device_adapter_pair:
          description: The pair ID that is associated with the device adapter. Device
            adapter pairs are located in I/O enclosure pairs.
          type: string
        location:
          description: Specifies the I/O enclosure and the device adapter location.
          type: string
        serial_number:
          description: The serial number of the device adapter.
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        natural_key:
          description: The unique identifier for the device adapter.
          type: string
      readOnly: true
    DeviceAdaptersResponse:
      description: Get storage device adapters details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/DeviceAdapter'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Enclosure:
      description: ' Get the details of storage enclosures for a specified storage
        system.'
      required:
      - serial_number
      - status
      - acknowledged
      - type
      - machine_type_model
      - site
      - drives
      - drives_count
      - drive_slots
      - io_group
      - nodes
      - nodes_count
      - last_data_collection
      - canisters
      - canister_status
      - power_supplies
      - power_supplies_status
      - natural_key
      type: object
      properties:
        serial_number:
          description: The serial number of the enclosure.
          type: string
        status:
          description: "The status of an enclosure is determined by the most critical\
            \ status of its native operation, power supplies, and canisters."
          type: string
        acknowledged:
          description: Specifies whether a user marked the status of an enclosure
            as acknowledged. An acknowledged status indicates that its status was
            reviewed and is either resolved or can be ignored.
          type: string
        type:
          description: "The type of enclosure. Possible values are Control, Expansion,\
            \ and Storage."
          type: string
        machine_type_model:
          description: The 7-character identifier for the enclosure. The first 4 characters
            are the machine type and the last 3 characters are the model.
          type: string
        site:
          description: The physical location of the enclosure. Location information
            is provided by the associated storage system.
          type: string
        drives:
          description: The names of drives that are in the enclosure.
          type: array
          items:
            type: string
        drives_count:
          format: int32
          description: The number of drives that are in the enclosure.
          type: integer
        drive_slots:
          description: The maximum number of drive slots that can be added to the
            enclosure.
          type: integer
        io_group:
          description: The I/O group that is associated exclusively with the enclosure.
          type: string
        nodes:
          description: The names of canister nodes that are contained in the enclosure.
          type: array
          items:
            type: string
        nodes_count:
          format: int32
          description: The names of nodes that are contained in the enclosure.
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        canisters:
          description: The number of canisters in the enclosure.
          type: integer
        canister_status:
          description: The status of the canisters in the enclosure. The status of
            the canisters is included as part of the overall status of the enclosure.
          type: string
        power_supplies:
          description: The number of power supply units (PSUs) in an enclosure. Each
            enclosure has at least 2 PSUs for redundancy.
          type: integer
        power_supplies_status:
          description: The status of the power supply units (PSUs) in the enclosure.
            The status of the PSUs  is included as part of the overall status of the
            enclosure.
          type: string
        natural_key:
          description: The unique identifier for the enclosure.
          type: string
      readOnly: true
    EnclosuresResponse:
      description: Get storage enclosures details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Enclosure'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    EventInstanceResponse:
      description: Event instance details for particular event.
      type: object
      properties:
        capacity_exceeding_threshold:
          description: Capacity Exceeding Threshold
          type: string
        period_in_days:
          description: Period in days.
          type: string
        threshold:
          description: Threshold.
          type: string
        expiry_date:
          description: Expiry Date.
          type: string
        cpu_utilization:
          description: CPU Utilization.
          type: string
        threshold_period_in_days:
          description: Threshold period in days.
          type: string
      readOnly: true
    FCPort:
      description: Get details of all FC ports for a specified storage system.
      required:
      - name
      - node
      - status
      - location
      - frame
      - io_enclosure
      - host_adapter
      - speed_gbps
      - last_data_collection
      - wwpn
      - protocol
      - acknowledged
      - natural_key
      - attached_wwpn
      - fec_status
      - operating_speed
      - adv_b_b_credit
      - attach_b_b_credit
      - r_x_power
      - t_x_power
      - last_sfp_read_time
      - transceiver_supply_volt
      - transceiver_temp
      - security
      - type
      type: object
      properties:
        name:
          description: The name of the FC port
          type: string
        node:
          description: The node of the FC port
          type: string
        status:
          description: "The status of a FC port. Possible status are Normal, Warning,\
            \ Error, and Unknown."
          type: string
        location:
          description: A code that represents the physical location of a port within
            the hardware of a storage system.
          type: string
        frame:
          description: The DS8000 hardware unit where the port is located.
          type: string
        io_enclosure:
          description: The number of the I/O enclosure in the storage system.
          type: string
        host_adapter:
          description: The DS8000 physical subunit that contains the port and attaches
            to one of more host I/O interfaces.
          type: string
        speed_gbps:
          format: int64
          description: The negotiated speed of a port.
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        wwpn:
          description: The World Wide Port Name (WWPN) of a port. A WWPN is the unique
            64-bit identifier for a port in a Fibre Channel fabric.
          type: string
        protocol:
          description: "For DS8000, the Fibre Channel communication protocol that\
            \ is used by the port, which determines the type of traffic that is transmitted.\
            \ Each port on a DS8000 uses either the SCSI FCP (SCSI Fibre Channel Protocol)\
            \ or FICON® (Fibre Connection) protocol. The value Unknown is shown if\
            \ the DS8000 is not probed."
          type: string
        acknowledged:
          description: Specifies whether a user marked the status of a port as acknowledged.
            An acknowledged status indicates that the status was reviewed and is either
            resolved or can be ignored.
          type: string
        natural_key:
          description: The unique identifier of a FC port
          type: string
        attached_wwpn:
          description: The worldwide port name of the attached port.
          type: string
        fec_status:
          description: The forward error connection status.
          type: boolean
        operating_speed:
          format: int32
          description: The current port operating speed.
          type: integer
        adv_b_b_credit:
          format: int32
          description: The advertised buffer-to-buffer credit for the Fx_Port or Nx_Port
            for which diagnostic parameters are being processed.
          type: integer
        attach_b_b_credit:
          format: int32
          description: The advertised buffer-to-buffer credit that is received from
            the directly attached Fx_Port or Nx_Port.
          type: integer
        r_x_power:
          format: double
          description: The Rx power.
          type: number
        t_x_power:
          format: double
          description: The Tx power.
          type: number
        last_sfp_read_time:
          format: int64
          description: The last time that the SFP was read.
          type: integer
        transceiver_supply_volt:
          format: double
          description: The internally measured supply voltage of the transceiver.
          type: number
        transceiver_temp:
          format: double
          description: The internally measured temperature of the transceiver.
          type: number
        security:
          description: The current security setting of an I/0 port.
          type: string
        type:
          description: The port type
          type: string
      readOnly: true
    FCPortsResponse:
      description: Get storage FC ports details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/FCPort'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Fabric:
      description: Get the details of all fabric for a particular tenant.
      type: object
      properties:
        name:
          description: The name of the fabric.
          type: string
        condition:
          description: "The status of a fabric. The possible values are Unknown, Unconfigured,\
            \ Normal, Warning Acknowledged, Not Monitored, Unreachable - Acknowledged,\
            \ Error - Acknowledged, Warning and Error."
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a fabric as acknowledged.
            The issue causing the condition of the fabric to be Error or Warning was
            acknowledged by the user.
          type: string
        principal_switch_fabric:
          description: The principal switch of the fabric.
          type: string
        fabric_type:
          description: The type of the fabric either cisco or brocade.
          type: string
        switches_count:
          format: int32
          description: The number of switches in the fabric.
          type: integer
        switch_ports_count:
          format: int32
          description: "The total number of switch ports, which includes the number\
            \ of switch ports that are online and connected to other ports, and the\
            \ number of switch ports that are not online."
          type: integer
        connected_switch_ports_count:
          format: int32
          description: The number of switch ports that are online and connected.
          type: integer
        npv_switches_count:
          format: int32
          description: "The number of switches that forward FC service requests to\
            \ uplink switches. In Brocade fabrics, these switches are enabled in Access\
            \ Gateway mode."
          type: integer
        links_count:
          format: int32
          description: The number of inter-switch links (ISLs) on the switch. An ISL
            is a single link between two ports on two different switches. An ISL is
            a member of a trunk that consists of all ISLs between two switches.
          type: integer
        active_zone_set:
          description: The name of the zone set that is active in the collection of
            zone sets for the fabric.
          type: string
        wwn:
          description: "The worldwide name (WWN) of the fabric, which is a 64-bit,\
            \ unsigned name identifier that is unique."
          type: string
        location:
          description: "TThe location of the fabric, which can be defined by editing\
            \ the properties for a fabric."
          type: string
        custom_tag_1:
          description: Any user-defined text that is associated with the fabric.
          type: string
        custom_tag_2:
          description: Any user-defined text that is associated with the fabric.
          type: string
        custom_tag_3:
          description: Any user-defined text that is associated with the fabric.
          type: string
        system_uuid:
          description: The unique identifier of the storage system associated with
            the fabric.
          type: string
        systemId:
          description: The unique identifier of the storage system associated with
            the fabric.
          type: string
        natural_key:
          description: The unique identifier of a fabric.
          type: string
      readOnly: true
    FabricFCPort:
      description: Get specific FC port details for a particular fabric.
      type: object
      properties:
        name:
          description: The name of the fc port.
          type: string
        switch_name:
          description: The name of the switch.
          type: string
        fabric:
          description: The name of the fabric.
          type: string
        blade_slot:
          format: int32
          description: The count of the blade slot.
          type: integer
        port_number:
          format: int32
          description: The count of the port number.
          type: integer
        domain:
          description: "The domain ID of a switch, followed by the port index of a\
            \ switch."
          type: string
        port_index:
          format: int32
          description: The index of the switch fc port.
          type: integer
        status:
          description: "The status of a switch fc port. The possible values are Unknown,\
            \ Normal, Unreachable, Warning Acknowledged, Unreachable Acknowledged,\
            \ Error Acknowledged, Stopped Acknowledged, Warning and Error."
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a trunk as acknowledged.
          type: string
        port_type:
          description: The type of the switch fc port.
          type: string
        state:
          description: "The state of a switch fc port, such as Unavailable, Disabled,\
            \ Online, and Enabled but offline."
          type: string
        speed_gbps:
          description: The negotiated speed of a switch fc port. Speed in gbps.
          type: integer
        wwpn:
          description: The worldwide port name (WWPN) of a port. A WWPN is the unique
            64-bit identifier for a port in a Fibre Channel fabric.
          type: string
        connected_resource:
          description: "The name of the resource that is communicating with the port.\
            \ The resource can be a switch, a host, or a storage system."
          type: string
        connected_wwpn:
          description: 'The WWPN of the remote port that is connected to the port. '
          type: string
        connected_type:
          description: 'The type of connection to the port. '
          type: string
        connection_port_type:
          description: The connection port type of the fabric.
          type: string
        link:
          description: The name of the link of the fc port.
          type: string
        natural_key:
          description: The unique identifier of a fc port.
          type: string
      readOnly: true
    FabricFCPortsResponse:
      description: Get fc ports details for a particular fabric.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/FabricFCPort'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    FabricZoneSet:
      description: Get specific zone set details for a particular fabric.
      type: object
      properties:
        name:
          description: The user-defined name of the zone set. The name must be unique
            within the fabric.
          type: string
        fabric:
          description: The name of the fabric.
          type: string
        active:
          description: "Shows whether zone set property is active or not. If this\
            \ zone set property is Yes, then the zone set is active."
          type: string
        zones:
          format: int32
          description: The number of zones in the zone set.
          type: integer
        description:
          description: The user-defined description of the zone set.
          type: string
        natural_key:
          description: The unique identifier of a zone set.
          type: string
      readOnly: true
    FabricZoneSetsResponse:
      description: Get zone sets details for a particular fabric.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/FabricZoneSet'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    FabricsResponse:
      description: Get fabrics details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Fabric'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    FileSetsResponse:
      description: Get storage filesets details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Fileset'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    FileSystem:
      description: Get the details of storage File systems for a specified storage
        system.
      type: object
      properties:
        name:
          description: The name of the file system.
          type: string
        storage_system:
          description: The name of the storage system
          type: string
        storage_virtual_machine:
          description: The name of the storage virtual machine
          type: string
        path:
          description: Path of the file system
          type: string
        file_system_type:
          description: File system type
          type: string
        cluster:
          description: Cluster in which file system is present
          type: string
        capacity_percentage:
          format: float
          description: File system capacity in percentage
          type: number
        used_capacity:
          format: int64
          description: File system used capacity in bytes
          type: integer
        available_capacity:
          format: int64
          description: File system available capacity in bytes
          type: integer
        capacity:
          format: int64
          description: File system capacity in bytes
          type: integer
        physical_capacity:
          format: int64
          description: File system physical capacity in bytes
          type: integer
        external_pool_used_capacity:
          format: int64
          description: File system external pool used capacity in bytes
          type: integer
        shortfall:
          format: float
          description: File system shortfall percentage
          type: number
        used_inodes_percentage:
          format: float
          description: File system used inodes percentage
          type: number
        usedInodes:
          format: int64
          description: File system used inodes
          type: integer
        available_inodes:
          format: int64
          description: File system available inodes
          type: integer
        maximum_inodes:
          format: int64
          description: File system maximum inodes
          type: integer
        quotas:
          description: Quotas in the file system
          type: string
        snapshots:
          description: Snapshots in the file system
          type: string
        filesets:
          description: Filesets in the file system
          type: string
        pools:
          description: Pool in the file system
          type: string
        nsds:
          description: Network Shared Disks in File system
          type: string
        nodesMounting:
          description: Nodes that are actively mounted to the file system
          type: string
        last_probe_time:
          format: int64
          description: Last probe timestamp in epoch milliseconds.
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        customTag1:
          description: Custom tag 1 of the file system
          type: string
        customTag2:
          description: Custom tag 2 of the file system
          type: string
        customTag3:
          description: Custom tag 3 of the file system
          type: string
        natural_key:
          description: Natural key of the file system
          type: string
      readOnly: true
    FileSystemsResponse:
      description: Get storage file systems details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/FileSystem'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Fileset:
      description: Get the details of storage Filesets for a specified storage system.
      type: object
      properties:
        name:
          description: The name of the Fileset.
          type: string
        storage_system:
          description: The storage system from which the storage fileset is created.
          type: string
        used_capacity_bytes:
          format: int64
          description: Fileset used capacity in bytes
          type: integer
        used_inodes_percentage:
          format: float
          description: Fileset used inodes in percentage
          type: number
        path:
          description: Path of the fileset
          type: string
        file_system:
          description: File system
          type: string
        state:
          description: State of fileset
          type: string
        independent:
          description: Is the fileset independent
          type: boolean
        maximum_inodes:
          format: int64
          description: Maximum inodes in fileset
          type: integer
        usedInodes:
          format: int64
          description: Used inodes in fileset
          type: integer
        available_inodes:
          format: int64
          description: Available inodes in fileset
          type: integer
        inode_space_owner:
          description: The independent fileset that owns the inode capacity that the
            fileset is using
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        cache_role:
          description: Cache role of the fileset
          type: string
        comment:
          description: Comments by user for the fileset
          type: string
        quotas:
          description: Quotas in the fileset
          type: string
        snapshots:
          description: Snapshots in the fileset
          type: string
        natural_key:
          description: Natural key of the fileset
          type: string
      readOnly: true
    FlashCopiesResponse:
      description: Get storage flash copies details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/FlashCopy'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    FlashCopy:
      description: Get the details of storage flash copy data for a specified storage
        system.
      type: object
      properties:
        name:
          description: The name of the flash copy.
          type: string
        status:
          description: "The status of the flash copy. The possible values are Normal,\
            \ Error and Unknown."
          type: string
        source_vol:
          allOf:
          - $ref: '#/components/schemas/RelatedVolume'
          - description: The source volume that are assigned to the flash copy.
        target_vol:
          allOf:
          - $ref: '#/components/schemas/RelatedVolume'
          - description: The target volume that are assigned to the flash copy.
        source_pool:
          description: The name of the source pool of the flash copy.
          type: string
        target_pool:
          description: The name of the target pool of the flash copy.
          type: string
        source_host:
          description: The name of the source host of the flash copy.
          type: string
        target_host:
          description: The name of the target host of the flash copy.
          type: string
        source_tier:
          description: The name of the source tier of the flash copy.
          type: string
        target_tier:
          description: The name of the target tier of the flash copy.
          type: string
        consistency_group:
          description: The name of the consistency group of the flash copy.
          type: string
        volser:
          description: The name of the volser of the flash copy.
          type: string
        type:
          description: "The type of flash copy. Possible types are Not Set, Full Copy,\
            \ Incremental, Persistent, No Copy, Partial and Safeguarded Copy."
          type: string
        source_allocated_bytes:
          format: int64
          description: The source allocated capacity to the flash copy.
          type: integer
        target_allocated_bytes:
          format: int64
          description: The target allocated capacity to the flash copy.
          type: integer
        last_flashed:
          format: int64
          description: Last flashed timestamp in epoch milliseconds.
          type: integer
        natural_key:
          description: The unique identifier for the flash copy.
          type: string
      readOnly: true
    FlashSystemGrid:
      description: Get specific FlashSystem grid details for a particular tenant.
      type: object
      properties:
        name:
          description: The name of the Flash Grid.
          type: string
        si_flash_grid_uuid:
          description: The unique identifier of the Flash Grid on the Storage Insights
            level.
          type: string
        device_flash_grid_uuid:
          description: The unique identifier of the Flash Grid on the storage system
            level.
          type: string
        drives_count:
          format: int32
          description: The total number of drives present in the storage system.
          type: integer
        fc_ports_count:
          format: int32
          description: The total number of fibre channel ports present in the storage
            system.
          type: integer
        flashcopy:
          description: The flash copy of the Flash Grid.
          type: string
        critical_alerts_count:
          description: The count of critical alerts in the Flash Grid.
          type: string
        host_connections_count:
          format: int32
          description: The total number of storage partitions present in the storage
            system.
          type: integer
        ip_ports_count:
          description: The total number of IP ports present in the storage system.
          type: string
        managed_disks_count:
          format: int32
          description: The total number of managed disks present in the storage system.
          type: integer
        nsds_count:
          format: int32
          description: "The total number of disks that are installed and configured\
            \ in a storage system. For SONAS and IBM Storage Scale, this value is\
            \ the number of Network Shared Disks that are associated with the storage\
            \ system."
          type: integer
        pools_count:
          format: int32
          description: The total number of pools present in the storage system.
          type: integer
        remote_relationships_count:
          description: The total number of remote relationships present in the storage
            system.
          type: string
        vdisk_mirrors_count:
          description: The total number of vdisk mirror volumes present in the storage
            system.
          type: string
        volume_groups_count:
          format: int32
          description: The total number of volume groups present in the storage system.
          type: integer
        volumes_count:
          format: int32
          description: The total number of volumes present in the storage system.
          type: integer
        available_capacity_bytes:
          format: int64
          description: The amount of usable capacity that is not yet used in the pools
            that are associated with a storage system.
          type: integer
        available_written_capacity_bytes:
          format: int64
          description: "The amount of usable capacity that is not yet used in the\
            \ pools that are associated with a block storage system. If a pool is\
            \ a parent pool, the capacity that is used by the volumes in the child\
            \ pools is also included."
          type: integer
        data_reduction_savings_bytes:
          format: int64
          description: "The ratio of capacity that is written by applications, compared\
            \ to the capacity that is stored on the system after written data is compressed,\
            \ deduplicated, or both."
          type: integer
        drive_compression_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            on all of the managed disks in a storage system.
          type: number
        mapped_capacity_bytes:
          format: int64
          description: The total capacity in the volumes that is assigned to hosts
          type: integer
        overhead_capacity_bytes:
          format: int64
          description: The amount of usable capacity in bytes that is occupied by
            metadata in a pool or system and other data that is used for system operation.
          type: integer
        pool_compression_savings_bytes:
          format: int64
          description: The estimated amount and percentage of capacity that is saved
            in all of the pools in a storage system.
          type: integer
        pool_compression_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            in all of the pools in a storage system.
          type: number
        raw_capacity_bytes:
          format: int64
          description: The total raw (unformatted) disk capacity of a storage system.
          type: integer
        recent_growth:
          description: The amount of used capacity that is consumed by the storage
            system over the last 30 days. Use this value to identify the storage systems
            with the highest growth rates in used capacity.
          type: string
        snapshot_provisioned_capacity_bytes:
          format: int64
          description: The snapshot provisioned capacity in bytes of the storage system.
          type: integer
        snapshot_written_capacity_bytes:
          format: int64
          description: The snapshot written capacity in bytes of the storage system.
          type: integer
        total_compression_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            in a storage system by using data compression techniques.
          type: number
        total_provisioned_capacity_bytes:
          format: int64
          description: The total capacity of all volumes that are created on the storage
            system.
          type: integer
        capacity_savings_percent:
          format: float
          description: The sum total of all savings after data reduction plus thin-provisioning.
          type: number
        total_savings_capacity_bytes:
          format: int64
          description: "The estimated amount of capacity that is saved by using data\
            \ deduplication, pool compression, thin provisioning, and drive compression,\
            \ across all volumes in the pool."
          type: integer
        unmapped_capacity_bytes:
          format: int64
          description: The total capacity in the volumes that are not mapped to hosts.
          type: integer
        unprotected_volumes_count:
          description: The total number of unprotected volumes present in the storage
            system.
          type: string
        usable_capacity_bytes:
          format: int64
          description: "The amount of capacity that is available for storing data\
            \ on a system, pool, array, or MDisk after formatting and RAID techniques\
            \ are applied."
          type: integer
        used_capacity_bytes:
          format: int64
          description: "The capacity that is used by the standard-provisioned and\
            \ thin-provisioned volumes in the pools. If the pool is a parent pool,\
            \ the capacity that is used by the volumes in the child pools is also\
            \ calculated."
          type: integer
        used_capacity_percent:
          format: float
          description: "The percentage of physical capacity in the pool that is used\
            \ by the standard-provisioned volumes, the thin-provisioned volumes, and\
            \ the volumes in child pools."
          type: number
        used_written_capacity_bytes:
          format: int64
          description: The total amount of provisioned capacity that is used by all
            the volumes given the current data reduction savings.
          type: integer
        used_written_capacity_percent:
          format: float
          description: "The percentage of capacity that is provisioned to the standard-provisioned\
            \ volumes and the thin-provisioned volumes, given the drive compression\
            \ savings."
          type: number
        written_capacity_limit_bytes:
          format: int64
          description: The amount of provisioned capacity that can be created in bytes.
          type: integer
        drive_compression_savings_bytes:
          format: int64
          description: The estimated amount and percentage of capacity that is saved
            on all of the managed disks in a storage system.
          type: integer
        deduplication_savings_bytes:
          format: int64
          description: The estimated amount and percentage of capacity that is saved
            by using data deduplication. The percentage is calculated across all deduplicated
            volumes only.
          type: integer
      readOnly: true
    FlashSystemGridAdvisor:
      description: Get advisories details for the FlashSystem grid in particular tenant.
      required:
      - occur_timestamp
      type: object
      properties:
        event:
          description: The event of the advisor.
          type: string
        eventUUID:
          description: The event uuid of the advisor.
          type: string
        severity:
          description: The severity of the event.
          type: string
        source:
          description: The source of the event.
          type: string
        occur_timestamp:
          format: int64
          description: "The date and time when the advisor was occurred, it is timestamp\
            \ in epoch milliseconds."
          type: integer
        device_name:
          description: The name of the device.
          type: string
        more_information:
          description: The description of the event.
          type: string
        recommendation:
          description: The recommendation of the advisor.
          type: string
        related_url:
          description: Related URL of the advisor.
          type: string
        device_type:
          description: The recommendation of the advisor.
          type: string
        serial_number:
          description: The serial number of the advisor.
          type: string
        reportingHardware:
          description: The reporting hardware of the advisor.
          type: string
        event_owner:
          description: The role/event owner of the advisor.
          type: string
        category:
          description: The category of the event.
          type: string
        system_uuid:
          description: System UUID.
          type: string
        flashsystem_grid_system_uuid:
          description: Flashsystem Grid System UUID.
          type: string
        message_code:
          description: Message Code.
          type: string
        event_instance:
          allOf:
          - $ref: '#/components/schemas/EventInstanceResponse'
          - description: Event Instance Details.
            type: string
      readOnly: true
    FlashSystemGridAdvisorResponses:
      description: Returns details of advisories for a specified FlashSystem grid
        for a particular tenant
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/FlashSystemGridAdvisor'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    FlashSystemGridStorageSystem:
      description: Get storage system details for a particular FlashSystem grid.
      type: object
      properties:
        storage_system_name:
          description: The name of the storage system.
          type: string
        partition_counts:
          format: int32
          description: The total number of storage partitions present in the storage
            system.
          type: integer
        active_migration_count:
          format: int32
          description: The total number of storage partitions present in the storage
            system.
          type: integer
        snapshots:
          description: The name of the snapshots of the storage system.
          type: string
        control_access:
          description: The control access of the storage system.
          type: string
        custom_tag_1:
          description: Any user-defined text that is associated with the switch.
          type: string
        custom_tag_2:
          description: Any user-defined text that is associated with the switch.
          type: string
        custom_tag_3:
          description: Any user-defined text that is associated with the switch.
          type: string
        drives_count:
          format: int32
          description: The total number of drives present in the storage system.
          type: integer
        fc_ports_count:
          format: int32
          description: The total number of fibre channel ports present in the storage
            system.
          type: integer
        firmware:
          description: The firmware version of the storage system.
          type: string
        flashcopy:
          description: The flash copy of the flashgrid.
          type: string
        ip_address:
          description: The IP Address of the storage system.
          type: string
        ip_ports_count:
          description: The total number of IP ports present in the storage system.
          type: string
        location:
          description: The location of the storage system.
          type: string
        managed_disks_count:
          format: int32
          description: The total number of managed disks present in the storage system.
          type: integer
        model:
          description: The model of the storage system.
          type: string
        pools_count:
          format: int32
          description: The total number of pools present in the storage system.
          type: integer
        remote_relationships_count:
          description: The total number of remote relationships present in the storage
            system.
          type: string
        serial_number:
          description: "The serial number of the storage system. For storage systems\
            \ that run IBM Storage Virtualize, this value is the ID of the system\
            \ cluster."
          type: string
        staas_environment:
          description: Is the storage system part of a STaaS environment.
          type: string
        system_type:
          description: The system type of the storage system.
          type: string
        storage_system_id:
          description: The unique identifier of the storage system.
          type: string
        time_zone:
          description: The time zone of the storage system.
          type: string
        topology:
          description: The topology of the storage system.
          type: string
        vdisk_mirrors_count:
          description: The total number of vdisk mirror volumes present in the storage
            system.
          type: string
        vendor:
          description: The vendor of the storage system.
          type: string
        volume_groups_count:
          format: int32
          description: The total number of volume groups present in the storage system.
          type: integer
        volumes_count:
          format: int32
          description: The total number of volumes present in the storage system.
          type: integer
        acknowledged:
          description: Shows whether a user marked the status of a storage system
            as acknowledged.
          type: string
        data_collection:
          description: Data collection status that was detected on the storage system.
          type: string
        data_collection_type:
          description: "The method that is used to collect metadata about the device.\
            \ For some IBM Storage Virtualize devices, the value can be either Call\
            \ Home with cloud services or Data Collector. For all other devices, the\
            \ value is Data Collector."
          type: string
        performance_monitor_status:
          description: Performance monitoring status that was reported on the storage
            system
          type: string
        last_successful_probe:
          format: int64
          description: The last successful probe time in UTC milliseconds.
          type: integer
        last_successful_monitor:
          format: int64
          description: The last successful monitor time in UTC milliseconds.
          type: integer
        probe_status:
          description: Probe status that was reported on the storage system.
          type: string
        raw_capacity_bytes:
          format: int64
          description: The total raw (unformatted) disk capacity of a storage system.
          type: integer
        written_capacity_limit_bytes:
          format: int64
          description: The amount of provisioned capacity that can be created in bytes.
          type: integer
        used_capacity_bytes:
          format: int64
          description: "The capacity that is used by the standard-provisioned and\
            \ thin-provisioned volumes in the pools. If the pool is a parent pool,\
            \ the capacity that is used by the volumes in the child pools is also\
            \ calculated."
          type: integer
        overhead_capacity_bytes:
          format: int64
          description: The amount of usable capacity in bytes that is occupied by
            metadata in a pool or system and other data that is used for system operation.
          type: integer
        total_compression_ratio:
          format: float
          description: The ratio of the uncompressed data size to the compressed data
            size for the storage system.
          type: number
        pool_compression_ratio:
          format: float
          description: The ratio of the uncompressed data size to the compressed data
            size for all the pools in a storage system.
          type: number
        pool_compression_savings_bytes:
          format: int64
          description: The estimated amount and percentage of capacity that is saved
            in all of the pools in a storage system.
          type: integer
        pool_compression_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            in all of the pools in a storage system.
          type: number
        drive_compression_ratio:
          format: float
          description: The ratio of the uncompressed data size to the compressed data
            size for all the managed disks in a storage system.
          type: number
        drive_compression_savings_bytes:
          format: int64
          description: The estimated amount and percentage of capacity that is saved
            in all of the drives in a storage system.
          type: integer
        drive_compression_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            in all of the drives in a storage system.
          type: number
        data_reduction_ratio:
          format: float
          description: The ratio of the data capacity of a system divided by its usable
            storage capacity. This metric is available for storage systems that run
            IBM Storage Virtualize 8.5.1 or later only.
          type: number
        data_reduction_bytes:
          format: int64
          description: The data reduction bytes of a system divided by its usable
            storage capacity.
          type: integer
        total_compression_savings_bytes:
          format: int64
          description: The estimated amount of capacity that is saved in a storage
            system by using data compression techniques.
          type: integer
        total_compression_savings_percentage:
          format: float
          description: The estimated percentage of capacity that is saved in a storage
            system by using data compression techniques.
          type: number
        adjusted_used_capacity_percent:
          format: float
          description: Use this value to check whether the used capacity of the storage
            system is under or over the capacity limit.
          type: number
        capacity_limit_percent:
          format: float
          description: The capacity limit or limits that were set by the Administrator
            for the storage systems. Check the Capacity-to-Limit column to see how
            much capacity is left before the capacity limit is reached.
          type: number
        recent_growth:
          format: int64
          description: The amount of used capacity that is consumed by the storage
            system over the last 30 days. Use this value to identify the storage systems
            with the highest growth rates in used capacity.
          type: integer
        recent_fill_rate:
          format: float
          description: The rate at which the capacity of the storage system is being
            consumed over the last 30 days. Use this value to see how quickly your
            storage systems are filling up.
          type: number
        deduplication_savings_bytes:
          format: int64
          description: "The estimated amount of capacity that is saved by using data\
            \ deduplication, across all data reduction pools on the storage system."
          type: integer
        deduplication_savings_percentage:
          format: float
          description: "The estimated percentage of capacity that is saved by using\
            \ data deduplication, across all data reduction pools on the storage system."
          type: number
        total_savings_ratio:
          format: float
          description: "The ratio of all the capacity savings after data reduction\
            \ and thin-provisioning compared to the capacity that is stored on the\
            \ storage system after data is compressed, deduplicated, or both."
          type: number
        total_savings_capacity_bytes:
          format: int64
          description: "The estimated amount of capacity that is saved by using data\
            \ deduplication, pool compression, thin provisioning, and drive compression,\
            \ across all volumes in the pool."
          type: integer
        capacity_savings_percent:
          format: float
          description: The sum total of all savings after data reduction plus thin-provisioning.
          type: number
        used_written_capacity_bytes:
          format: int64
          description: The total amount of provisioned capacity that is used by all
            the volumes given the current data reduction savings.
          type: integer
        used_written_capacity_percent:
          format: float
          description: "The percentage of capacity that is provisioned to the standard-provisioned\
            \ volumes and the thin-provisioned volumes, given the drive compression\
            \ savings."
          type: number
        shortfall_percent:
          format: float
          description: "The difference between the remaining unused volume capacity\
            \ and the available capacity of the associated pools, expressed as a percentage\
            \ of the remaining unused volume capacity. The shortfall represents the\
            \ relative risk of running out of capacity for overallocated thin-provisioned\
            \ volumes."
          type: number
        total_provisioned_capacity_bytes:
          format: int64
          description: "Total capacity of all volumes that are created on the system,\
            \ which includes volumes that are not mapped to hosts."
          type: integer
        total_provisioned_capacity_percent:
          format: float
          description: "The percentage of the physical capacity that is committed\
            \ to the provisioned capacity of the volumes in the pool. If the value\
            \ exceeds 100%, the physical capacity doesn't meet the demands for provisioned\
            \ capacity."
          type: number
        mapped_capacity_bytes:
          format: int64
          description: The total capacity in the volumes that is assigned to hosts
          type: integer
        mapped_capacity_percent:
          format: float
          description: The total capacity in the volumes that is assigned to hosts.
          type: number
        unmapped_capacity_bytes:
          format: int64
          description: The total capacity in the volumes that are not mapped to hosts.
          type: integer
        unprotected_volumes_count:
          description: The total number of unprotected volumes present in the storage
            system.
          type: string
        safeguarded_used_capacity_percentage:
          format: float
          description: The used capacity percentage that is consumed by all of the
            Safeguarded Copies for a source volume in IBM Storage Virtualize and DS8000.
          type: number
        safeguarded_virtual_capacity_bytes:
          format: int64
          description: The virtual capacity that is consumed by all of the Safeguarded
            Copies for a source volume in IBM Storage Virtualize and DS8000.
          type: integer
        write_cache_bytes:
          format: int64
          description: The write cache in bytes of storage system.
          type: integer
        read_cache_bytes:
          format: int64
          description: The read cache in bytes of storage system.
          type: integer
        snapshot_provisioned_capacity_bytes:
          format: int64
          description: The snapshot provisioned capacity in bytes of the storage system.
          type: integer
        snapshot_written_capacity_bytes:
          format: int64
          description: The snapshot written capacity in bytes of the storage system.
          type: integer
        health:
          description: "The overall, operational condition of a storage system. This\
            \ condition represents the most critical status that was detected on the\
            \ storage system itself and on its internal resources"
          type: string
        events_status:
          description: Event status that was reported on the storage system.
          type: string
        compressed:
          description: Shows whether a storage Raid Array is compressed.
          type: string
        turbo_performance:
          description: The turbo performance mode determines whether the performance
            of the Storwize or SAN Volume Controller storage system is enhanced.
          type: string
        ransomware_threat_detection:
          description: Ransomware threat detection that was reported on the storage
            system.
          type: string
        threat_notification_recipients:
          description: Threat notification recipients that was reported on the storage
            system.
          type: string
        current_power_usage_watts:
          description: The total power consumed by the storage systems in Watts.
          type: integer
        system_temperature_celsius:
          description: The average temperature of the storage device in Celsius.
          type: integer
        system_temperature_fahrenheit:
          description: The average temperature of the storage device in Fahrenheit.
          type: integer
        power_efficiency:
          format: float
          description: The value of power efficiency is the consumption of total power
            divided by raw capacity bytes of the device.
          type: number
        co2_emission:
          format: float
          description: The point in time value of carbon emission by the storage device
            in kgCO2e/h.
          type: number
      readOnly: true
    FlashSystemGridStorageSystemsResponse:
      description: Get storage systems details for a particular FlashSystem grid.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/FlashSystemGridStorageSystem'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    FlashSystemGridsResponse:
      description: Get FlashSystem grid details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/FlashSystemGrid'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    GeneralGroup:
      description: Get specific general group details for a particular tenant.
      type: object
      properties:
        name:
          description: The name of the General Group.
          type: string
        subgroups:
          description: Subgroup of the General Group
          type: string
        system_id:
          description: The unique identifier of the system associated with the General
            Group.
          type: string
        natural_key:
          description: The unique identifier of a General Group.
          type: string
      readOnly: true
    GeneralGroupsResponse:
      description: Get General Groups details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/GeneralGroup'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    HardwareDetails:
      description: Warranty details of the device
      type: object
      properties:
        service_name:
          description: service name of the warranty
          type: string
        service_start_date:
          format: int64
          description: warranty service start date in epoch milliseconds
          type: integer
        service_end_date:
          format: int64
          description: warranty service end date in epoch milliseconds
          type: integer
        service_description:
          description: warranty service level description
          type: string
        expert_care:
          description: expert care of warranty
          type: string
        billing_frequency:
          description: billing frequency
          type: string
        auto_renewal:
          description: auto_renewal of warranty
          type: string
    HostConnection:
      description: Get the details of all host connections for a specified storage
        system.
      type: object
      properties:
        name:
          description: The name of the host connection.
          type: string
        status:
          description: The status of a host connection.
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a host connection
            as acknowledged.
          type: string
        cluster:
          description: Name of the associated cluster with the host connection.
          type: string
        storage_system:
          description: Name of the storage system with the host connection.
          type: string
        wwpns:
          description: "The World Wide Port Names (WWPN) that are associated with\
            \ a host, as defined on the storage system. A WWPN is the unique 64-bit\
            \ identifier for a port in a Fibre Channel fabric."
          type: string
        associated_resource:
          description: The name of the server or virtualizer that is associated with
            the host definition.
          type: string
        host_type:
          description: "The type of host connection, as defined on the storage system."
          type: string
        vols_count:
          format: int32
          description: Number of volumes (virtual disks) that are assigned to the
            host connection.
          type: integer
        volumes:
          description: List of the volumes (virtual disks) that are assigned to the
            host connection.
          type: array
          items:
            $ref: '#/components/schemas/RelatedVolume'
        fc_ports_count:
          format: int32
          description: Count of the FC ports that are on the node or module.
          type: integer
        ip_ports_count:
          format: int32
          description: Count of the IP ports that are on the node or module
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        site:
          description: The name of the site to which the host is assigned.
          type: string
        iqn:
          description: The iSCSI qualified name of the port.
          type: string
        volume_group:
          description: The name of the volume group that is associated with the host
            connection. Applies only to DS8000® storage systems.
          type: string
        natural_key:
          description: The unique identifier of the host connection.
          type: string
      readOnly: true
    HostConnectionsResponse:
      description: Get storage host connections details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/HostConnection'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    HostDatastore:
      description: Get specific datastores details for a particular host.
      required:
      - name
      - virtual_machine
      - virtual_machines_count
      - drives
      - drives_count
      - volumes
      - volumes_count
      - pools
      - pools_count
      - storage_system
      - used_capacity_percent
      type: object
      properties:
        name:
          description: The name of the data store that is mapped to the drive.
          type: string
        status:
          description: 'The status of a datastore. '
          type: string
        acknowledged:
          description: Shows whether a user marked the status of drives as acknowledged.
          type: string
        type:
          description: The type of file system.
          type: string
        cluster:
          description: "If the host is a member of a cluster, the cluster name is\
            \ displayed."
          type: string
        datastore_cluster:
          type: string
        vmdks:
          description: The path to the VMDK on the data store.
          type: string
          items:
            type: string
        vmdks_count:
          description: The number of VMDKs present in the data store.
          type: string
        virtual_machine:
          description: The virtual machines that are using the datastore. A datastore
            might be assigned to more than one virtual machines.
          type: string
          items:
            type: string
        virtual_machines_count:
          description: The number of virtual machines that are using the datastore.
            A datastore might be assigned to more than one virtual machines.
          type: string
        drives:
          description: The name of the drive on the host where the datastore is located.
          type: string
          items:
            type: string
        drives_count:
          description: The number of drives available on the host where the datastore
            is located.
          type: string
        volumes:
          description: The name of the storage volumes that provides storage space
            for the datastore.
          type: string
          items:
            $ref: '#/components/schemas/RelatedVolume'
        volumes_count:
          description: The number of storage volumes that provides storage space for
            the datastore.
          type: string
        pools:
          description: The name of the storage pool that contains the storage volume.
          type: string
          items:
            type: string
        pools_count:
          description: The number of storage pools that contains the storage volume.
          type: string
        storage_system:
          description: The name of the storage system that provides storage space
            for the datastore.
          type: string
        used_capacity_percent:
          format: float
          description: The percentage of space that is used on a file system.
          type: number
        capacity_bytes:
          format: int64
          description: Amount of storage space that is assigned to a data store.
          type: integer
        used_capacity_bytes:
          format: int64
          description: The amount of storage space that is used on a datastore.
          type: integer
        available_capacity_bytes:
          format: int64
          description: The capacity that is unused on a datastore.
          type: integer
        swap_space:
          description: Shows whether a data store is a swap volume. A swap volume
            provides virtual memory that extends the real memory (RAM) on a host.
          type: string
        file_system:
          description: The name of the file system or mount point on a host or hypervisor.
          type: string
        file_system_type:
          description: The type of file system.
          type: string
        file_system_capacity_bytes:
          format: int64
          description: The storage space on a file system.
          type: integer
        used_file_system_capacity_bytes:
          format: int64
          description: The storage capacity that is being used on a file system.
          type: integer
        available_file_system_capacity_bytes:
          format: int64
          description: The unused storage space on a file system.
          type: integer
        backend_storage_disk_type:
          type: string
        storage_io_control:
          type: boolean
        natural_key:
          description: The unique identifier for the datastore.
          type: string
      readOnly: true
    HostDatastoresResponse:
      description: Get datastores details for a host.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/HostDatastore'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    HostDriveResponse:
      description: Get specific drive details for a particular host.
      type: object
      properties:
        name:
          description: The name of the drive that is controlled by an HBA on a host.
          type: string
        status:
          description: 'The status of the paths for a host drive or hypervisor. '
          type: string
        acknowledged:
          description: Shows whether a user marked the status of drives as acknowledged.
          type: string
        virtual_machines_count:
          format: int32
          description: 'The number of virtual machines that are using the drive. '
          type: integer
        virtualMachines:
          description: 'List of virtual machines that are using the drive. '
          type: array
          items:
            type: string
        datastore:
          description: The name of the data stores that the drive is used.
          type: string
        volume:
          description: The name of the corresponding storage volume.
          type: string
        storage_system:
          description: The name of the corresponding storage system hosting the volume.
          type: string
        paths_count:
          format: int32
          description: The number of access paths that are associated with a drive.
          type: integer
        paths:
          description: List of access paths that are associated with a drive.
          type: array
          items:
            type: string
        multipathing_Policy:
          description: 'The multipathing policy that is in effect for a drive. '
          type: string
        vendor:
          description: The name of the vendor or manufacturer of the drive.
          type: string
        model:
          description: Manufacturer provides the model name of drive.
          type: string
        firmware:
          description: The firmware version of the microcode on a drive.
          type: string
        serial_number:
          description: A number or alphanumeric identifier that is given by manufacturer
            to each drive.
          type: string
        capacity_bytes:
          format: int64
          description: "The storage space that is available on a disk, which is measured\
            \ in gibibytes (GiB) or gigabytes (GB). "
          type: integer
        avail_drive_capacity_bytes:
          format: int64
          description: The capacity that is unused on a drive.
          type: integer
        used_capacity_bytes:
          format: int64
          description: The amount of storage space that is used on a drive.
          type: integer
        speed_rpm:
          format: int64
          description: The number of revolutions per minute of a drive.
          type: integer
        natural_key:
          description: The unique identifier of a drive
          type: string
      readOnly: true
    HostDrivesResponse:
      description: Get drives details for a host.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/HostDriveResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    HostHba:
      description: Get specific hba details for a particular host.
      type: object
      properties:
        name:
          description: The name of the HBA on a host.
          type: string
        description:
          description: A short description of an HBA that was provided by the manufacturer.
          type: string
        status:
          description: The status of an HBA.
          type: string
        acknowledged:
          description: Shows whether a user marked the status of drives as acknowledged.
          type: string
        type:
          description: "The type of HBA, such as IDE, SCSI, Floppy, and RAID. "
          type: string
        hba_wwn:
          description: The worldwide name (WWN) of an HBA.
          type: string
        iqn:
          description: The iSCSI-qualified name of the HBA.
          type: string
        bus_address:
          description: The SCSI bus address that is associated with an HBA is displayed.
          type: string
        associated_drives_count:
          format: int32
          description: The number of drives that are controlled by an HBA.
          type: integer
        associated_drives:
          description: List of drives that are controlled by an HBA.
          type: array
          items:
            type: string
        natural_key:
          description: The unique identifier of a hba.
          type: string
      readOnly: true
    HostHbasResponse:
      description: Get HBAs details for a particular host.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/HostHba'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    HostResponse:
      description: Get specific host details.
      type: object
      properties:
        name:
          description: The name of the host
          type: string
        condition:
          description: The overall operational condition of a host.
          type: string
        data_collection:
          description: "The aggregated status for the collection of capacity, configuration,\
            \ status, and performance metadata."
          type: string
        probe_status:
          description: The status of the most recent run of a probe.
          type: string
        performance_monitor_status:
          description: 'The status of the most recent run of a performance monitor. '
          type: string
        acknowledged:
          description: The issue was resolved or the user decided that the issue did
            not need to be investigated.
          type: string
        os_type:
          description: The operating system that is installed on a host.
          type: string
        ip_address:
          description: The IP address of a host.
          type: string
        domain_name:
          description: The fully qualified domain name of a host.
          type: string
        san_capacity_bytes:
          format: int64
          description: The SAN disk capacity that is assigned to a host from storage
            systems.
          type: integer
        used_san_capacity_bytes:
          format: int64
          description: The amount of SAN disk capacity that is being used by a host
            from storage systems.
          type: integer
        fabrics_count:
          format: int32
          description: The number of fabrics that are connected to host.
          type: integer
        switches_count:
          format: int32
          description: The number of switches that are connected to host.
          type: integer
        nodes_count:
          format: int32
          description: The number of nodes that are zoned to host.
          type: integer
        vCenter:
          description: The name of the vCenter that manages the host.
          type: string
        cluster:
          description: The name of the cluster in which the host is a member.
          type: string
        vendor:
          description: The name of the vendor or manufacturer of the host.
          type: string
        model:
          description: Manufacturer provides the model name of host.
          type: string
        serial_number:
          description: A number or alphanumeric identifier that is given by manufacturer
            to each host.
          type: string
        location:
          description: The physical location of a host.
          type: string
        flashcopy_provisioned_capacity_bytes:
          format: int64
          description: The total storage space capacity of all FlashCopy targets.
          type: integer
        flashcopy_used_capacity_bytes:
          format: int64
          description: The storage space used by the FlashCopy targets.
          type: integer
        primary_provisioned_capacity_bytes:
          format: int64
          description: The total storage space capacity of the volumes that are directly
            mapped to the host.
          type: integer
        primary_used_capacity_bytes:
          format: int64
          description: The storage space used on the volumes that are directly mapped
            to the host.
          type: integer
        remote_mirrors_provisioned_capacity_bytes:
          format: int64
          description: "TThe total storage space capacity on the volumes that are\
            \ target of a copy services relationship, such as a metro mirror or global\
            \ mirror."
          type: integer
        remote_mirrors_used_capacity_bytes:
          format: int64
          description: "The storage space used on the volumes that are target of a\
            \ copy services relationship, such as a metro mirror or global mirror."
          type: integer
        vdisk_mirrors_provisioned_capacity_bytes:
          format: int64
          description: The total storage capacity of all the VDisk copies.
          type: integer
        vdisk_mirrors_used_capacity_bytes:
          format: int64
          description: The storage capacity used by the VDisk copies.
          type: integer
        last_successful_probe:
          format: int64
          description: The most recent date and time when the probe successfully completed
            the collection of asset and status data.
          type: integer
        last_successful_monitor:
          format: int64
          description: The last time that the performance information was refreshed.
          type: integer
        custom_tag_1:
          description: 'Any user-defined text that is associated with a host. '
          type: string
        custom_tag_2:
          description: 'Any user-defined text that is associated with a host. '
          type: string
        custom_tag_3:
          description: Any user-defined text that is associated with a host.
          type: string
        system_UUID:
          description: A unique identifier that assigns to the hosts when it is added
            to IBM Storage Insights Pro.
          type: string
        systemId:
          description: A unique identifier that assigns to the hosts when it is added
            to IBM Storage Insights Pro.
          type: string
      readOnly: true
    HostVMDK:
      description: Get specific VMDK details for a particular host.
      required:
      - path
      - virtual_machine_drive_count
      - datastore
      - disks_count
      - volumes_count
      - pools_count
      - storage_system
      type: object
      properties:
        path:
          description: The location of the VMDK for the virtual machine. The path
            includes the name of the data store.
          type: string
        capacity_bytes:
          format: int64
          description: The size of the VMDK (in bytes) on the data store.
          type: integer
        used_capacity_bytes:
          format: int64
          description: The amount of storage space (in bytes) that is used on a VMDK.
          type: integer
        virtualMachineDrives:
          description: List of drives that are controlled by an VMDK.
          type: array
          items:
            type: string
        virtual_machine_drive_count:
          format: int32
          description: The number of the virtual machine that is associated with the
            VMDK.
          type: integer
        datastore:
          description: The data store that contains the VMDK.
          type: string
        disks_count:
          format: int32
          description: The number of the drives on the host where the VMDK is located.
          type: integer
        drives:
          description: List of drives that are controlled by an VMDK.
          type: array
          items:
            type: string
        volumes_count:
          format: int32
          description: The number of the volumes that is associated with the VMDK.
          type: integer
        volumes:
          description: List of volumes that are associated by an VMDK.
          type: array
          items:
            $ref: '#/components/schemas/RelatedVolume'
        pools_count:
          format: int32
          description: The number of the storage pools that contains the storage volume.
          type: integer
        pools:
          description: List of pools that are associated by an VMDK.
          type: array
          items:
            type: string
        storage_system:
          description: The name of the storage system or NAS server that provides
            storage space for the VMDK.
          type: string
        natural_key:
          description: The unique identifier for the vmdk.
          type: string
      readOnly: true
    HostVMDKsResponse:
      description: Get VMDK details for a particular host.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/HostVMDK'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    HostVMResponse:
      description: Get virtual machine details for a particular host.
      type: object
      properties:
        name:
          description: The name of the virtual machine.
          type: string
        condition:
          description: 'The overall operational condition of a virtual machine. '
          type: string
        acknowledged:
          description: The issue was resolved or the user decided that the issue did
            not need to be investigated.
          type: string
        cluster:
          description: The name of the cluster in which the host is a member.
          type: string
        os_type:
          description: 'The operating system that is installed on a virtual machine. '
          type: string
        ip_addresses:
          description: The IP address of a host.
          type: string
        sanCapacityBytes:
          format: int64
          description: The SAN disk capacity that is assigned to a virtual machine
            from storage systems.
          type: integer
        usedSanCapacityBytes:
          format: int64
          description: The amount of SAN disk capacity that is being used by a virtual
            machine from storage systems.
          type: integer
        bus_address:
          format: int32
          description: The SCSI bus address that is associated with an HBA is displayed.
          type: integer
        volumes:
          description: The number of drives that are controlled by an HBA.
          type: array
          items:
            $ref: '#/components/schemas/RelatedVolume'
        datastore_count:
          format: int32
          description: Count of the data stores that the virtual machine is used.
          type: integer
        datastores:
          description: Names of the data stores that the virtual machine is used.
          type: array
          items:
            type: string
        vmdk_count:
          format: int32
          description: Count of the VMDKs that the virtual machine is used.
          type: integer
        vmdks:
          description: Names of the VMDKs that the virtual machine is used.
          type: array
          items:
            type: string
        location:
          description: The physical location of a virtual machine.
          type: string
        custom_tag_1:
          description: 'Any user-defined text that is associated with a virtual machine. '
          type: string
        custom_tag_2:
          description: 'Any user-defined text that is associated with a virtual machine. '
          type: string
        custom_tag_3:
          description: Any user-defined text that is associated with a virtual machine.
          type: string
        system_UUID:
          description: A unique identifier that assigns to the virtual machine when
            it is added to IBM Storage Insights Pro.
          type: string
      readOnly: true
    HostVMsResponse:
      description: Get Virtual machine details for a particular host.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/HostVMResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    HostsResponse:
      description: Get hosts details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/HostResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    HyperSwap:
      description: Get the details of all hyperswap for a specified storage system.
      type: object
      properties:
        name:
          description: The name of the hyperswap.
          type: string
        source_vol:
          allOf:
          - $ref: '#/components/schemas/RelatedVolume'
          - description: The source volume that is assigned to the hyperswap.
        target_vol:
          allOf:
          - $ref: '#/components/schemas/RelatedVolume'
          - description: The target volume that is assigned to the hyperswap.
        status:
          description: The status of the hyperswap.
          type: string
        source_pool:
          description: The name of the source pool of the hyperswap.
          type: string
        target_pool:
          description: The name of the target pool of the hyperswap.
          type: string
        consistency_group:
          description: The name of the consistency group.
          type: string
        storage_system:
          description: The name of the storage system.
          type: string
        natural_key:
          description: The unique identifier for the hyperswap.
          type: string
      readOnly: true
    HyperSwapsResponse:
      description: Get storage hyperswaps details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/HyperSwap'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    IOGroup:
      description: Get the details of all I/O groups for a specified storage system.
      type: object
      properties:
        name:
          description: Name of the I/O group.
          type: string
        nodes_count:
          format: int32
          description: Node count of the I/O group.
          type: integer
        nodes:
          description: Name of nodes in the I/O group.
          type: array
          items:
            type: string
        enclosures:
          description: Enclosures that are associated exclusively with the I/O group.
          type: string
        vols_count:
          format: int32
          description: Count of volumes (virtual disks) that are assigned to the I/O
            group.
          type: integer
        volumes:
          description: List of the volumes (virtual disks) that are assigned to the
            I/O group.
          type: array
          items:
            $ref: '#/components/schemas/RelatedVolume'
        fc_ports_count:
          format: int32
          description: Count of FC ports in an I/O group.
          type: integer
        fc_ports:
          description: Names of the FC ports in an I/O group.
          type: array
          items:
            type: string
        compression:
          description: "Compression level of the I/O group. Possible values are: Unsupported,\
            \ Supported, and Active."
          type: string
        total_mirror_mem_bytes:
          format: int64
          description: Total amount of I/O group memory (in bytes) that is configured
            for volume mirroring.
          type: integer
        used_mirror_mem_bytes:
          format: int64
          description: Amount of I/O group memory (in bytes) that is used for volume
            mirroring.
          type: integer
        total_flashcopy_mem_bytes:
          format: int64
          description: Total amount of I/O group memory (in bytes) that is configured
            for standard FlashCopy and incremental FlashCopy.
          type: integer
        used_flashcopy_mem_bytes:
          format: int64
          description: Amount of I/O group memory (in bytes) that is used for FlashCopy.
          type: integer
        total_remote_copy_mem_bytes:
          format: int64
          description: Total amount of I/O group memory (in bytes) that is configured
            for Metro Mirror and Global Mirror.
          type: integer
        used_remote_copy_mem_bytes:
          format: int64
          description: Amount of I/O group memory (in bytes) that is used for Metro
            Mirror and Global Mirror.
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        natural_key:
          description: The unique identifier for the I/O group.
          type: string
    IOGroupsResponse:
      description: Get storage I/O groups details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/IOGroup'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
    IPPort:
      description: Get the details of all IP ports for a specified storage system.
      required:
      - name
      - iqn
      - storage_system
      - node
      - status
      - acknowledged
      - ip_address
      - is_storage_attached
      - is_host_attached
      - management
      - remote_copy_relation_label
      - speed_gbps
      - mtu
      - duplex
      - failover
      - last_data_collection
      - subnet
      - gateway
      - vlan
      type: object
      properties:
        name:
          description: The name of the IP Port.
          type: string
        iqn:
          description: The iSCSI qualified name of the port.
          type: string
        storage_system:
          description: Storage system associated with the IP port.
          type: string
        node:
          description: Node associated with the IP port.
          type: string
        status:
          description: Shows the configuration status and the link state of an IP
            port.
          type: string
        acknowledged:
          description: Shows whether a user marked the status of an IP port as acknowledged.
          type: boolean
        ip_address:
          description: "Shows the IP addresses for IP ports that are configured for\
            \ management, and IP addresses for iSCSI ports."
          type: string
        is_storage_attached:
          description: Shows whether the port is configured to attach to storage.
          type: boolean
        is_host_attached:
          description: Shows whether the port is configured to attach to hosts.
          type: boolean
        management:
          description: "Shows whether the port is configured for management commands,\
            \ or whether it is used only for management commands."
          type: boolean
        remote_copy_relation_label:
          description: "Shows the status of the IP replication if the port is used\
            \ for replication. The standby status indicates that the port is assigned\
            \ to a copy group, but is not active."
          type: string
        speed_gbps:
          format: int64
          description: The negotiated speed of the link between the port and the node.
          type: integer
        mtu:
          description: The maximum transmission unit that is available on the link
            between the port and the node.
          type: string
        duplex:
          description: The node is either in full-duplex state or half-duplex state.
          type: string
        failover:
          description: Shows whether the port is failed over to a different node.
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        subnet:
          description: Subnet.
          type: string
        gateway:
          description: Gateway.
          type: string
        vlan:
          description: Vlan.
          type: string
        natural_key:
          description: The unique identifier of the IP port.
          type: string
      readOnly: true
    IPPortsResponse:
      description: Get storage IP ports details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/IPPort'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    IPReplication:
      description: Get a IP replication for a specified storage system.
      required:
      - natural_key
      type: object
      properties:
        remote_system_name:
          description: The remote system name of the ip replication.
          type: string
        ip_address:
          description: The remote system name of the ip replication.
          type: string
        state:
          description: The remote system name of the ip replication.
          type: string
        natural_key:
          description: The unique identifier for the ip replication.
          type: string
      readOnly: true
    IPReplicationsResponse:
      description: Get storage IP replications details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/IPReplication'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Managed Capacity:
      description: Get storage systems managed capacity details for a particular tenant.
      type: object
      properties:
        storage_system:
          description: The name of the storage system.
          type: string
        capacity_to_be_licensed_bytes:
          format: int64
          description: The capacity that must be licensed for the storage system.
            -1 in the response indicates that the information is 'Unavailable'.
          type: integer
        monitored_back_end_capacity_bytes:
          format: int64
          description: The monitored back end capacity. -1 in the response indicates
            that the information is 'Unavailable'.
          type: integer
        total_capacity_bytes:
          format: int64
          description: The amount of total capacity. -1 in the response indicates
            that the information is 'Unavailable'.
          type: integer
        unmonitored_back_end_capacity_bytes:
          format: int64
          description: The unmonitored back end capacity. -1 in the response indicates
            that the information is 'Unavailable'.
          type: integer
      readOnly: true
    ManagedCapacitiesResponse:
      description: Get storage systems managed capacity details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Managed Capacity'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Mdisk:
      description: Get specific storage mdisk details for a storage system.
      type: object
      properties:
        name:
          description: The name of a managed disk.
          type: string
        status:
          description: The status of a managed disk.
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a managed disk as
            acknowledged.
          type: string
        pool:
          description: 'The name of the storage pool or managed disk group to which
            a managed disk belongs. '
          type: string
        storage_system:
          description: The name of the storage virtualizer that contains a managed
            disk.
          type: string
        mode:
          description: "The allocation mode of the managed disk like Unmanaged, Managed,\
            \ Image, Array."
          type: string
        active_quorum:
          description: Specifies whether a managed disks is an active quorum disk.
          type: string
        easy_tier:
          description: The tier that a managed disk is assigned to by the internal
            cluster auto-detection for internal disks or by the user for external
            disks.
          type: string
        easy_tier_load:
          description: "The workload size of a managed disk. Easy Tier uses this value\
            \ to identify the IOPS capability of the associated storage tier. Possible\
            \ values are low, medium, high, and very high."
          type: string
        capacity_bytes:
          format: int64
          description: Total amount of storage space on a managed disk.
          type: integer
        available_capacity_bytes:
          format: int64
          description: The storage capacity that is available (not allocated) on a
            managed disk.
          type: integer
        total_compression_ratio:
          description: The ratio of the uncompressed data size to the compressed data
            size for all the managed disks in a storage system.
          type: string
        pool_compression_ratio:
          description: The ratio of the uncompressed data size to the compressed data
            size for the pool that contains the managed disk.
          type: string
        drive_compression_ratio:
          description: The ratio of the uncompressed data size to the compressed data
            size for a particular managed disk in a storage system.
          type: string
        total_compression_savings_percent:
          format: float
          description: The estimated percentage of capacity that is saved in all managed
            disks in a particular storage system by using data compression techniques.
          type: number
        pool_compression_savings_percent:
          format: float
          description: The estimated percentage of capacity that is saved in the pool
            that contains the managed disk.
          type: number
        drive_compression_savings_percent:
          format: float
          description: The estimated percentage of capacity that is saved in a particular
            managed disk in a storage system.
          type: number
        class:
          description: "The technology type of the managed disk, such as Tier 0 and\
            \ Tier 1 flash solid-state drives (SSDs), NVMe SSDs, Storage Class Memory,\
            \ Enterprise and Nearline hard disk drives (HDDs), and other types."
          type: string
        raid_level:
          description: "The RAID level of a managed disk, such as RAID 5 and RAID\
            \ 10, or if the managed disk is a distributed RAID array, the RAID level\
            \ is prefixed with “D”, such as DRAID 5. "
          type: string
        volumes_count:
          format: int32
          description: The number of volumes in a managed disk.
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        backend_storage_system:
          description: The name of the storage system that is providing storage to
            a managed disk.
          type: string
        backend_pool:
          description: The name of the pool on the back-end storage system that is
            providing storage to a managed disk.
          type: string
        backend_volume:
          description: The name of the volume on the back-end storage system that
            is providing storage to a managed disk.
          type: string
        natural_key:
          description: The unique identifier of a managed disk.
          type: string
        effective_used_capacity:
          format: int64
          description: Amount of logical data that is written to the managed disk
          type: integer
        physical_free_capacity:
          format: int64
          description: Amount of formatted available physical space in the provisioning
            group that contains this managed disk
          type: integer
        physical_capacity:
          format: int64
          description: Total physical storage capacity of the provisioning group that
            contains this managed disk
          type: integer
        over_provisioned:
          description: Indicates whether the managed disk is thin-provisioned
          type: integer
        extents_count:
          format: int64
          description: Number of extents in managed disk
          type: integer
        free_extents:
          format: int64
          description: Number of free extents in managed disk
          type: integer
        allocated_capacity:
          format: int64
          description: Amount of logical capacity that is allocated (by a pool) from
            this managed disk for volume data and quorum.
          type: integer
        ctrl_type:
          format: int64
          description: Drive control type
          type: integer
        fabric_type:
          description: "The type of managed disk- fc, sas_direct, iscsi"
          type: string
        volumes:
          description: List of volumes in the managed disk
          type: array
          items:
            $ref: '#/components/schemas/RelatedVolume'
      readOnly: true
    MdisksResponse:
      description: Get storage mdisks details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Mdisk'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Metrics:
      description: Get the metrics details.
      type: object
      properties:
        timeStamp:
          format: int64
          description: Metrics generated at timestamp
          type: integer
        naturalKey:
          description: The unique identifier of a component
          type: string
        metricValue:
          description: Map of metric value by type
          type: object
          additionalProperties: {}
      readOnly: true
    MetricsDetails:
      required:
      - timeStamp
      - naturalKey
      - metricValue
      type: object
      properties:
        timeStamp:
          format: int64
          description: Metrics generated at timestamp
          type: integer
        naturalKey:
          description: The unique identifier of a component
          type: string
        metricValue:
          description: Map of metric value by type
          type: object
          additionalProperties: {}
    MetricsResponse:
      required:
      - tenantID
      - systemID
      - startTimestamp
      - endTimestamp
      - dataResolution
      - status
      - message
      - path
      - method
      - links
      type: object
      properties:
        tenantID:
          description: Identifier of the tenant
          type: string
        systemID:
          description: Identifier of the Storage System in a tenant
          type: string
        startTimestamp:
          description: Retrieve data starting from the requested start time(Unix Epoch
            timestamp(milliseconds))
          type: number
        endTimestamp:
          description: Retrieve data to the requested end time((Unix Epoch timestamp(milliseconds)))
          type: number
        dataResolution:
          description: Granuality of data for the requested time window or duration
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricsDetails'
        status:
          format: int32
          description: Response status of the API
          type: integer
        message:
          description: Response message of the API
          type: string
        path:
          description: API path of the metric
          type: string
        method:
          description: HTTP method of the request
          type: string
        links:
          description: Pagination links for the API if there are more than 500 records
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        total_records:
          format: int32
          description: total number of records available in the dataset regardless
            of pagination
          type: integer
    MirrorResponse:
      description: Get the details of storage mirror for a specified storage system.
      type: object
      properties:
        name:
          description: The name of the mirror.
          type: string
        status:
          description: status of the mirror
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a mirror as acknowledged.
          type: string
        sourceVault:
          description: Source Vault in the mirror
          type: string
        targetVault:
          description: Target Vault in the mirror
          type: string
        sourceSite:
          description: Source mirror in the mirror
          type: string
        targetSite:
          description: Target mirror in the mirror
          type: string
        source_storage_pool:
          description: Source mirror in the mirror
          type: string
        target_storage_pool:
          description: Source mirror in the mirror
          type: string
        accesserNodes:
          description: The number of Accesser nodes that the mirror is deployed to.
          type: string
        natural_key:
          description: Natural key of the mirror
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
      readOnly: true
    MirrorsResponse:
      description: Get Sites details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/MirrorResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    NSDResponse:
      description: Get the details of storage Network Shared Disks for a specified
        storage system.
      type: object
      properties:
        name:
          description: The name of the network shared disks.
          type: string
        storage_system:
          description: The name of the storage system
          type: string
        cluster:
          description: cluster of the network shared disk
          type: string
        id:
          description: id of the network shared disk
          type: string
        status:
          description: status of the network shared disk
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a network shared
            disk as acknowledged.
          type: string
        failure_group:
          format: int32
          description: Failure groups in a network shared disk
          type: integer
        capacity_percentage:
          format: float
          description: Capacity of the network shared disk in percentage
          type: number
        type:
          description: type of the network shared disk.
          type: string
        pool:
          description: Pool to which network shared disks belongs
          type: string
        used_capacity:
          format: int64
          description: Used capacity of the network shared disk in bytes.
          type: integer
        available_capacity:
          format: int64
          description: Available capacity of the network shared disk in bytes.
          type: integer
        capacity:
          format: int64
          description: capacity of the network shared disk in bytes.
          type: integer
        probeTime:
          description: Last probe timestamp in epoch milliseconds.
          type: number
        filesystem:
          description: FileSystems in the network shared disks
          type: string
        nsdServer:
          description: NSD Servers in the network shared disks
          type: string
        correlated_storage_volume:
          description: Correlated Storage Volume in the network shared disks
          type: string
        last_data_collection:
          description: Last data collection time for the network shared disk.
          type: integer
        natural_key:
          description: Natural key of the network shared disk
          type: string
      readOnly: true
    NSDsResponse:
      description: Get network shared disks details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/NSDResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Node:
      description: Get the details of all nodes for a specified storage system.
      type: object
      properties:
        name:
          description: Name of the storage system node.
          type: string
        status:
          description: The status is used to determine the condition of a managed
            disk and if any actions must be taken.
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a node or module
            as acknowledged. An acknowledged status indicates that the status was
            reviewed and is either resolved or can be ignored.
          type: string
        io_group:
          description: The name of the associated I/O group with the node.
          type: string
        spare_nodes:
          description: The nodes that are available as spares for a node.
          type: string
        site:
          description: The physical location of the node provided by the storage system.
          type: string
        type:
          description: The type of the storage system node.
          type: string
        model:
          description: The model of the storage system node.
          type: string
        configuration_node:
          description: Indicates whether a node is a configuration node.
          type: integer
        fc_ports_count:
          format: int32
          description: The total number of the FC ports in a node.
          type: integer
        fcPorts:
          description: The names of FC ports associated with the node.
          type: array
          items:
            type: string
        ip_ports_count:
          format: int32
          description: The total number of the IP ports in a node.
          type: integer
        ipPorts:
          description: The names of IP ports associated with the node.
          type: array
          items:
            type: string
        wwn:
          description: The worldwide network name of the node. A WWN is a 64 bit string
            that uniquely identifies a node.
          type: string
        ip_address:
          description: The IP address of a storage system node.
          type: string
        compression:
          description: The compression level of a node as inherited from the associated
            IO group.
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        enclosure:
          description: The enclosure that is associated with the canister node. A
            node can be associated with single enclosure only.
          type: string
        panel_name:
          description: "The panel name is the node identification label displayed\
            \ on the front panel, and is sometimes also called front panel Id."
          type: string
        natural_key:
          description: The unique identifier for a storage system node.
          type: string
        location_code:
          description: A unique value that is assigned by the storage system to identify
            the component.
          type: string
        memory_bytes:
          description: The amount of raw cache memory that is installed in the node.
          type: number
        processor:
          description: The type and configuration of the processor on the node.
          type: string
        release:
          description: The version of the licensed machine code (LMC) or hardware
            bundle on the node.
          type: string
        pools_count:
          format: int32
          description: The count of pools which are part of the node.
          type: integer
      readOnly: true
    NodesResponse:
      description: Get storage nodes details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Node'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Notifications:
      description: Get a list of all available alerts
      required:
      - tenantID
      - startTimestamp
      - endTimestamp
      - status
      - message
      - path
      - method
      - links
      type: object
      properties:
        tenantID:
          description: Tenant UUID of Alerts Generated
          type: string
        startTimestamp:
          description: The start of the time range for the Alerts
          type: number
        endTimestamp:
          description: The end of the time range for the Alerts
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataNotifications'
        status:
          format: int32
          description: Response Status of Api invoked
          type: integer
        message:
          description: Response message of Api invoked
          type: string
        path:
          description: Address to access Alert Api
          type: string
        method:
          description: Request Method to access Alert Api
          type: string
        links:
          description: Pagination Link for Api if there are more than 500 events.
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        total_records:
          format: int32
          description: total number of records available in the dataset regardless
            of pagination
          type: integer
        dataNotifications:
          type: array
          items:
            $ref: '#/components/schemas/DataNotifications'
        totalRecords:
          format: int32
          type: integer
      readOnly: true
    NotificationsRows:
      required:
      - rows
      type: object
      properties:
        rows:
          description: The list of rows
          type: string
          items:
            type: object
            additionalProperties:
              type: string
    ObjectStoragePoolResponse:
      description: Get the details of object storage pools for a specified storage
        system.
      type: object
      properties:
        name:
          description: The name of the object storage pool.
          type: string
        status:
          description: Status of the object storage pool
          type: string
        acknowledged:
          description: Shows whether an user marked the status of an object storage
            pool as acknowledged.
          type: string
        capacity_percentage:
          format: float
          description: Capacity of the object storage pool in percentage
          type: number
        used_capacity_bytes:
          format: int64
          description: Used capacity of the object storage pool in bytes.
          type: integer
        capacity_bytes:
          format: int64
          description: Capacity of the object storage pool in bytes.
          type: integer
        vaults:
          description: List of vaults name in the object storage pool
          type: array
          items:
            type: string
        vaults_count:
          format: int32
          description: The number of vaults present in the object storage pool
          type: integer
        sets:
          description: "The number of device sets in the storage pool and the number\
            \ of COS Slicestor nodes in each of the device sets. For example, a value\
            \ of 3(6) indicates that the storage pool has three device sets, with\
            \ six nodes in each set."
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        natural_key:
          description: The unique identifier of object storage pool.
          type: string
        siteName:
          type: string
        slicestorNode:
          type: string
        siteEntries:
          type: object
          additionalProperties:
            type: string
      readOnly: true
    ObjectStoragePoolsResponse:
      description: Get Object Storage Pools details for a given tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/ObjectStoragePoolResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    PartitionMigrationRequestResults:
      description: Result generated for given storage system
      type: object
      properties:
        system_uuid:
          description: System UUID.
          type: string
        flashsystem_grid_system_uuid:
          description: FlashSystem grid System UUID.
          type: string
        system_type:
          description: System Type.
          type: string
        system_name:
          description: System Name.
          type: string
        model:
          description: Model
          type: string
        compatibility_score:
          description: Compatibility Score
          type: integer
        compatibility_label:
          description: Compatibility Label.
          type: string
        message:
          description: Message.
          type: string
        message_code:
          description: Message code.
          type: string
    Pool:
      description: Get specific storage pool details for a storage system.
      type: object
      properties:
        name:
          description: The name of the storage pool.
          type: string
        storage_system:
          description: The storage system from which the storage pool is created.
          type: string
        storage_system_id:
          description: The storage system UUID from which the storage pool is created.
          type: string
        status:
          description: The status of of the storage pool.
          type: string
        acknowledged:
          description: Specifies whether the user has marked the status of a pool
            as acknowledged.
          type: string
        tier:
          description: The tier level of pools on storage virtualizers.
          type: string
        parent_name:
          description: The name of the parent pool.
          type: string
        used_written_capacity_percent:
          description: Percent of capacity that is written to the volumes in a pool
            before inline disk compression is applied.
          type: string
        used_capacity_percent:
          description: "The percentage of physical capacity that is used by the volumes\
            \ in the pool, including the volumes in child pools."
          type: string
        total_compression_ratio:
          description: The ratio of the uncompressed data size to the compressed data
            size for all the pools in a storage system.
          type: string
        pool_compression_ratio:
          description: The ratio of the uncompressed data size to the compressed data
            size for a particular pool in a storage system.
          type: string
        total_compression_savings_percent:
          format: float
          description: The estimated percentage of capacity that is saved in all pools
            in a particular storage system by using data compression techniques.
          type: number
        pool_compression_savings_percent:
          format: float
          description: The estimated percentage of capacity that is saved in a particular
            pool of a particular storage system.
          type: number
        available_capacity_bytes:
          format: int64
          description: The amount of usable capacity that is not yet used in the pool.
          type: integer
        adjusted_used_capacity_percent:
          format: float
          description: The amount of capacity that can be used without exceeding the
            capacity limit.
          type: number
        capacity_limit_percent:
          format: float
          description: The limit percent that was set on the capacity that is used
            by your pools.
          type: number
        capacity_limit_bytes:
          format: int64
          description: The capacity limit that can be used by a pool.
          type: integer
        capacity_to_limit_bytes:
          format: int64
          description: The amount of capacity that is available before the capacity
            limit is reached.
          type: integer
        recent_growth:
          description: The amount of used capacity that is consumed by the storage
            system over the last 30 days.
          type: string
        recent_fill_rate_percent:
          description: The rate at which the capacity of the pool is being consumed
            over the last 30 days.
          type: string
        overhead_capacity_bytes:
          format: int64
          description: The amount of usable capacity that is occupied by metadata
            in a pool or system and other data that is used for system operation.
          type: integer
        written_capacity_limit_bytes:
          format: int64
          description: The maximum of amount of capacity that can be written to a
            pool before inline-disk compression is applied.
          type: integer
        usable_capacity_bytes:
          format: int64
          description: The total amount of storage space in the pool.
          type: integer
        shortfall_percent:
          format: float
          description: "The difference between the remaining unused volume capacity\
            \ and the available capacity of the associated pool, expressed as a percentage\
            \ of the remaining unused volume capacity."
          type: number
        total_provisioned_percent:
          format: float
          description: The percentage of the physical capacity that is committed to
            the total provisioned capacity of the volumes in the pool.
          type: number
        used_capacity_bytes:
          format: int64
          description: The amount of physical capacity that is used by the volumes
            in the pool.
          type: integer
        available_written_capacity_bytes:
          format: int64
          description: The amount of capacity that can be written to the pools before
            inline compression is applied.
          type: integer
        available_volume_capacity_bytes:
          format: int64
          description: 'The total amount of remaining capacity that can be used by
            the existing volumes in the pools. '
          type: integer
        zero_capacity:
          description: Specifies when the storage pool will run out of storage space.
            The calculation is based on historical data consumption and capacity information
            collected and analyzed over 180 days.
          type: string
        total_provisioned_bytes:
          format: int64
          description: The total amount of provisioned capacity of volumes within
            the pool.
          type: integer
        used_written_capacity_bytes:
          format: int64
          description: The amount of capacity that is written to the volumes in a
            pool before inline disk compression is applied.
          type: integer
        reserved_volume_capacity_bytes:
          format: int64
          description: The amount of pool capacity that is reserved but has not been
            used yet to store data on the thin-provisioned volume.
          type: integer
        overprovisioned_capacity_bytes:
          format: int64
          description: 'The capacity that cannot be used by volumes because the physical
            capacity of the pool cannot meet the demands for provisioned capacity. '
          type: integer
        pool_attributes:
          description: "Specifies whether the data reduction, encryption, and thin\
            \ provisioned, or all the three features are configured for the storage\
            \ pool."
          type: string
        soft_capacity_bytes:
          format: int64
          description: The amount of virtual storage space that is configured for
            the pool.
          type: integer
        available_soft_capacity_bytes:
          format: int64
          description: The amount of virtual storage space that is available to allocate
            to volumes in a storage pool.
          type: integer
        raid_level:
          description: "The RAID level of the pool, such as RAID 5 or RAID 10."
          type: string
        format:
          description: "The formats of the volumes that are allocated from a pool,\
            \ such as FB (fixed block) or CKD (count key data). Available only for\
            \ DS8000 pools."
          type: string
        rank_group:
          description: The rank group that is assigned to a storage pool. Available
            only for DS8000 storage pools.
          type: integer
        encryption:
          description: Encryption information of a pool
          type: string
        encrypt_group:
          description: The identifier of the encryption group that was specified when
            the pool was created. Available only for DS8000 pools.
          type: string
        extent_size_bytes:
          format: int64
          description: "The extent granularity that was specified when a pool was\
            \ created. Smaller extent sizes limit the maximum size of the volumes\
            \ that can be created in a pool, but minimize the amount of potentially\
            \ wasted space per volume."
          type: integer
        deduplication_savings_percent:
          format: float
          description: 'The estimated amount and percentage of capacity that is saved
            by using data deduplication. '
          type: number
        total_savings_percent:
          format: float
          description: "The estimated amount and percentage of capacity that is saved\
            \ by using data deduplication, pool compression, thin provisioning, and\
            \ drive compression, across all volumes in the pool."
          type: number
        mapped_capacity_bytes:
          format: int64
          description: The space on all of the volumes in a pool that are mapped or
            assigned to host systems.
          type: integer
        unmapped_capacity_bytes:
          format: int64
          description: 'The total amount of space in the volumes that are not assigned
            to hosts. '
          type: integer
        sgcopy_virtual_capacity_bytes:
          format: int64
          description: The total virtual capacity allocated to store safeguarded backups
            for a safeguarded source.
          type: integer
        safeguard_used_capacity_percent:
          format: float
          description: The percentage of safeguarded capacity currently used.
          type: number
        safeguarded_capacity_bytes:
          format: int64
          description: The capacity that is consumed by all of the Safeguarded Copies
            for a source volume in IBM Storage Virtualize and DS8000.
          type: integer
        repository_capacity_bytes:
          format: int64
          description: The total storage capacity of the repository for Track Space-Efficient
            (TSE) thin-provisioning.
          type: integer
        available_repository_capacity_bytes:
          format: int64
          description: The unallocated available storage space in the repository for
            Track Space-Efficient (TSE) thin-provisioning.
          type: integer
        solid_state:
          description: 'Shows whether a pool contains solid-state disk drives. '
          type: string
        easy_tier:
          description: The Easy Tier value determines whether Easy Tier is enabled
          type: string
        easy_tier_status:
          description: Easy Tier Status determines how tiering is managed.
          type: string
        scm_capacity_bytes:
          format: int64
          description: The total capacity on Storage Class Memory (SCM) drives in
            a pool.
          type: integer
        tier0_flash_capacity_bytes:
          format: int64
          description: The total amount of storage space on the Tier 0 flash solid-state
            drives that can be used by Easy Tier for retiering the volume extents
            in the pool.
          type: integer
        tier1_flash_capacity_bytes:
          format: int64
          description: "The total amount of storage space on the Tier 1 flash, read-intensive\
            \ solid-state drives that can be used by Easy Tier for retiering the volume\
            \ extents in the pool."
          type: integer
        tier2_flash_capacity_bytes:
          format: int64
          description: "The total capacity on Tier 2 flash, high-capacity drives in\
            \ the pool."
          type: integer
        enterprise_hdd_capacity_bytes:
          format: int64
          description: The amount of storage space that is available on the Enterprise
            hard disk drives that can be used by Easy Tier for re-tiering the volume
            extents in the pool.
          type: integer
        nearline_hdd_capacity_bytes:
          format: int64
          description: The total amount of storage space on the Nearline hard disk
            drives that can be used by Easy Tier for re-tiering the volume extents
            in the pool.
          type: integer
        flashcore_module_capacity_bytes:
          format: int64
          description: The total amount of storage space on the FlashCore Module drives
            in the pool.
          type: integer
        scm_available_capacity_bytes:
          format: int64
          description: The available capacity on Storage Class Memory (SCM) drives
            in the pool.
          type: integer
        tier0_flash_available_capacity_bytes:
          format: int64
          description: The amount of storage space that is available on the Tier 0
            flash solid-state drives that can be used by Easy Tier for retiering the
            volume extents in the pool.
          type: integer
        tier1_flash_available_capacity_bytes:
          format: int64
          description: "The amount of storage space that is available on the Tier\
            \ 1 flash, read-intensive solid-state drives that can be used by Easy\
            \ Tier for retiering the volume extents in the pool."
          type: integer
        tier2_flash_available_capacity_bytes:
          format: int64
          description: "The available capacity on Tier 2 flash, high-capacity drives\
            \ in the pool. Easy Tier can use these drives to retier the volume extents\
            \ in the pool."
          type: integer
        enterprise_hdd_available_capacity_bytes:
          format: int64
          description: The amount of storage space that is available on the Enterprise
            hard disk drives that can be used by Easy Tier for re-tiering the volume
            extents in the pool.
          type: integer
        nearline_hdd_avail_cap_bytes:
          format: int64
          description: The amount of storage space that is available on the Nearline
            hard disk drives that can be used by Easy Tier for re-tiering the volume
            extents in the pool.
          type: integer
        flashcore_module_avail_cap_bytes:
          format: int64
          description: The amount of storage space that is available on the FlashCore
            Module drives in the pool.
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        custom_tag_1:
          description: Any user-defined text that is associated with the pool
          type: string
        custom_tag_2:
          description: Any user-defined text that is associated with the pool
          type: string
        custom_tag_3:
          description: Any user-defined text that is associated with the pool
          type: string
        natural_key:
          description: The unique identifier of a pool.
          type: string
        volumes_count:
          format: int32
          description: The number of volumes in a storage pool.
          type: integer
        volumes:
          description: List of volumes in the pool
          type: array
          items:
            $ref: '#/components/schemas/RelatedVolume'
        mdisks_count:
          format: int32
          description: Mdisks count
          type: integer
        mdisks:
          description: List of managed disks name in the pool
          type: array
          items:
            type: string
        drives_count:
          format: int32
          description: Drives count
          type: integer
        drives:
          description: List of drives name in the pool
          type: array
          items:
            type: string
        used_capacity_before_reduction:
          format: int64
          description: Total amount of data that is written to thin-provisioned and
            compressed volume copies that are in data reduction storage pools - before
            data reduction occurs
          type: integer
        used_capacity_after_reduction:
          format: int64
          description: Total amount of data that is written to thin-provisioned and
            compressed volume copies that are in data reduction storage pools - after
            data reduction occurs
          type: integer
        reclaimable_capacity:
          format: int64
          description: 'Unused capacity that will be available after data is reduced. '
          type: integer
        deduplication_capacity_saving:
          format: int64
          description: 'Indicates the total amount of used capacity that is saved
            by data deduplication. This saving is before any compression. '
          type: integer
        compression_opportunity:
          format: int64
          description: 'The total capacity of all compressed volume copies in a data
            reduction pool. '
          type: integer
        compression_uncompressed_capacity:
          format: int64
          description: Total uncompressed used capacity for all compressed volume
            copies in regular storage pools
          type: integer
        compression_compressed_capacity:
          format: int64
          description: Total used capacity for all compressed volume copies in regular
            storage pools.
          type: integer
        free_extents:
          format: int64
          description: Number of free extents in pool
          type: integer
        node:
          description: The name of the Node that is mapped to pool.
          type: string
        op_ratio:
          description: The total provisioned capacity divided by total real capacity
            that is allowable for the volume
          type: string
        op_ratio_limit:
          description: Specifies whether overprovisioning is allowed on the extent
            pool.
          type: string
        data_reduction_status:
          description: The physical capacity status.
          type: string
        pool_threshold:
          description: The maximum threshold percentage of the used real extents
          type: string
        extents_count:
          description: The extent size in the extent pool.
          type: integer
        data_reduction_threshold:
          description: The maximum threshold percentage of the used physical capacity
          type: string
      readOnly: true
    PoolsResponse:
      description: Get storage pools details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Pool'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Quotas:
      description: Get the details of storage Quota for a specified storage system.
      type: object
      properties:
        filesystem:
          description: The filesystems of the quotas.
          type: string
        type:
          description: type of the quota
          type: string
        fileset:
          description: fileset to which quota applies
          type: string
        user:
          description: Name of the user to which quota applies
          type: string
        group:
          description: Name of the group to which quota applies
          type: string
        capacity:
          description: Capacity of the quotas in percentage
          type: number
        used_capacity:
          description: Used Capacity of the quotas in bytes
          type: integer
        capacity_soft_limit:
          description: Capacity soft limit of the quotas in bytes
          type: integer
        capacity_hard_limit:
          description: Capacity hard limit of the quotas in bytes
          type: integer
        used_inodes_percentage:
          description: Used Inodes of the quotas in percentage
          type: integer
        usedInodes:
          description: Used Inodes of the quotas
          type: integer
        inodesSoftLimit:
          description: Inodes Soft Limit of the quotas
          type: integer
        inodesHardLimit:
          description: Used Capacity of the quotas in bytes
          type: integer
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        natural_key:
          description: Natural key of the share
          type: string
      readOnly: true
    QuotasResponse:
      description: Get quotas details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Quotas'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    RaidArray:
      description: Get the details of storage RAID arrays for a specified storage
        system.
      type: object
      properties:
        name:
          description: The name of the RAID array.
          type: string
        status:
          description: "The status of the RAID array. The possible values are Normal,\
            \ Warning, Error, and Unknown."
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a RAID arrays as
            acknowledged.
          type: string
        pool:
          description: The name of the pool that contains the RAID Arrays from the
            storage system that is mapped to the disk.
          type: string
        raid_level:
          description: "The RAID level of a RAID Arrays, such as RAID 5 and RAID 10."
          type: string
        raid_state:
          description: "The RAID state of a RAID Arrays, such as Online and Offline."
          type: string
        capacity_bytes:
          format: int64
          description: The total amount of data that can be stored in a RAID array.
          type: integer
        ddm_capacity_bytes:
          format: int64
          description: The storage capacity of each disk drive module (DDM) in a RAID
            array.
          type: integer
        ddm_speed_rpm:
          format: int32
          description: The revolutions per minute (RPM) of the DDMs in a RAID array.
          type: integer
        ddm_class:
          description: "The technology type of the disk drives in the array, such\
            \ as Solid-State Drive."
          type: string
        written_capacity_bytes:
          format: int64
          description: The written capacity limit represents the total storage capacity
            of all the DDMs in the array.
          type: integer
        available_space_bytes:
          format: int64
          description: The total amount of physical storage space that is unused on
            all the DDMs in the Raid Array.
          type: integer
        available_capacity_percent:
          format: float
          description: The percentage of physical storage space that is unused on
            all the disk drive modules (DDMs) in the RAID array.
          type: number
        avail_written_capacity_bytes:
          format: int64
          description: The available written capacity is the same as the available
            capacity and represents the total amount of unused storage capacity on
            all the DDMs in the RAID array.
          type: integer
        compression_saving_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            by using data compression.
          type: number
        compression_saving_bytes:
          description: Compressions saving bytes computed using used physical capacity
            and used logical capacity
          type: integer
        encryption:
          description: Whether the volume is encrypted.
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        compressed:
          description: Shows whether a storage Raid Array is compressed.
          type: string
        rank:
          description: A rank is a logically contiguous storage space. Available for
            DS8000 arrays only
          type: string
        node:
          description: "For DS4000, DS5000, DS6000, and ESS storage systems, the name\
            \ of the disk controller that is associated with the RAID array. For all\
            \ other storage systems, the node to which a RAID array is associated."
          type: string
        format:
          description: "The format of a RAID array. Examples: FB (fixed block), CKD\
            \ (count key data). Available for DS8000 arrays only."
          type: string
        width:
          description: The rank width of a RAID array. Available for DS8000 arrays
            only.
          type: integer
        device_adapter:
          description: The device adapter (DA) that is associated with a RAID array.
            Available for DS8000 arrays only.
          type: string
        device_adapter_pair:
          description: The device adapter (DA) pair that is associated with a RAID
            array. Available for DS8000 arrays only.
          type: integer
        site:
          description: The identifier of the array site for a RAID array. Available
            for DS8000 arrays only.
          type: string
        rank_group:
          description: The rank group that is associated with a RAID array.
          type: integer
        encrypt_group:
          description: The encryption group of a rank.
          type: string
        tier:
          description: "The performance capability of a tier is determined by the\
            \ type of disks that the pool uses. Tier values might include Enterprise\
            \ Tier, Nearline Tier, Tier 0 Flash, Tier 1 Flash, or Tier 2 Flash."
          type: string
        natural_key:
          description: The unique identifier for the RAID array.
          type: string
      readOnly: true
    RaidArraysResponse:
      description: Get storage raid arrays details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/RaidArray'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    RelatedVolume:
      description: Volumes associated to component
      type: object
      properties:
        id:
          description: ID of the Volume.
          type: string
        copy_id:
          description: Copy ID of the Volume.
          type: integer
        name:
          description: Name of the Volume.
          type: string
    RemoteRelationship:
      description: Get the details of storage remote relationship for a specified
        storage system.
      type: object
      properties:
        name:
          description: The name of the remote relationship.
          type: string
        status:
          description: "The status of the remote relationship. The possible status\
            \ values for SVC device are CONSISTENT_COPYING, INCONSISTENT_STOPPED,\
            \ INCONSISTENT_COPYING, CONSISTENT_STOPPED, CONSISTENT_SYNCHRONIZED, IDLING,\
            \ IDLING_DISCONNECTED, INCONSISTENT_DISCONNECTED and CONSISTENT_DISCONNECTED.\
            \ The possible status values for XIV device are INITIALIZING, SYNCHRONIZED,\
            \ UNSYNCHRONIZED, CONSISTENT, INCONSISTENT, RPO_OK, RPO_LAGGING, CHANGE_TRACKING.\
            \ The possible status value for ds8k device are COPY_PENDING, FULL_DUPLEX,\
            \ SUSPENDED, TARGET_COPY_PENDING, TARGET_FULL_DUPLEX, TARGET_SUSPENDED\
            \ and INVALID."
          type: string
        consistency_group:
          description: The name of the consistency group of the remote relationship.
          type: string
        volser:
          description: The serial number of the volume of the remote relationship.
          type: string
        type:
          description: The type of the remote relationship.
          type: string
        replication_type:
          description: The replication type of the remote relationship.
          type: string
        source_vol:
          allOf:
          - $ref: '#/components/schemas/RelatedVolume'
          - description: The source volume that are assigned to the remote relationship.
        target_vol:
          allOf:
          - $ref: '#/components/schemas/RelatedVolume'
          - description: The target volume that are assigned to the remote relationship.
        source_pool:
          description: The name of the source pool of the remote relationship.
          type: string
        target_pool:
          description: The name of the target pool of the remote relationship.
          type: string
        source_host:
          description: The name of the source host of the remote relationship.
          type: string
        target_host:
          description: The name of the target host of the remote relationship.
          type: string
        source_tier:
          description: The name of the source tier of the remote relationship.
          type: string
        target_tier:
          description: The name of the target tier of the remote relationship.
          type: string
        source_storage_system:
          description: The name of the source storage system of the remote relationship.
          type: string
        target_storage_system:
          description: The name of the target storage system of the remote relationship.
          type: string
        cycle_period:
          format: int32
          description: The period cycle of the remote relationship..
          type: integer
        natural_key:
          description: The unique identifier of the remote relationship.
          type: string
      readOnly: true
    RemoteRelationshipsResponse:
      description: Get storage remote relationships details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/RemoteRelationship'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    ReplicationPoliciesResponse:
      description: Get storage replication policies details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/ReplicationPolicy'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    ReplicationPolicy:
      description: Get the details of storage replication policy for a specified storage
        system.
      type: object
      properties:
        name:
          description: The name of the replication policy.
          type: string
        id:
          description: The identifier of the replication policy.
          type: string
        location1_system_name:
          description: The unique identifier of the system in location 1 of the replication
            policy.
          type: string
        location2_system_name:
          description: The unique identifier of the system in location 2 of the replication
            policy.
          type: string
        replication_topology:
          description: The replication topology of the replication policy.
          type: string
        rpo:
          description: The rpo alert time of the replication policy.
          type: string
        volume_group:
          description: Names of the volume group of the replication policy.
          type: array
          items:
            type: string
        natural_key:
          description: The unique identifier of the replication policy.
          type: string
      readOnly: true
    SafeGuardedCopiesResponse:
      description: Get storage safeguarded copy details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/SafeGuardedCopy'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    SafeGuardedCopy:
      description: Get the details of storage safeguarded copy for a specified storage
        system.
      required:
      - status
      - compressed
      - tier_distribution_percent
      type: object
      properties:
        capacity_bytes:
          format: int64
          description: The total amount of storage space that is committed to a volume.
          type: integer
        tier0_flash_capacity_percent:
          format: float
          description: The percentage of volume capacity that Easy Tier has placed
            on Tier 0 flash drives.
          type: number
        enterprise_hdd_capacity_bytes:
          format: int64
          description: The amount of volume capacity that Easy Tier has placed on
            Enterprise hard disk drives.
          type: integer
        scm_available_capacity_bytes:
          format: int64
          description: The amount of volume capacity that Easy Tier has placed on
            Storage Class Memory (SCM) drives.
          type: integer
        shortfall_percent:
          format: float
          description: The difference between the remaining unused volume capacity
            and the available capacity of the pool that the volume is in.
          type: number
        nearline_hdd_capacity_percent:
          format: float
          description: The percentage of volume capacity that Easy Tier placed on
            Nearline hard disk drives.
          type: number
        nearline_hdd_capacity_bytes:
          format: int64
          description: The amount of volume capacity that Easy Tier has placed on
            Nearline hard disk drives.
          type: integer
        id:
          description: The identifier for the volume as defined on the storage system.
          type: string
        used_capacity_bytes:
          format: int64
          description: The amount of space that is used by the volume.
          type: integer
        hosts:
          description: |-
            The name of the host to which a volume is assigned.
            If more than one host is assigned, the number of hosts is displayed.
          type: string
        pool:
          description: The name of the pool that contains the volume from the storage
            system that is mapped to the disk.
          type: string
        tier1_flash_capacity_percent:
          format: float
          description: "The percentage of volume capacity that Easy Tier has placed\
            \ on Tier 1 flash, read-intensive drives."
          type: number
        status:
          description: The status of a volume.
          type: string
        scm_capacity_percent:
          format: float
          description: The percentage of volume capacity that Easy Tier has placed
            on Storage Class Memory (SCM) drives.
          type: number
        written_capacity_bytes:
          format: int64
          description: 'The amount of data that is written from the assigned hosts
            to the volume before compression or data deduplication are used to reduce
            the size of the data. '
          type: integer
        available_capacity_bytes:
          format: int64
          description: The total amount of remaining space that can be used by the
            volume.
          type: integer
        name:
          description: The name or label of the volume
          type: string
        used_capacity_percent:
          format: float
          description: The percentage of the capacity of the volume that is used.
            If -1 then Fully Allocated
          type: number
        tier1_flash_capacity_bytes:
          format: int64
          description: "The amount of volume capacity that Easy Tier has placed on\
            \ Tier 1 flash, read-intensive drives."
          type: integer
        tier0_flash_capacity_bytes:
          format: int64
          description: The amount of volume capacity that Easy Tier has placed on
            Tier 0 flash drives.
          type: integer
        thin_provisioned:
          description: Shows whether a volume is a thin-provisioned volume.
          type: string
        storage_system:
          description: Storage System the volume belongs to.
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        storage_system_id:
          description: The storage system identifier that volume belong to.
          type: string
        scm_capacity_bytes:
          format: int64
          description: The amount of volume capacity that Easy Tier has placed on
            Storage Class Memory (SCM) drives.
          type: integer
        reserved_volume_capacity_bytes:
          format: int64
          description: The amount of pool capacity that is reserved but has not been
            used yet to store data on the thin-provisioned volume.
          type: integer
        enterprise_hdd_capacity_percent:
          format: float
          description: The percentage of volume capacity that Easy Tier has placed
            on Enterprise hard disk drives.
          type: number
        written_capacity_percent:
          format: float
          description: The percentage of data that is written from the assigned hosts
            to the volume before compression or data deduplication are used to reduce
            the size of the data.
          type: number
        copy_id:
          format: int32
          description: The identifier for the volume copy.
          type: integer
        acknowledged:
          description: Shows whether a user marked the status of a volume as acknowledged.
          type: string
        unique_id:
          description: The ID that is used to uniquely identify a volume across multiple
            storage systems
          type: string
        virtual_volume_id:
          description: Distinctive identifier to differentiate it from other virtual
            volumes.
          type: string
        raid_level:
          description: "The RAID level of a volume, such as RAID 5 and RAID 10."
          type: string
        node:
          description: The name of the node to which a volume is associated.
          type: string
        io_group:
          description: The name of the I/O Group to which a volume is assigned.
          type: string
        encryption:
          description: Whether the volume is encrypted.
          type: string
        formatted:
          description: Shows whether a volume is formatted.
          type: string
        virtual_disk_type:
          description: "The type of virtual disk with which a volume was created,\
            \ such as sequential, striped, image, and many."
          type: string
        fast_write_state:
          description: "Shows the cache state for a volume, such as empty, not empty,\
            \ corrupted, and repairing. ."
          type: string
        vdisk_mirror_copies:
          description: The number of secondary copies (virtual disk copies) for a
            volume.
          type: string
        flashcopy:
          description: "A volume can either be a source(1), target(2), or both a target\
            \ for one copy pair and a source for a different copy pair(3), NONE(4).\
            \ In storage systems, this relationship might be referred to as a FlashCopy."
          type: string
        copy_service_role:
          description: Shows whether a volume is in a replication relationship that
            creates a snapshot or point-in-time copy of the volume on a specified
            target volume.
          type: string
        safeguarded:
          description: Shows whether the volume is protected by the Safeguarded Copy
            feature in IBM Storage Virtualize and DS8000.
          type: string
        safeguarded_location:
          description: The name of the child pool where the Safeguarded Copies are
            kept in IBM Storage Virtualize and DS8000.
          type: string
        safeguarded_capacity_bytes:
          format: int64
          description: The capacity that is consumed by all of the Safeguarded Copies
            for a source volume in IBM Storage Virtualize and DS8000.
          type: integer
        storage_virtualizer:
          description: The name of the storage virtualizer that is managing a volume.
          type: string
        virtual_disk:
          description: The managed disk for the virtualizer that corresponds to a
            volume.
          type: string
        deduplicated:
          description: Shows whether a storage volume is deduplicated.
          type: string
        compressed:
          description: Shows whether a storage volume is compressed.
          type: string
        compression_saving_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            by using data compression.
          type: number
        grain_size_bytes:
          format: int64
          description: The grain size with which a thin-provisioned volume was created.
          type: integer
        volume_group:
          description: A volume group is a container for managing a set of related
            volumes as a single object.
          type: string
        warning_level_percent:
          format: float
          description: The warning level that was defined when a thin-provisioned
            volume was created.
          type: number
        auto_expand:
          description: Shows whether a thin-provisioned volume automatically expands
            its allocated capacity as more of its space is used.
          type: string
        easy_tier:
          description: The Easy Tier value determines whether Easy Tier is enabled
            and the Easy Tier Status determines how tiering is managed.
          type: string
        easy_tier_status:
          description: determines how tiering is managed.
          type: string
        tier_distribution_percent:
          format: float
          description: The Distribution of volume extents across the Easy Tier Drive
            classes
          type: number
        vdisk_mirror_role:
          description: "For mirrored volumes, the mirror role identifies the primary\
            \ and secondary volume copies."
          type: string
        lss_lcu:
          description: "The logical subsystem (LSS) for fixed block volumes, or the\
            \ logical control unit (LCU) for count key data volumes."
          type: string
        pool_id:
          description: The pool id that contains the volume from the storage system
            that is mapped to the disk.
          type: string
        block_size:
          format: int32
          description: The size of the data blocks that are written to disk for DS8000.
          type: integer
        volser:
          description: The volume serial number for DS8000 count-key-data (CKD) volumes
          type: string
        format:
          description: "The format of the volumes that are allocated from a pool,\
            \ such as FB (fixed block) or CKD (count key data)."
          type: string
        volume_number:
          format: int32
          description: The volume number of the volume within the LSS or LCU.
          type: integer
        natural_key:
          description: Unique Identifier of a safeguarded copy
          type: string
      readOnly: true
    Share:
      description: Get the details of storage Shares for a specified storage system.
      type: object
      properties:
        name:
          description: The name of the shares.
          type: string
        path:
          description: Path of the shares
          type: string
        storage_system:
          description: The name of the storage system
          type: string
        storage_virtual_machine:
          description: The name of the storage virtual machine
          type: string
        cluster:
          description: Cluster of the shares.
          type: string
        protocols:
          description: Protocols of the shares.
          type: string
        discoveredTime:
          description: Time of the shares discovered.
          type: string
        sharedServers:
          description: Shared Servers of the shares.
          type: string
        state:
          description: State of the shares.
          type: string
        ticket:
          description: Ticket in the shares.
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        natural_key:
          description: Natural key of the share
          type: string
      readOnly: true
    SharesResponse:
      description: Get storage file systems details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Share'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    SiteResponse:
      description: Get the details of storage sites for a specified storage system.
      type: object
      properties:
        name:
          description: The name of the sites.
          type: string
        status:
          description: The status of the sites.
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a site as acknowledged.
          type: string
        capacity_percentage:
          format: float
          description: Capacity of the sites in percentage
          type: number
        used_capacity_bytes:
          format: int64
          description: Used capacity of the site in bytes.
          type: integer
        available_capacity_bytes:
          format: int64
          description: Available capacity of the site in bytes.
          type: integer
        capacity_bytes:
          format: int64
          description: capacity of the site in bytes.
          type: integer
        accessibility:
          description: accessibility of site
          type: number
        last_data_collection:
          format: int64
          description: Last data collection time for the site.
          type: integer
        natural_key:
          description: Natural key of the site
          type: string
        vaults_count:
          description: The number of vaults that store data on slicestor nodes at
            the site.
          type: string
        accessor_nodes_count:
          description: accessor nodes count
          type: string
        slicestor_nodes_count:
          description: slicestor nodes count
          type: string
        vaults:
          description: List of vaults in the site
          type: array
          items:
            type: string
        accessorNodes:
          description: List of accessor nodes in the site
          type: array
          items:
            type: string
        slicestorNodes:
          description: List of slicestor Nodes in the site
          type: array
          items:
            type: string
      readOnly: true
    SitesResponse:
      description: Get Sites details for a given tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/SiteResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    SoftwareDetails:
      description: Warranty details of the device
      type: object
      properties:
        start_date:
          format: int64
          description: warranty start date in epoch milliseconds
          type: integer
        expiry_date:
          format: int64
          description: warranty expiry date in epoch milliseconds
          type: integer
        title:
          description: title of warranty
          type: string
    StorageDrive:
      description: Get specific storage drive details for a storage system.
      type: object
      properties:
        name:
          description: The name of the storage drive.
          type: string
        status:
          description: The status of a storage drive. The possible values are Error
            and Operational.
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a storage drive as
            acknowledged.
          type: string
        raid_array:
          description: The name of the RAID Array that is mapped to drive.
          type: string
        managed_disk:
          description: The name of the managed disk that is mapped to drive.
          type: string
        class:
          description: "The technology type of the disk or drive, such as Solid-State\
            \ Drive, NVMe SSD, Storage Class Memory, Flash, Fibre Channel (FC), SATA,\
            \ and other types."
          type: string
        speed_rpm:
          format: int32
          description: The number of revolutions per minute of a disk.
          type: integer
        capacity_bytes:
          format: int64
          description: The storage capacity of each disk drive module (DDM) in a RAID
            array.
          type: integer
        physical_capacity_bytes:
          format: int64
          description: The total amount of unformatted storage space on the disk or
            drive.
          type: integer
        encryption:
          description: Whether the volume is encrypted.
          type: string
        spare:
          description: Shows whether a disk or drive is a spare disk or drive. A spare
            disk or drive is not allocated for storage and is predesignated for use
            as a replacement for a failed disk or drive.
          type: string
        vendor:
          description: The vendor of the storage drive.
          type: string
        model:
          description: The model name of the storage drive.
          type: string
        serial_number:
          description: The serial number of the storage drive.
          type: string
        firmware:
          description: The firmware version of the storage drive.
          type: string
        hardware:
          description: The hardware name of the storage drive.
          type: string
        slot:
          description: The slot number of the disk or drive within the associated
            enclosure or node.
          type: integer
        compressed:
          description: Shows whether the disk or drive uses inline data compression
            to automatically compress the data that is written.
          type: string
        active_quorum:
          description: Shows whether a storage drive is active Quorum.
          type: string
        last_data_collection:
          format: int64
          description: Last data collection timestamp in epoch milliseconds.
          type: integer
        device_adapter:
          description: The device adapter (DA) that is associated with a storage drive.
            Available for DS8000 arrays only.
          type: string
        location:
          description: A code that represents the physical location of a disk within
            the hardware of a storage system. Applies to DS6000™ and DS8000 disks
            only.
          type: string
        rank:
          description: "The rank to which a disk belongs. This rank is associated\
            \ with the array site of the disk. If no rank is defined, the value None\
            \ is shown. Applies to DS8000 disks only."
          type: string
        array_site:
          description: "The array site to which this disk belongs. Usually, each array\
            \ site has four or eight disks. Applies to DS8000® disks only."
          type: string
        natural_key:
          description: The unique identifier of the drive.
          type: string
        interface:
          description: The disk interface type of the drive.
          type: string
      readOnly: true
    StorageDrivesResponse:
      description: Get storage drives details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/StorageDrive'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    StoragePartition:
      description: Get specific storage partition details for a storage system.
      type: object
      properties:
        partition_name:
          description: The name of the storage partition.
          type: string
        partition_type:
          description: The type of the storage partition.
          type: string
        partition_uuid:
          description: The unique UUID of the storage partition.
          type: string
        migration_status:
          description: The migration status of the storage partition.
          type: string
        host_written_capacity_bytes:
          format: int64
          description: The amount of data that is written from the assigned hosts
            to the volume before compression or data deduplication are used to reduce
            the size of the data.
          type: integer
        snapshots:
          description: Acknowledge the snapshots in storage partition.
          type: string
        hosts_count:
          format: int32
          description: Number of hosts that are assigned to the storage partition.
          type: integer
        volume_groups_count:
          format: int32
          description: Number of volume groups that are associated to the storage
            partition.
          type: integer
        last_update_time:
          format: int64
          description: Last Update Time timestamp in epoch milliseconds.
          type: integer
        natural_key:
          description: The unique identifier of the storage partition.
          type: string
      readOnly: true
    StoragePartitionMobilityAdvisoryRequest:
      type: object
      properties:
        partition_uuid:
          type: string
        task_uuid:
          type: string
        forecast_end_date:
          type: string
        is_async:
          type: boolean
    StoragePartitionMobilityAdvisoryResponse:
      description: Get Storage Partition Mobility Advisory for a particular tenant.
      type: object
      properties:
        storage_partition_id:
          description: The unique identifier of the storage partition.
          type: string
        selected_storage_systems:
          description: List of selected storage systems.
          type: array
          items:
            type: string
        system_results:
          description: Result of Given request.
          type: array
          items:
            $ref: '#/components/schemas/PartitionMigrationRequestResults'
        rank_system_api_status:
          description: The status of rank system api request.
          type: string
        workload_profile:
          allOf:
          - $ref: '#/components/schemas/WorkloadProfile'
          - description: Workload Profile of given request.
        task_uuid:
          description: Task UUI generated for async request.
          type: string
        message:
          description: The detailed message for migration request advisory.
          type: string
        message_code:
          description: Message code.
          type: string
        si_flashsystem_grid_uuid:
          description: The unique identifier of the FlashSystem grid at the Storage
            Insights level.
          type: string
        device_flashsystem_grid_uuid:
          description: The unique identifier of the FlashSystem grid at the storage
            system level.
          type: string
        flashsystem_grid_name:
          description: The name of the FlashSystem grid.
          type: string
      readOnly: true
    StoragePartitionMobilityAdvisoryResponses:
      description: Get Storage Partition Mobility Advisory details for a given tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/StoragePartitionMobilityAdvisoryResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    StoragePartitionsResponse:
      description: Get storage partitions details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/StoragePartition'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    StorageSystem:
      description: Get Storage System Properties.
      required:
      - written_capacity_limit_bytes
      - component_type
      - storage_type
      - vdisk_mirrors_count
      - unmapped_capacity_percent
      - last_successful_probe
      - raw_capacity_bytes
      - provisioned_capacity_percent
      - mapped_capacity_percent
      - available_written_capacity_bytes
      - mapped_capacity_bytes
      - drive_compression_savings_percent
      - probe_status
      - available_volume_capacity_bytes
      - capacity_savings_percent
      - overhead_capacity_bytes
      - pool_compression_savings_bytes
      - compression_savings_bytes
      - compression_savings_percent
      - events_status
      - country_iso_code
      - unmapped_capacity_bytes
      - last_successful_monitor
      - ip_ports_count
      - overprovisioned_capacity_bytes
      - remote_relationships_count
      - condition
      - capacity_bytes
      - used_written_capacity_percent
      - pools_count
      - performance_monitor_status
      - shortfall_percent
      - used_written_capacity_bytes
      - managed_disks_count
      - used_capacity_bytes
      - volumes_count
      - deduplication_savings_percent
      - data_collection
      - available_capacity_bytes
      - used_capacity_percent
      - flashcopy_count
      - disks_count
      - unprotected_volumes_count
      - drive_compression_savings_bytes
      - provisioned_capacity_bytes
      - data_reduction_savings_bytes
      - storage_system_id
      - serial_number
      - enclosure_node_serial_num
      - pool_compression_savings_percent
      - ip_address
      - deduplication_savings_bytes
      - type
      - support_contract
      - model
      - drive_compression_ratio
      - data_reduction_ratio
      - topology
      - pool_compression_ratio
      - vendor
      - firmware
      - recent_fill_rate
      - name
      - recent_growth
      - time_zone
      - fc_ports_count
      - staas_environment
      - total_compression_ratio
      - snapshot_written_capacity_bytes
      - snapshot_provisioned_capacity_bytes
      - used_file_system_capacity_bytes
      - available_file_system_capacity_bytes
      - file_system_capacity_bytes
      - file_system_capacity_percent
      - version
      - used_file_system_capacity_percent
      - capacity_percent
      - vaultsCount
      - acknowledged
      - adjusted_used_capacity_percent
      - capacity_limit_percent
      - capacity_limit_bytes
      - capacity_to_limit_bytes
      - safe_guarded_capacity_bytes
      - read_cache_bytes
      - write_cache_bytes
      - total_savings_ratio
      - compressed
      - turbo_performance
      - location
      - custom_tag_1
      - custom_tag_2
      - custom_tag_3
      - callhome_system
      - volume_groups_count
      - cluster
      - external_pool_used_capacity_bytes
      - nsds_count
      - accounts
      - containers
      - objects
      - ransomware_threat_detection
      - threat_notification_recipients
      - host_connections_count
      - current_power_usage_watts
      - system_temperature_celsius
      - system_temperature_Fahrenheit
      - power_efficiency
      - co2_emission
      - safeguarded_virtual_capacity_bytes
      - safeguarded_used_capacity_percentage
      - data_collection_type
      - wwnn
      - encryption
      - zhyperlink
      - frame
      - space_allocated_to_vdisks
      - total_used_capacity
      - thin_provisioning_bytes
      - thin_provisioning_savings_percent
      - written_capacity_bytes
      - written_snapshots
      type: object
      properties:
        written_capacity_limit_bytes:
          description: The amount of provisioned capacity that can be created in bytes.
          type: number
        component_type:
          description: The type of the storage system.
          type: string
        storage_type:
          description: The storage access type for the storage system.
          type: string
        vdisk_mirrors_count:
          format: int32
          description: The total number of vdisk mirror volumes present in the storage
            system.
          type: integer
        unmapped_capacity_percent:
          format: float
          description: The total capacity percentage in the volumes that is not assigned
            to hosts.
          type: number
        last_successful_probe:
          description: The last successful probe time in UTC milliseconds.
          type: number
        provisionedWrittenCapacityPercent:
          format: float
          type: number
        capacitySavingsBytes:
          format: int64
          type: integer
        raw_capacity_bytes:
          description: Raw Capacity.
          type: number
        provisioned_capacity_percent:
          format: float
          description: "The percentage of the physical capacity that is committed\
            \ to the provisioned capacity of the volumes in the pool. If the value\
            \ exceeds 100%, the physical capacity doesn't meet the demands for provisioned\
            \ capacity."
          type: number
        mapped_capacity_percent:
          format: float
          description: The total capacity in the volumes that is assigned to hosts.
          type: number
        available_written_capacity_bytes:
          description: Available Written Capacity.
          type: number
        mapped_capacity_bytes:
          description: The total capacity in the volumes that is assigned to hosts
          type: number
        drive_compression_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            on all of the managed disks in a storage system.
          type: number
        probe_status:
          description: Probe status that was reported on the storage system.
          type: string
        available_volume_capacity_bytes:
          description: Available Volume Capacity.
          type: number
        capacity_savings_percent:
          format: float
          description: The sum total of all savings after data reduction plus thin-provisioning.
          type: number
        remainingUnallocatedCapacityBytes:
          format: int64
          type: integer
        overhead_capacity_bytes:
          description: The amount of usable capacity in bytes that is occupied by
            metadata in a pool or system and other data that is used for system operation.
          type: number
        pool_compression_savings_bytes:
          description: The estimated amount and percentage of capacity that is saved
            in all of the pools in a storage system.
          type: number
        compression_savings_bytes:
          description: The estimated amount and percentage of capacity that is saved
            in a storage system by using data compression techniques.
          type: number
        compression_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            in a storage system by using data compression techniques.
          type: number
        customerCountryCode:
          type: string
        events_status:
          description: Event status that was reported on the storage system.
          type: string
        country_iso_code:
          description: Country of the storage system.
          type: string
        unmapped_capacity_bytes:
          description: The total capacity in the volumes that are not mapped to hosts.
          type: number
        last_successful_monitor:
          description: The last successful performance monitor time in UTC milliseconds.
          type: number
        ip_ports_count:
          description: The total number of IP ports present in the storage system.
          type: integer
        overprovisioned_capacity_bytes:
          description: Overprovisioned Capacity.
          type: number
        remote_relationships_count:
          description: The total number of remote relationships present in the storage
            system.
          type: string
        condition:
          description: "The overall, operational condition of a storage system. This\
            \ condition represents the most critical status that was detected on the\
            \ storage system itself and on its internal resources"
          type: string
        customerNumber:
          type: string
        capacity_bytes:
          description: "The amount of capacity that is available for storing data\
            \ on a system, pool, array, or MDisk after formatting and RAID techniques\
            \ are applied."
          type: number
        used_written_capacity_percent:
          format: float
          description: "The percentage of capacity that is provisioned to the standard-provisioned\
            \ volumes and the thin-provisioned volumes, given the drive compression\
            \ savings."
          type: number
        pools_count:
          format: int32
          description: The total number of pools present in the storage system.
          type: integer
        performance_monitor_status:
          description: Performance monitoring status that was reported on the storage
            system
          type: string
        unallocatedVolumeCapacityBytes:
          format: int64
          type: integer
        shortfall_percent:
          format: float
          description: "The difference between the remaining unused volume capacity\
            \ and the available capacity of the associated pools, expressed as a percentage\
            \ of the remaining unused volume capacity. The shortfall represents the\
            \ relative risk of running out of capacity for overallocated thin-provisioned\
            \ volumes."
          type: number
        used_written_capacity_bytes:
          description: The total amount of provisioned capacity that is used by all
            the volumes given the current data reduction savings.
          type: number
        availableSystemCapacityBytes:
          format: int64
          type: integer
        managed_disks_count:
          format: int32
          description: The total number of managed disks present in the storage system.
          type: integer
        used_capacity_bytes:
          description: "The capacity that is used by the standard-provisioned and\
            \ thin-provisioned volumes in the pools. If the pool is a parent pool,\
            \ the capacity that is used by the volumes in the child pools is also\
            \ calculated."
          type: number
        volumes_count:
          format: int32
          description: The total number of volumes present in the storage system.
          type: integer
        deduplication_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            by using data deduplication. The percentage is calculated across all deduplicated
            volumes only.
          type: number
        data_collection:
          description: Data collection status that was detected on the storage system.
          type: string
        available_capacity_bytes:
          description: "The amount of usable capacity that is not yet used in the\
            \ pools that are associated with a block storage system. If a pool is\
            \ a parent pool, the capacity that is used by the volumes in the child\
            \ pools is also included."
          type: number
        used_capacity_percent:
          format: float
          description: "The percentage of physical capacity in the pool that is used\
            \ by the standard-provisioned volumes, the thin-provisioned volumes, and\
            \ the volumes in child pools."
          type: number
        flashcopy_count:
          format: int32
          description: The total number of flash copies present in the storage system.
          type: integer
        dataReductionSavingsPercent:
          format: float
          type: number
        disks_count:
          format: int32
          description: The total number of drives present in the storage system.
          type: integer
        unprotected_volumes_count:
          description: The total number of unprotected volumes present in the storage
            system.
          type: string
        drive_compression_savings_bytes:
          description: The estimated amount and percentage of capacity that is saved
            on all of the managed disks in a storage system.
          type: number
        provisioned_capacity_bytes:
          description: "Total capacity of all volumes that are created on the system,\
            \ which includes volumes that are not mapped to hosts."
          type: number
        data_reduction_savings_bytes:
          description: "The ratio of capacity that is written by applications, compared\
            \ to the capacity that is stored on the system after written data is compressed,\
            \ deduplicated, or both."
          type: number
        availableSystemCapacityPercent:
          format: float
          type: number
        storage_system_id:
          description: The Id of the storage system.
          type: string
        systemId:
          type: string
        serial_number:
          description: "The serial number of the storage system. For storage systems\
            \ that run IBM Storage Virtualize, this value is the ID of the system\
            \ cluster."
          type: string
        enclosure_node_serial_num:
          description: "The enclosure serial number of the storage system. For storage\
            \ systems that run IBM Storage Virtualize, this value is the ID of the\
            \ system cluster."
          type: string
        pool_compression_savings_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            in all of the pools in a storage system.
          type: number
        ip_address:
          description: The IP Address of the storage system.
          type: string
        deduplication_savings_bytes:
          description: The estimated amount and percentage of capacity that is saved
            by using data deduplication. The percentage is calculated across all deduplicated
            volumes only.
          type: number
        type:
          description: The type of the storage system.
          type: string
        support_contract:
          description: "The status of any contract with IBM Support for the storage\
            \ system. To see the status of the support contract for storage virtualizers,\
            \ you must view the properties of the associated nodes or enclosures."
          type: string
        model:
          description: The model of the storage system.
          type: string
        drive_compression_ratio:
          format: float
          description: The ratio of the uncompressed data size to the compressed data
            size for all the managed disks in a storage system.
          type: number
        data_reduction_ratio:
          format: float
          description: Data Reduction Ratio.
          type: number
        topology:
          description: The topology of the storage system.
          type: string
        clusterIdAlias:
          type: string
        tenantId:
          type: string
        pool_compression_ratio:
          format: float
          description: The ratio of the uncompressed data size to the compressed data
            size for all the pools in a storage system.
          type: number
        vendor:
          description: The vendor of the storage system.
          type: string
        firmware:
          description: The firmware version of the storage system.
          type: string
        recent_fill_rate:
          format: float
          description: The rate at which the capacity of the storage system is being
            consumed over the last 30 days. Use this value to see how quickly your
            storage systems are filling up.
          type: number
        volsCount:
          format: int32
          type: integer
        name:
          description: Name of the Storage System
          type: string
        recent_growth:
          format: float
          description: The amount of used capacity that is consumed by the storage
            system over the last 30 days. Use this value to identify the storage systems
            with the highest growth rates in used capacity.
          type: number
        time_zone:
          description: The time zone of the storage system.
          type: string
        fc_ports_count:
          format: int32
          description: The total number of fibre channel ports present in the storage
            system.
          type: integer
        staas_environment:
          description: Is the storage system part of a STaaS environment.
          type: boolean
        total_compression_ratio:
          format: float
          description: The ratio of the uncompressed data size to the compressed data
            size for the storage system.
          type: number
        elementManagerUrl:
          type: string
        snapshot_written_capacity_bytes:
          description: The snapshot written capacity in bytes of the storage system.
          type: number
        snapshot_provisioned_capacity_bytes:
          description: The snapshot provisioned capacity in bytes of the storage system.
          type: number
        used_file_system_capacity_bytes:
          description: The used file system capacity in bytes of the storage system.
          type: number
        available_file_system_capacity_bytes:
          description: The available file system capacity in bytes of the storage
            system.
          type: number
        file_system_capacity_bytes:
          description: The capacity on all the file systems on the storage system
            or filer.
          type: number
        file_system_capacity_percent:
          format: float
          description: "The percentage of the total file system capacity on the storage\
            \ system or filer that is used by files and directories. For IBM Storage\
            \ Scale, the used capacity includes snapshot capacity."
          type: number
        clusterId:
          type: string
        version:
          description: "The firmware version of the microcode on the storage system.\
            \ For IBM Storage Scale, this value represents the earliest version of\
            \ the IBM Storage Scale software on any node of the cluster. For Cloud\
            \ Object Storage System, this value represents the firmware version on\
            \ the manager node."
          type: string
        used_file_system_capacity_percent:
          format: float
          description: The percentage of the total file system capacity on the storage
            system or filer that is used by files and directories.
          type: number
        probeschedule:
          type: string
        capacity_percent:
          format: float
          description: The percentage of the total object capacity that is used.
          type: number
        vaultsCount:
          description: The number of vaults that store data on Slicestor nodes at
            the site.
          type: string
        acknowledged:
          description: "If Yes, the status of the resource was reviewed and is either\
            \ resolved or can be ignored. An acknowledged status is not used to determine\
            \ the condition of related, higher-level resources."
          type: boolean
        adjusted_used_capacity_percent:
          format: float
          description: Use this value to check whether the used capacity of the storage
            system is under or over the capacity limit.
          type: number
        capacity_limit_percent:
          format: float
          description: The capacity limit or limits that were set by the Administrator
            for the storage systems. Check the Capacity-to-Limit column to see how
            much capacity is left before the capacity limit is reached.
          type: number
        capacity_limit_bytes:
          description: The capacity limit or limits that were set by the Administrator
            for the storage systems. Check the Capacity-to-Limit column to see how
            much capacity is left before the capacity limit is reached.
          type: number
        capacity_to_limit_bytes:
          description: Use this value to check how much capacity is available when
            the capacity limit that was set for the resource is taken into account
          type: number
        safe_guarded_capacity_bytes:
          description: The total amount of capacity that is used to store volume backups
            that are created by the Safeguarded Copy feature.
          type: number
        read_cache_bytes:
          description: The read cache in bytes of storage system.
          type: number
        write_cache_bytes:
          description: The write cache in bytes of storage system.
          type: number
        total_savings_ratio:
          format: float
          description: Total Savings Ratio.
          type: number
        compressed:
          description: Shows whether the drive contains a built-in compression function
            that automatically compresses the data that is written to the drive.
          type: boolean
        turbo_performance:
          description: Turbo Performance.
          type: string
        location:
          description: Location.
          type: string
        custom_tag_1:
          description: Custom Tag 1.
          type: string
        custom_tag_2:
          description: Custom Tag 2.
          type: string
        custom_tag_3:
          description: Custom Tag 3.
          type: string
        callhome_system:
          description: "The method that is used to collect metadata about the device.\
            \ For some IBM Storage Virtualize devices, the value can be either Call\
            \ Home with cloud services or Data Collector. For all other devices, the\
            \ value is Data Collector."
          type: boolean
        volume_groups_count:
          format: int32
          description: The total number of volume groups present in the storage system.
          type: integer
        cluster:
          description: Cluster.
          type: string
        external_pool_used_capacity_bytes:
          description: The capacity that is migrated to external pools for all of
            the file systems that are associated with the storage system. This value
            represents the capacity that is used by active data only. Active data
            is data that has corresponding stub files on the GPFS file system.
          type: number
        nsds_count:
          format: int32
          description: "The total number of disks that are installed and configured\
            \ in a storage system. For SONAS and IBM Storage Scale, this value is\
            \ the number of Network Shared Disks that are associated with the storage\
            \ system."
          type: integer
        accounts:
          description: Applies only to IBM Storage Scale.
          type: string
        containers:
          description: Containers.
          type: string
        objects:
          description: Applies only to IBM Storage Scale.
          type: number
        ransomware_threat_detection:
          description: Status of the ransomware threat detection.
          type: string
        threat_notification_recipients:
          description: threat notification recipients.
          type: string
        host_connections_count:
          format: int32
          description: Number of the host connection in the block storage system.
          type: integer
        current_power_usage_watts:
          description: The total power consumed by the storage systems in Watts.
          type: number
        system_temperature_celsius:
          description: The average temperature of the storage device in Celsius.
          type: number
        system_temperature_Fahrenheit:
          description: The average temperature of the storage device in Fahrenheit.
          type: number
        power_efficiency:
          format: float
          description: The value of power efficiency is the consumption of total power
            divided by raw capacity bytes of the device.
          type: number
        co2_emission:
          format: float
          description: The point in time value of carbon emission by the storage device
            in kgCO2e/h.
          type: number
        safeguarded_virtual_capacity_bytes:
          description: The virtual capacity that is consumed by all of the Safeguarded
            Copies for a source volume in IBM Storage Virtualize and DS8000.
          type: number
        safeguarded_used_capacity_percentage:
          format: float
          description: The used capacity percentage that is consumed by all of the
            Safeguarded Copies for a source volume in IBM Storage Virtualize and DS8000.
          type: number
        data_collection_type:
          description: "The method that is used to collect metadata about the device.\
            \ For some IBM Storage Virtualize devices, the value can be either Call\
            \ Home with cloud services or Data Collector. For all other devices, the\
            \ value is Data Collector."
          type: string
        wwnn:
          description: The worldwide node name that is assigned to the storage system
          type: string
        encryption:
          description: The encryption status of the storage system.
          type: string
        zhyperlink:
          description: State of the zHyperLink read or write control switch.
          type: string
        frame:
          description: The frame enclosure information of the storage system.
          type: string
        space_allocated_to_vdisks:
          format: int64
          description: Sum of total storage capacity of managed disks assigned to
            volume copies.
          type: integer
        total_used_capacity:
          format: int64
          description: Sum of amount of data stored on all managed disks.
          type: integer
        compression_uncompressed_capacity:
          format: int64
          description: |
            Total uncompressed used capacity for all compressed volume copies in non-data reduction pools
          type: integer
        compression_compressed_capacity:
          format: int64
          description: |
            Total used capacity for all compressed volume copies in non-data reduction pools.
          type: integer
        total_reclaimable_capacity:
          format: int64
          description: 'Unused capacity that will be available after data is reduced. '
          type: integer
        used_capacity_before_reduction:
          format: int64
          description: 'Total amount of data that is written to thin-provisioned and
            compressed volume copies that are in data reduction storage pools - before
            data reduction occurs '
          type: integer
        used_capacity_after_reduction:
          format: int64
          description: 'Unused capacity that will be available after data is reduced. '
          type: integer
        total_vdiskcopy_capacity:
          format: int64
          description: Total provisioned capacity of all volume copies in the cluster.
          type: integer
        total_free_space:
          format: int64
          description: Total free capacity of all the pools in a storage system.
          type: integer
        physical_capacity:
          format: int64
          description: 'Total physical capacity of all standard-provisioned and thin-provisioned
            storage that is managed by the storage system. '
          type: integer
        physical_free_capacity:
          format: int64
          description: 'Total free physical capacity of all standard-provisioned and
            thin-provisioned storage that is managed by the storage system '
          type: integer
        thin_provisioning_ratio:
          description: 'Thin provisioning ratio '
          type: integer
        thin_provisioning_bytes:
          format: int64
          description: Thin provisioning bytes
          type: integer
        thin_provisioning_savings_percent:
          format: float
          description: Thin provisioned savings percent
          type: number
        written_capacity_bytes:
          format: int64
          description: Total written for all FCM arrays in system
          type: integer
        written_snapshots:
          format: int64
          description: Total allocated to snapshots for all FCM arrays in system
          type: integer
        staas:
          type: boolean
      readOnly: true
    StorageSystems:
      description: Get Storage System details for a given Tenant.
      required:
      - tenantId
      - storageType
      - timeStamp
      - storageSystems
      - status
      - message
      - path
      - method
      type: object
      properties:
        tenantId:
          description: Storage Insights Tenant Id.
          type: string
        storageType:
          description: Type of Storage Systems.
          type: string
        timeStamp:
          description: API Response Timestamp in milliseconds.
          type: number
        storageSystems:
          description: List of Storage Systems available for a given Tenant.
          type: array
          items:
            $ref: '#/components/schemas/StorageSystem'
        status:
          format: int32
          description: HTTPS Status Code.
          type: integer
        message:
          description: HTTPS Status Message.
          type: string
        path:
          description: HTTPS URL Path.
          type: string
        method:
          description: HTTPS Method.
          type: string
        total_records:
          format: int32
          description: "total number of records available in the dataset including\
            \ block, file, object storage system"
          type: integer
        totalRecords:
          format: int32
          type: integer
      readOnly: true
    SummarySection:
      description: Get summary information for a given storage system.
      type: object
      properties:
        primary_data_bytes:
          format: int64
          description: The primary data on the device.
          type: integer
        protected_data_bytes:
          format: int64
          description: "The total amount of source data on the device, including replicated\
            \ and non-replicated capacity."
          type: integer
        protected_locally_bytes:
          format: int64
          description: The total amount of source data in a replication relationship.
          type: integer
        protected_synchronous_bytes:
          format: int64
          description: The source data in a synchronous relationship.
          type: integer
        protected_hyper_swap_bytes:
          format: int64
          description: The source data in a HyperSwap relationship.
          type: integer
        protected_asynchronous_bytes:
          format: int64
          description: The source data in an asynchronous relationship.
          type: integer
        primary_synchronous_bytes:
          format: int64
          description: The total amount of source data in a stand-alone Metro Mirror
            relationship.
          type: integer
        primary_synchronous_protected_locally_bytes:
          format: int64
          description: "The volume capacity that is protected by FlashCopy, VDisk\
            \ mirror, or Safeguarded Copy."
          type: integer
        primary_multitarget_synchronous_bytes:
          format: int64
          description: The total amount of source data in a multi-target Metro Mirror
            relationship.
          type: integer
        primary_multitarget_synchronous_protected_locally_bytes:
          format: int64
          description: "The volume capacity that is protected by FlashCopy, VDisk\
            \ mirror, or Safeguarded Copy."
          type: integer
        primary_synchronous_asynchronous_bytes:
          format: int64
          description: The combined source data in a Metro Mirror and Global Copy
            or Global Mirror relationship.
          type: integer
        primary_synchronous_asynchronous_protected_locally_bytes:
          format: int64
          description: "The volume capacity that is protected by FlashCopy, VDisk\
            \ mirror, or Safeguarded Copy."
          type: integer
        primary_asynchronous_bytes:
          format: int64
          description: The total amount of source data in a stand-alone Global Copy
            or Global Mirror relationship.
          type: integer
        primary_asynchronous_protected_locally_bytes:
          format: int64
          description: "The volume capacity that is protected by FlashCopy, VDisk\
            \ mirror, or Safeguarded Copy."
          type: integer
        primary_multitarget_asynchronous_bytes:
          format: int64
          description: The total amount of source data in a multi-target Global Copy
            or Global Mirror relationship.
          type: integer
        primary_multitarget_asynchronous_protected_locally_bytes:
          format: int64
          description: The primary multitarget asynchronous protected locally in bytes.
          type: integer
        not_protected_bytes:
          format: int64
          description: The total amount of source data that is not in a remote replication
            relationship.
          type: integer
        primary_notprotected_protected_locally_bytes:
          format: int64
          description: The primary notprotected protected locally in bytes.
          type: integer
        copies_of_local_data_bytes:
          format: int64
          description: "The total amount of target capacity that is used for storing\
            \ volume backups in flashcopy, VDisk mirror, and safeguarded copy."
          type: integer
        flashcopy_provisioned_capacity_bytes:
          format: int64
          description: Total data capacity that is provisioned for FlashCopy.
          type: integer
        flashcopy_used_capacity_bytes:
          format: int64
          description: The total data capacity that is targeted in a flashCopy relationship.
          type: integer
        flash_copy_bytes:
          format: int64
          description: The flash copy data bytes.
          type: integer
        safeguardcopy_used_capacity_percentage:
          format: float
          description: The total amount of capacity that is used to store volume backups
            that are created by Safeguarded Copy.
          type: number
        vdisk_mirror_bytes:
          format: int64
          description: The vdisk mirror bytes.
          type: integer
        copies_of_remote_data_bytes:
          format: int64
          description: The data that is targeted in a remote replication relationship.
          type: integer
        remote_synchronous_bytes:
          format: int64
          description: The remote synchronous bytes.
          type: integer
        remote_synchronous_protected_locally_bytes:
          format: int64
          description: The remote synchronous protected locally bytes.
          type: integer
        remote_synchronous_cascaded_bytes:
          format: int64
          description: The remote synchronous cascaded bytes.
          type: integer
        remote_synchronous_cascaded_protected_locally_bytes:
          format: int64
          description: The remote synchronous cascaded protected locally bytes.
          type: integer
        remote_asynchronous_bytes:
          format: int64
          description: The remote asynchronous bytes.
          type: integer
        remote_asynchronous_protected_locally_bytes:
          format: int64
          description: The remote asynchronous protected locally bytes.
          type: integer
        remote_asynchronous_cascaded_bytes:
          format: int64
          description: The remote asynchronous cascaded bytes.
          type: integer
        remote_asynchronous_cascaded_protected_locally_bytes:
          format: int64
          description: The remote asynchronous cascaded protected locally bytes.
          type: integer
        synchronous_bytes:
          format: int64
          description: The synchronous bytes.
          type: integer
        hyper_swap_bytes:
          format: int64
          description: The hyper swap bytes.
          type: integer
        asynchronous_bytes:
          format: int64
          description: The asynchronous bytes.
          type: integer
        snapshot_provisioned_capacity_bytes:
          format: int64
          description: The snapshot provisioned capacity bytes.
          type: integer
        snapshot_written_capacity_bytes:
          format: int64
          description: The snapshot written capacity bytes.
          type: integer
      readOnly: true
    SummarySectionsResponse:
      description: Get summary information for a given storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/SummarySection'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Switch:
      description: Get specific switch details for a particular tenant.
      type: object
      properties:
        name:
          description: The name of the switch.
          type: string
        condition:
          description: "The status of a switch. The possible values are Unknown, Unconfigured,\
            \ Normal, Warning Acknowledged, Not Monitored, Unreachable - Acknowledged,\
            \ Error - Acknowledged, Warning and Error."
          type: string
        data_collection:
          description: "The status of a data collection. The possible values are Failed,\
            \ Stopped, Degraded, Running, Successful and Not Monitored."
          type: string
        probe_status:
          description: "The status of a probe. The possible values are Failed, Stopped,\
            \ Never Probed, Warning, Running, Successful and Not Monitored."
          type: string
        performance_monitor_status:
          description: "The status of a performance monitor. The possible values are\
            \ Failed, Stopped, Degraded, Running, Successful and Not Monitored."
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a switch as acknowledged.
          type: string
        domain_id:
          description: The domain id of the switch.
          type: string
        fabric:
          description: The name of the fabric.
          type: string
        principal_switch_fabric:
          description: The principal switch of the fabric.
          type: string
        chassis:
          description: The name of the chassis of the switch.
          type: string
        ports_count:
          format: int32
          description: Count of the ports in the switch.
          type: integer
        connected_ports_count:
          format: int32
          description: Count of the connected ports in the switch.
          type: integer
        links_count:
          format: int32
          description: Count of the links in the switch.
          type: integer
        mode:
          description: The mode of the switch.
          type: string
        vendor:
          description: The vendor of the switch.
          type: string
        model:
          description: The model of the switch.
          type: string
        serial_number:
          description: The serial number of the switch.
          type: string
        firmware:
          description: The name of the firmware of the switch.
          type: string
        wwn:
          description: The worldwide network name of the switch. A WWN is a 64 bit
            string that uniquely identifies a switch.
          type: string
        ip_address:
          description: The ip address of the switch.
          type: string
        last_successful_probe:
          format: int64
          description: Last Successful Probe timestamp in epoch milliseconds.
          type: integer
        last_successful_monitor:
          format: int64
          description: Last Successful Monitor timestamp in epoch milliseconds.
          type: integer
        location:
          description: The physical location of the switch.
          type: string
        custom_tag_1:
          description: Any user-defined text that is associated with the switch.
          type: string
        custom_tag_2:
          description: Any user-defined text that is associated with the switch.
          type: string
        custom_tag_3:
          description: Any user-defined text that is associated with the switch.
          type: string
        system_uuid:
          description: The unique identifier of the storage system associated with
            the switch.
          type: string
        systemId:
          description: The unique identifier of the storage system associated with
            the switch.
          type: string
        natural_key:
          description: The unique identifier of a switch.
          type: string
      readOnly: true
    SwitchFCPort:
      description: Get specific switch FC port details for a particular switch.
      type: object
      properties:
        name:
          description: The name of the fc port.
          type: string
        switch_name:
          description: The name of the switch.
          type: string
        fabric:
          description: The name of the fabric.
          type: string
        blade_slot:
          format: int32
          description: The count of the blade slot.
          type: integer
        port_number:
          format: int32
          description: The count of the port number.
          type: integer
        domain:
          description: "The domain ID of a switch, followed by the port index of a\
            \ switch."
          type: string
        port_index:
          format: int32
          description: The index of the switch fc port.
          type: integer
        status:
          description: "The status of a switch fc port. The possible values are Unknown,\
            \ Unconfigured, Normal, Warning Acknowledged, Unreachable Acknowledged,\
            \ Error Acknowledged, Stopped Acknowledged, Warning and Error."
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a trunk as acknowledged.
          type: string
        port_type:
          description: The type of the switch fc port.
          type: string
        state:
          description: "The state of a switch fc port, such as Unavailable, Disabled,\
            \ Online, and Enabled but offline."
          type: string
        speed_gbps:
          description: The negotiated speed of a switch fc port. Speed in gbps.
          type: integer
        wwpn:
          description: The worldwide port name (WWPN) of a port. A WWPN is the unique
            64-bit identifier for a port in a Fibre Channel fabric..
          type: string
        connection_type:
          description: The connection type of the switch fc port.
          type: string
        connection_port_type:
          description: The connection port type of the switch.
          type: string
        link:
          description: The name of the link of the switch fc port.
          type: string
        natural_key:
          description: The unique identifier of a switch fc port.
          type: string
      readOnly: true
    SwitchFCPortsResponse:
      description: Get switch FC ports details for a particular switch.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/SwitchFCPort'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    SwitchesResponse:
      description: Get switches details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Switch'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    TenantResponse:
      description: Get specific tenant details.
      type: object
      properties:
        name:
          description: The name of the tenant
          type: string
        owner:
          description: The email address of the owner of the tenant
          type: string
        creation_date:
          format: int64
          description: Creation date of the tenant in epoch milliseconds
          type: integer
        trial_end_date:
          format: int64
          description: Trial end date of the tenant in epoch milliseconds
          type: integer
        is_pro:
          description: isPro is set to true if tenant is a pro tenant
          type: boolean
      readOnly: true
    Tier:
      description: Get tier details for a particular tenant.
      type: object
      properties:
        name:
          description: The name of the tier.
          type: string
        tierNumber:
          description: The tier number assign to tier.
          type: string
        used_capacity_percent:
          format: float
          description: The percentage of the capacity in the tier that is used.
          type: number
        capacity_bytes:
          format: int64
          description: The total amount of capacity made available by pools in the
            tier
          type: integer
        used_capacity_bytes:
          format: int64
          description: The amount of capacity that is used by pools in the tier.
          type: integer
        zero_capacity:
          description: The date when the capacity of the tier runs out. This date
            is based on capacity usage trends at the current growth rate for the tier.
          type: string
        weeklyStorageGrowth:
          format: int64
          description: The amount by which the used capacity of the pools in the tier
            has changed over the last seven days.
          type: integer
        average_weekly_storage_growth:
          format: int64
          description: The average amount by which the used capacity of the pools
            in the tier has changed over the last several weeks.
          type: integer
        pools_count:
          format: int32
          description: The number of pools present in the tier
          type: integer
        pools:
          description: List of pools present in the tier
          type: array
          items:
            type: string
      readOnly: true
    TiersResponse:
      description: Get tiers details for a particular tenant.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Tier'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    TopUtilizationResponse:
      description: Get specific component metrics details.
      required:
      - value
      type: object
      properties:
        name:
          description: Name of the system or component.
          type: string
        id:
          description: The identifier of the system or component.
          type: string
        totalMetrics:
          format: int32
          description: Total number of metrics available.
          type: integer
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/MetricsDetails'
        value:
          description: Metric value of the system or component.
          type: object
        systemId:
          description: The unique identifier of the storage system in IBM Storage
            Insights.
          type: string
      readOnly: true
    TopUtilizationsResponse:
      description: Get top utilization
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/TopUtilizationResponse'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        startTimestamp:
          format: int64
          description: Retrieve data starting from the requested start time(Unix Epoch
            timestamp(milliseconds))
          type: integer
        endTimestamp:
          format: int64
          description: Retrieve data to the requested end time((Unix Epoch timestamp(milliseconds)))
          type: integer
        dataResolution:
          description: Data resolution refers to the granularity of the data that
            is requested for performance and capacity metrics
          type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
        systemId:
          description: The unique identifier of the storage system in IBM Storage
            Insights.
          type: string
      readOnly: true
    Trunk:
      description: Get specific trunk details for a particular device.
      type: object
      properties:
        name:
          description: The name of the trunk.
          type: string
        switch_name:
          description: The name of the switch.
          type: string
        status:
          description: "The status of a trunk. The possible values are Unknown, Unconfigured,\
            \ Normal, Warning Acknowledged, Unreachable Acknowledged, Error Acknowledged,\
            \ Warning and Error."
          type: string
        acknowledged:
          description: Shows whether a user marked the status of a trunk as acknowledged.
          type: string
        nominal_speed_gbps:
          description: The trunk inter-switch link nominal speed in gbps.
          type: integer
        links_count:
          format: int32
          description: Count of the links in the trunk.
          type: integer
        connected_switch:
          description: The name of the connected switch in the trunk.
          type: string
        natural_key:
          description: The unique identifier of a trunk.
          type: string
      readOnly: true
    TrunksResponse:
      description: Get trunks details for a particular device.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Trunk'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    UUID:
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    UriBuilder:
      type: object
    Vault:
      description: Get the details of Vaults for a specified application.
      type: object
      properties:
        name:
          description: Name of the Vault.
          type: string
        storage_system:
          description: Storage System of the Vault.
          type: string
        status:
          description: Status of the Vault.
          type: string
        acknowledged:
          description: Specifies whether the user has marked the status of a vault
            as acknowledged.
          type: string
        capacity_quota_percentage:
          description: Capacity quota of the Vault in percentage.
          type: number
        softQuotaBytes:
          description: Soft quota of the Vault in bytes.
          type: number
        hardQuotaBytes:
          description: Hard quota of the Vault in bytes.
          type: number
        sites:
          description: Sites of Vault
          type: integer
        accessPools:
          description: AccessPools of Vault
          type: string
        accessibility:
          description: accessibility of Vault
          type: number
        storagePool:
          description: Storage Pool of Vault
          type: string
        ida:
          description: ida of Vault
          type: string
        driveFailureTolerance:
          description: Drive Failure Tolerance of Vault
          type: integer
        used_capacity_bytes:
          description: Used capacity of Vault in bytes
          type: number
        mirror:
          description: mirrors of the Vault
          type: string
        creationDate:
          description: Creation Data of Vault
          type: string
        lastDataCollection:
          description: Last data collection time for the vault
          type: integer
        natural_key:
          description: Natural key of the Vault
          type: string
      readOnly: true
    VaultsResponse:
      description: Get Vault details for an particular application.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Vault'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    VdiskMirror:
      description: Get the details of all vdisk mirrors for a specified storage system.
      type: object
      properties:
        source_vol:
          allOf:
          - $ref: '#/components/schemas/RelatedVolume'
          - description: The source volume that are assigned to the vdisk mirror.
        target_vol:
          allOf:
          - $ref: '#/components/schemas/RelatedVolume'
          - description: The target volume that are assigned to the vdisk mirror.
        status:
          description: The status of the vdisk mirror.
          type: string
        source_pool:
          description: The name of the source pool of the vdisk mirror.
          type: string
        target_pool:
          description: The name of the target pool of the vdisk mirror.
          type: string
        source_tier:
          description: The name of the source tier of the vdisk mirror.
          type: string
        target_tier:
          description: The name of the target tier of the vdisk mirror.
          type: string
        synchronize:
          description: The name of the target tier of the vdisk mirror.
          type: boolean
        synchronize_rate:
          description: The name of the target tier of the vdisk mirror.
          type: integer
        natural_key:
          description: The unique identifier for the vdisk mirror.
          type: string
      readOnly: true
    VdiskMirrorsResponse:
      description: Get vdisk mirrors details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/VdiskMirror'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Volume:
      description: Get the details of application volumes for a specified application.
      type: object
      properties:
        name:
          description: The name of the volumes.
          type: string
        volser:
          description: Path of the shares
          type: string
        pool:
          description: pool of the volumes.
          type: string
        storage_system:
          description: The name of the storage system
          type: string
        storage_virtual_machine:
          description: The name of the storage virtual machine
          type: string
        status_label:
          description: status of the volumes.
          type: string
        copy_id:
          description: Copy ID of the volumes.
          type: integer
        acknowledged:
          description: Acknowledged state of the volumes.
          type: boolean
        id:
          description: ID of the volumes.
          type: string
        unique_id:
          description: Unique ID of the volumes.
          type: string
        file_system_pool:
          description: File system pool to which the volumes belong.
          type: string
        capacity:
          description: Capacity of the volumes in GiB
          type: integer
        thin_provisioned:
          description: Capacity of the volumes in GiB
          type: string
        used_capacity_per:
          description: Used capacity of the volumes in percentage
          type: number
        threat_detection_timestamp:
          description: Timestamp at which threat was detected for volumes
          type: integer
        used_capacity_bytes:
          description: Used capacity of the volumes in GiB
          type: string
        available_capacity_bytes:
          description: Available capacity of the volumes in GiB
          type: integer
        virtual_volume_id:
          description: Virtual volume ID of the volume
          type: string
        written_capacity_per:
          description: Written capacity of the volumes in percentage
          type: number
        written_capacity_bytes:
          description: Written capacity of the volumes in GiB
          type: integer
        shortfall:
          description: Shortfall of the volumes in percentage.
          type: number
        block_size:
          description: Block size of the volumes.
          type: integer
        raid_level:
          description: Raid level of the volumes.
          type: string
        node:
          description: node of the volumes
          type: string
        io_group:
          description: I/O group of the volumes.
          type: string
        hosts:
          description: Hosts of the volumes.
          type: string
        encryption:
          description: Encryption of the volumes.
          type: string
        format:
          description: Format of the volumes.
          type: string
        lss_or_lcu:
          description: Shortfall of the volumes in percentage.
          type: string
        volume_number:
          description: Volume number for the volume.
          type: integer
        formatted:
          description: formatted of the volumes.
          type: string
        virtual_disk_type:
          description: Virtual disk type of the volumes.
          type: string
        fast_write_state:
          description: Fast write state of the volumes.
          type: string
        vdisk_mirror_copies:
          description: Virtual disk mirror copies for the volumes.
          type: string
        flashcopy:
          description: Flashcopies of the volumes.
          type: string
        copy_service_role:
          description: Copy service role of the volumes.
          type: string
        safeguarded:
          description: Shortfall of the volumes in percentage.
          type: string
        safeguarded_location:
          description: Shortfall of the volumes in percentage.
          type: string
        safeguarded_virtual_capacity_bytes:
          description: Safeguarded virtual capacity of the volume.
          type: integer
        safeguarded_used_capacity:
          description: Safeguarded used capacity of the volume.
          type: number
        safeguarded_capacity_bytes:
          description: Safeguarded capacity of the volume.
          type: string
        storage_virtualizer:
          description: Storage virtualizer for the volume.
          type: string
        virtualizer_disk:
          description: Vitualizer disk for the volume.
          type: string
        deduplicated:
          description: Deduplicated for the volume.
          type: string
        compressed:
          description: Whether the volume is compressed or not.
          type: boolean
        compression_savings:
          description: Compression saving for the volume.
          type: number
        reserved_volume_capacity_bytes:
          description: How much volume capacity is reserved for the volume in GiB.
          type: integer
        grain_size_bytes:
          description: Grain size of the volume in KiB.
          type: integer
        warning_level:
          description: Warning level of the volume in percentage.
          type: number
        auto_expand:
          description: Is auto expand enabled for the volume or not.
          type: boolean
        easy_tier:
          description: Is easy tier ON or not.
          type: string
        easy_tier_status:
          description: What is the easy tier status of the volume.
          type: string
        scm_capacity_bytes:
          description: SCM capacity of the volume in GiB.
          type: integer
        scm_capacity_per:
          description: SCM capacity of the volume in percentage.
          type: number
        tier_0_flash_capacity_bytes:
          description: Tier 0 flash capacity of the volume in GiB.
          type: integer
        tier_0_flash_capacity_per:
          description: Tier 0 flash capacity of the volume in percentage.
          type: number
        tier_1_flash_capacity_bytes:
          description: Tier 1 flash capacity of the volume in GiB.
          type: integer
        tier_1_flash_capacity_per:
          description: Tier 1 flash capacity of the volume in percentage.
          type: number
        tier_2_flash_capacity_bytes:
          description: Tier 2 flash capacity of the volume in GiB.
          type: integer
        tier_2_flash_capacity_per:
          description: Tier 2 flash capacity of the volume in percentage.
          type: number
        enterprise_hdd_capacity_bytes:
          description: Enterprise HDD capacity of a volume in GiB.
          type: integer
        enterprise_hdd_capacity_per:
          description: Enterprise HDD capacity of a volume in percentage.
          type: number
        nearline_hdd_capacity_bytes:
          description: Nearline HDD capacity of the volume in GiB.
          type: integer
        nearline_hdd_capacity_per:
          description: Nearline HDD capacity of the volume in percentage.
          type: number
        tier_distribution:
          description: Tier distribution of the volume in percentage.
          type: number
        snapshots:
          description: Snapshots of the volume.
          type: string
        last_data_collection:
          description: Last data collection time for the volume.
          type: integer
        vdisk_mirror_role:
          description: Vdisk mirror role of the volume.
          type: string
        custom_volume_name:
          description: Custom volume name of the volume.
          type: string
        volume_group:
          description: Volume group to which the volume belongs to.
          type: string
        natural_key:
          description: The unique identifier of the volume
          type: string
        ext_alloc_method:
          description: Extent allocation method of the volume
          type: string
        rg_scope:
          description: Resource group scope of the volume
          type: string
        assigned_aliases:
          format: int32
          description: Assigned aliases of the volume
          type: integer
        data_type:
          description: Resource data type of the volume
          type: string
      readOnly: true
    VolumeDetail:
      required:
      - capacity_bytes
      - tier0_flash_capacity_percent
      - enterprise_hdd_capacity_bytes
      - scm_available_capacity_bytes
      - shortfall_percent
      - nearline_hdd_capacity_percent
      - nearline_hdd_capacity_bytes
      - volume_id
      - used_capacity_bytes
      - hosts
      - pool_name
      - tier1_flash_capacity_percent
      - status_label
      - scm_capacity_percent
      - written_capacity_bytes
      - available_capacity_bytes
      - name
      - used_capacity_percent
      - tier1_flash_capacity_bytes
      - tier0_flash_capacity_bytes
      - thin_provisioned
      - storage_system
      - last_data_collection
      - storage_system_id
      - scm_capacity_bytes
      - reserved_volume_capacity_bytes
      - enterprise_hdd_capacity_percent
      - written_capacity_percent
      - copy_id
      - acknowledged
      - unique_id
      - virtual_volume_id
      - raid_level
      - node
      - io_group
      - encryption
      - formatted
      - virtual_disk_type
      - fast_write_state
      - vdisk_mirror_copies
      - flashcopy
      - copy_service_role
      - safeguarded_location
      - safeguarded
      - safeguarded_virtual_capacity_bytes
      - safeguarded_used_capacity_percentage
      - safeguarded_allocation_capacity_bytes
      - storage_virtualizer
      - virtual_disk
      - deduplicated
      - compressed
      - compression_saving_percent
      - grain_size_bytes
      - volume_group
      - warning_level_percent
      - auto_expand
      - easy_tier
      - easy_tier_status
      - tier_distribution_percent
      - vdisk_mirror_role
      - lss_lcu
      - pool_id
      - block_size
      - volser
      - format
      - format
      - se_copy_count
      - real_capacity
      - snapshots
      type: object
      properties:
        capacity_bytes:
          description: The total amount of storage space that is committed to a volume.
          type: number
        tier0_flash_capacity_percent:
          format: float
          description: The percentage of volume capacity that Easy Tier has placed
            on Tier 0 flash drives.
          type: number
        enterprise_hdd_capacity_bytes:
          description: The amount of volume capacity that Easy Tier has placed on
            Enterprise hard disk drives.
          type: number
        scm_available_capacity_bytes:
          description: The amount of volume capacity that Easy Tier has placed on
            Storage Class Memory (SCM) drives.
          type: number
        shortfall_percent:
          format: float
          description: The difference between the remaining unused volume capacity
            and the available capacity of the pool that the volume is in.
          type: number
        nearline_hdd_capacity_percent:
          format: float
          description: The percentage of volume capacity that Easy Tier placed on
            Nearline hard disk drives.
          type: number
        nearline_hdd_capacity_bytes:
          description: The amount of volume capacity that Easy Tier has placed on
            Nearline hard disk drives.
          type: number
        volume_id:
          description: The identifier for the volume as defined on the storage system.
          type: string
        used_capacity_bytes:
          description: The amount of space that is used by the volume.
          type: number
        hosts:
          description: |-
            The name of the host to which a volume is assigned.
            If more than one host is assigned, the number of hosts is displayed.
          type: string
        pool_name:
          description: The name of the pool that contains the volume from the storage
            system that is mapped to the disk.
          type: string
        tier1_flash_capacity_percent:
          format: float
          description: "The percentage of volume capacity that Easy Tier has placed\
            \ on Tier 1 flash, read-intensive drives."
          type: number
        status_label:
          description: The status of a volume.
          type: string
        scm_capacity_percent:
          format: float
          description: The percentage of volume capacity that Easy Tier has placed
            on Storage Class Memory (SCM) drives.
          type: number
        written_capacity_bytes:
          description: 'The amount of data that is written from the assigned hosts
            to the volume before compression or data deduplication are used to reduce
            the size of the data. '
          type: number
        available_capacity_bytes:
          description: The total amount of remaining space that can be used by the
            volume.
          type: number
        name:
          description: The name or label of the volume
          type: string
        used_capacity_percent:
          format: float
          description: The percentage of the capacity of the volume that is used.
            If -1 then Fully Allocated
          type: number
        tier1_flash_capacity_bytes:
          description: "The amount of volume capacity that Easy Tier has placed on\
            \ Tier 1 flash, read-intensive drives."
          type: number
        tier0_flash_capacity_bytes:
          description: The amount of volume capacity that Easy Tier has placed on
            Tier 0 flash drives.
          type: number
        thin_provisioned:
          description: Shows whether a volume is a thin-provisioned volume.
          type: boolean
        storage_system:
          description: Storage System the volume belongs to.
          type: string
        last_data_collection:
          description: Last DataCollection timestamp.
          type: number
        storage_system_id:
          description: The storage system identifier that volume belong to.
          type: string
        scm_capacity_bytes:
          description: The amount of volume capacity that Easy Tier has placed on
            Storage Class Memory (SCM) drives.
          type: number
        reserved_volume_capacity_bytes:
          description: The amount of pool capacity that is reserved but has not been
            used yet to store data on the thin-provisioned volume.
          type: number
        enterprise_hdd_capacity_percent:
          format: float
          description: The percentage of volume capacity that Easy Tier has placed
            on Enterprise hard disk drives.
          type: number
        written_capacity_percent:
          format: float
          description: The percentage of data that is written from the assigned hosts
            to the volume before compression or data deduplication are used to reduce
            the size of the data.
          type: number
        copy_id:
          format: int32
          description: The identifier for the volume copy.
          type: integer
        acknowledged:
          description: Shows whether a user marked the status of a volume as acknowledged.
          type: boolean
        unique_id:
          description: The ID that is used to uniquely identify a volume across multiple
            storage systems
          type: string
        virtual_volume_id:
          description: Distinctive identifier to differentiate it from other virtual
            volumes.
          type: string
        raid_level:
          description: "The RAID level of a volume, such as RAID 5 and RAID 10."
          type: string
        node:
          description: The name of the node to which a volume is associated.
          type: string
        io_group:
          description: The name of the I/O Group to which a volume is assigned.
          type: string
        encryption:
          description: Whether the volume is encrypted.
          type: string
        formatted:
          description: Shows whether a volume is formatted.
          type: string
        virtual_disk_type:
          description: "The type of virtual disk with which a volume was created,\
            \ such as sequential, striped, image, and many."
          type: string
        fast_write_state:
          description: "Shows the cache state for a volume, such as empty, not empty,\
            \ corrupted, and repairing. ."
          type: string
        vdisk_mirror_copies:
          description: The number of secondary copies (virtual disk copies) for a
            volume.
          type: string
        flashcopy:
          description: "A volume can either be a source(1), target(2), or both a target\
            \ for one copy pair and a source for a different copy pair(3), NONE(4).\
            \ In storage systems, this relationship might be referred to as a FlashCopy."
          type: string
        copy_service_role:
          description: Shows whether a volume is in a replication relationship that
            creates a snapshot or point-in-time copy of the volume on a specified
            target volume.
          type: string
        safeguarded_location:
          description: Shows whether the volume is protected by the Safeguarded Copy
            feature in IBM Storage Virtualize and DS8000.
          type: string
        safeguarded:
          description: The name of the child pool where the Safeguarded Copies are
            kept in IBM Storage Virtualize and DS8000.
          type: string
        safeguarded_virtual_capacity_bytes:
          description: The virtual capacity that is consumed by all of the Safeguarded
            Copies for a source volume in IBM Storage Virtualize and DS8000.
          type: number
        safeguarded_used_capacity_percentage:
          format: float
          description: The used capacity percentage that is consumed by all of the
            Safeguarded Copies for a source volume in IBM Storage Virtualize and DS8000.
          type: number
        safeguarded_allocation_capacity_bytes:
          description: The allocation capacity that is consumed by all of the Safeguarded
            Copies for a source volume in IBM Storage Virtualize and DS8000.
          type: number
        storage_virtualizer:
          description: The name of the storage virtualizer that is managing a volume.
          type: string
        virtual_disk:
          description: The managed disk for the virtualizer that corresponds to a
            volume.
          type: string
        deduplicated:
          description: Shows whether a storage volume is deduplicated.
          type: string
        compressed:
          description: Shows whether a storage volume is compressed.
          type: boolean
        compression_saving_percent:
          format: float
          description: The estimated amount and percentage of capacity that is saved
            by using data compression.
          type: number
        grain_size_bytes:
          description: The grain size with which a thin-provisioned volume was created.
          type: number
        volume_group:
          description: A volume group is a container for managing a set of related
            volumes as a single object.
          type: string
        warning_level_percent:
          format: float
          description: The warning level that was defined when a thin-provisioned
            volume was created.
          type: number
        auto_expand:
          description: Shows whether a thin-provisioned volume automatically expands
            its allocated capacity as more of its space is used.
          type: boolean
        easy_tier:
          description: The Easy Tier value determines whether Easy Tier is enabled
            and the Easy Tier Status determines how tiering is managed.
          type: string
        easy_tier_status:
          description: determines how tiering is managed.
          type: string
        tier_distribution_percent:
          format: float
          description: The Distribution of volume extents across the Easy Tier Drive
            classes
          type: number
        vdisk_mirror_role:
          description: "For mirrored volumes, the mirror role identifies the primary\
            \ and secondary volume copies."
          type: string
        lss_lcu:
          description: "The logical subsystem (LSS) for fixed block volumes, or the\
            \ logical control unit (LCU) for count key data volumes."
          type: string
        pool_id:
          description: The pool id that contains the volume from the storage system
            that is mapped to the disk.
          type: string
        block_size:
          format: int32
          description: The size of the data blocks that are written to disk for DS8000.
          type: integer
        volser:
          description: The volume serial number for DS8000 count-key-data (CKD) volumes
          type: string
        format:
          format: int32
          description: "The format of the volumes that are allocated from a pool,\
            \ such as FB (fixed block) or CKD (count key data)."
          type: string
        natural_key:
          description: Unique Identifier of a volume
          type: string
        ext_alloc_method:
          description: Extent allocation method of the volume
          type: string
        rg_scope:
          description: Resource group scope of the volume
          type: string
        assigned_aliases:
          format: int32
          description: Assigned aliases of the volume
          type: integer
        data_type:
          description: Resource data type of the volume
          type: string
        se_copy_count:
          format: int64
          description: Number of thin-provisioned copies
          type: integer
        real_capacity:
          format: int64
          description: Amount of physical storage that is allocated from a storage
            pool to this volume copy
          type: integer
        snapshots:
          description: Indicates the count of snapshots of the volume
          type: string
    VolumeDetails:
      description: Get Volumes details for a storage system.
      required:
      - tenantID
      - status
      - message
      - path
      - method
      - links
      type: object
      properties:
        tenantID:
          description: Identifier of the tenant
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/VolumeDetail'
        status:
          format: int32
          description: Response status of the API
          type: integer
        message:
          description: Response message of the API
          type: string
        path:
          description: Api Path
          type: string
        method:
          description: HTTP method of the request
          type: string
        links:
          description: Pagination links for the API if there are more than 500 records
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        total_records:
          format: int32
          description: total number of records available in the dataset regardless
            of pagination
          type: integer
        totalRecords:
          format: int32
          type: integer
      readOnly: true
    VolumeGroup:
      description: Get specific storage volume group details for a storage system.
      type: object
      properties:
        current_recovery_point:
          description: The time interval between the production copy and the recovery
            copy i.e. the time by which the recovery copy is behind from the production
            copy in seconds
          type: string
        id:
          description: The unique identifier of the volume group.
          type: string
        last_data_collection:
          format: int64
          description: The timestamp of the last data collection in epoch milliseconds.
          type: integer
        location1_system_name:
          description: The unique identifier of the system in location 1 of the replication
            policy.
          type: string
        location2_system_name:
          description: The unique identifier of the system in location 2 of the replication
            policy.
          type: string
        name:
          description: The name of the volume group.
          type: string
        replication_policy_name:
          description: The name of the replication policy associated with the volume
            group.
          type: string
        replication_state:
          description: "The state of the replication of the volume group like disconnected,\
            \ running, suspended and independent access."
          type: string
        recovery_point_alert:
          description: The RPO alert threshold time (in minutes) for the replication
            policy.
          type: string
        recovery_point_status:
          description: "The status of replication of the volume group. The status\
            \ includes within policy, outside policy, incomplete, and in progress\
            \ of the replication."
          type: string
        safeguarded_backup_policy:
          description: The safeguarded snapshot policy associated with the volume
            group.
          type: string
        snapshots_count:
          format: int32
          description: The count snapshots of the volume group.
          type: integer
        snapshots:
          description: Names of the snapshots in an Volume group.
          type: array
          items:
            type: string
        snapshot_policy:
          description: The snapshot policy associated with the volume group.
          type: string
        snapshot_provisioned_capacity_bytes:
          format: int64
          description: The amount of capacity(in bytes) that is provisioned to store
            all the volume snapshots in the volume group snapshot.
          type: integer
        snapshot_written_capacity_bytes:
          format: int64
          description: The amount of capacity(in bytes) that is written to the snapshot
            of the volumes in a volume group before inline disk compression is applied.
          type: integer
        storage_partition_name:
          description: The name of the storage partition associated with the volume
            group.
          type: string
        topology:
          description: "The organization of the systems and the type of replication\
            \ performed between each location, that is, how the data is replicated\
            \ between the locations."
          type: string
        volumes_count:
          format: int32
          description: The count of volumes which are part of the volume group.
          type: integer
        volumes:
          description: List of the volumes which are part of Volume Group.
          type: array
          items:
            $ref: '#/components/schemas/RelatedVolume'
        natural_key:
          description: The unique identifier of the volume group.
          type: string
        ack:
          description: Ack Status of the volume group.
          type: boolean
        alert_detection_time:
          format: int64
          description: Alert Detection Time in epoch milliseconds.
          type: integer
        status_label:
          description: Status Label
          type: string
      readOnly: true
    VolumeGroupSnapshot:
      description: Get specific storage volume group snapshots details for a storage
        system.
      type: object
      properties:
        name:
          description: The name of the volume groups snapshot.
          type: string
        state:
          description: The state of the volume groups snapshot.
          type: string
        volume_group:
          description: The name of the volume group.
          type: string
        safeguarded:
          description: The volume groups snapshot is to be configured as Safeguarded.
            Safeguarded copy function is a cyber-resiliency feature that creates immutable
            copies of data that cannot be changed or manipulated.
          type: string
        time_created:
          format: int64
          description: Time created timestamp in epoch milliseconds.
          type: integer
        expiring_in:
          description: The volume groups snapshots expiring in.
          type: string
        snapshot_provisioned_capacity_bytes:
          format: int64
          description: The amount of capacity(in bytes) that is provisioned to store
            all the volume snapshots in the volume groups snapshot.
          type: integer
        snapshot_written_capacity_percent:
          format: float
          description: The amount of capacity that is written to the snapshot of the
            volumes in a volume group before inline disk compression is applied.
          type: number
        natural_key:
          description: The unique identifier of the volume groups snapshots.
          type: string
        security_status:
          description: Security Status of volume group snapshot whether it is compromised
            or not
          type: string
        threat_detection_time:
          format: int64
          description: Threat Detection Time in epoch milliseconds.
          type: integer
      readOnly: true
    VolumeGroupsResponse:
      description: Get storage volume groups details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/VolumeGroup'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    VolumeGroupsSnapshotsResponse:
      description: Get storage volume group snapshots details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/VolumeGroupSnapshot'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    VolumeMapping:
      description: Get the details of all volume mappings for a specified storage
        system.
      type: object
      properties:
        host:
          description: The name of the host to which a volume is assigned.
          type: string
        volume:
          description: The name of the volume.
          type: string
        associated_resource:
          description: The name of the server or virtualizer that is associated with
            the volume.
          type: string
        host_type:
          description: The type of host connection as defined on the storage system.
          type: string
        fc_ports_count:
          format: int32
          description: Count of the FC ports that are on the node or module.
          type: integer
        ip_ports_count:
          format: int32
          description: Count of the IP ports that are on the node or module.
          type: integer
        volume_capacity_bytes:
          format: int64
          description: The storage capacity of the volume in bytes.
          type: integer
        used_capacity_bytes:
          format: int64
          description: The used capacity of a volume in bytes.
          type: integer
        thin_provisioned:
          description: "Indicates whether this volume is thin-provisioned, and if\
            \ applicable, the type of thin-provisioning that is used."
          type: string
        pool:
          description: The name of the pool in which this volume is a member.
          type: string
        volume_id:
          description: The identifier of the volume.
          type: string
        encryption:
          description: Whether the volume is encrypted.
          type: string
        volume_group:
          description: The name of the volume group on the DS8000 storage system that
            is associated with the host connection.
          type: string
        natural_key:
          description: The unique identifier of the volume mapping.
          type: string
      readOnly: true
    VolumeMappingsResponse:
      description: Get storage volume mappings details for a storage system.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/VolumeMapping'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    VolumeSnapshot:
      description: Get specific storage volume snapshot details for a storage system.
      required:
      - snapshot_id
      - snapshot_name
      - volume_id
      - volume_name
      - volume_group_id
      - volume_group
      - creation_time
      - expiring_in
      - state
      - safeguarded
      - snapshot_written_capacity_bytes
      - threat_detection_time
      - security_status
      type: object
      properties:
        snapshot_id:
          description: The identifier for the volume snapshot as defined on the storage
            system.
          type: string
        snapshot_name:
          description: The name or label of the volume snapshot as defined on the
            storage system.
          type: string
        volume_id:
          description: The identifier for the volume as defined on the storage system.
          type: string
        volume_name:
          description: The name or label of the volume
          type: string
        volume_group_id:
          description: The identifier for the volume group as defined on the storage
            system.
          type: string
        volume_group:
          description: A volume group is a container for managing a set of related
            volumes as a single object.
          type: string
        creation_time:
          description: Creation timestamp.
          type: number
        expiring_in:
          description: Expiration time.
          type: string
        state:
          description: Shows the state of the snapshot.
          type: string
        safeguarded:
          description: Shows whether the volume is protected by the Safeguarded Copy
            feature in IBM Storage Virtualize and DS8000.
          type: string
        snapshot_written_capacity_bytes:
          description: The snapshot written capacity in bytes of the storage system.
          type: number
        threat_detection_time:
          description: Threat detection timestamp.
          type: number
        security_status:
          description: Shows whether the volume snapshot is compromised.
          type: string
      readOnly: true
    VolumeSnapshotsResponse:
      description: Get storage volume snapshots details for a storage system.
      required:
      - tenantID
      - status
      - message
      - path
      - method
      - links
      type: object
      properties:
        tenantID:
          description: Tenant identifier of the storage system.
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
        status:
          format: int32
          description: Response Status of Api invoked.
          type: integer
        message:
          description: Response message of Api invoked.
          type: string
        path:
          description: Address to access Alert Api.
          type: string
        method:
          description: Request Method to access Alert Api.
          type: string
        links:
          description: Pagination Link for Api if there are more than 500 events.
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        total_records:
          format: int32
          description: total number of records available in the dataset regardless
            of pagination
          type: integer
        totalRecords:
          format: int32
          type: integer
      readOnly: true
    WarrantiesResponse:
      description: Get warranty details for storage devices.
      type: object
      properties:
        tenantId:
          description: The unique identifier of the customer’s IBM Storage Insights
            instance.
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Warranty'
          - description: Response value of invoked API.
        status:
          format: int32
          description: Response status of invoked API.
          type: integer
        message:
          description: Response message of invoked API.
          type: string
        path:
          description: Address to access the API.
          type: string
        links:
          description: "Pagination link for the records, if more than 500 records\
            \ are returned."
          type: object
          properties:
            uri:
              format: uri
              type: string
            uriBuilder:
              $ref: '#/components/schemas/UriBuilder'
            rel:
              type: string
            rels:
              type: array
              items:
                type: string
            title:
              type: string
            type:
              type: string
            params:
              type: object
              additionalProperties:
                type: string
        method:
          description: Request method to invoke the API.
          type: string
        totalRecords:
          format: int32
          description: Total number of records available.
          type: integer
      readOnly: true
    Warranty:
      description: Get Warranty details for storage systems.
      type: object
      properties:
        name:
          description: The name of the device.
          type: string
        systemId:
          description: The system uuid of the device.
          type: string
        serial_number:
          description: The serial number of the device.
          type: string
        device_type:
          description: The type of the device.
          type: string
        earliest_service_expiration:
          description: Specifies for which the earliest expiration occurs
          type: string
        earliest_expiration_date:
          format: int64
          description: Specifies earliest expiration date in epoch milliseconds.
          type: integer
        expired_date:
          format: int64
          description: Specifies expired date in epoch milliseconds.
          type: integer
        modules:
          description: List of modules related to the device
          type: array
          items:
            $ref: '#/components/schemas/WarrantyModule'
      readOnly: true
    WarrantyDetails:
      description: Warranty details of the device
      type: object
      properties:
        warranty_type:
          description: Type of warranty
          type: string
        warranty_expiration:
          format: int64
          description: Warranty expiration timestamp in epoch milliseconds
          type: integer
        response_time:
          description: Response Time of the warranty
          type: string
        coverage:
          description: Coverage of the warranty.
          type: string
        warranty_period:
          format: int32
          description: Duration of warranty
          type: integer
    WarrantyModule:
      description: Modules of the warranty device
      type: object
      properties:
        serial:
          description: serial of the module.
          type: string
        machine_type:
          description: Machine type of the module.
          type: string
        service_type:
          description: service type of the module.
          type: string
        status:
          description: status of the module expiration
          type: string
        expiration_date:
          format: int64
          description: expiration date in epoch milliseconds
          type: integer
        warranty_details:
          description: Warranty details of the module
          type: array
          items:
            $ref: '#/components/schemas/WarrantyDetails'
        software_details:
          description: Software details of the module
          type: array
          items:
            $ref: '#/components/schemas/SoftwareDetails'
        hardware_details:
          description: Hardware details of the module
          type: array
          items:
            $ref: '#/components/schemas/HardwareDetails'
    WorkloadProfile:
      description: Workload profile for given FlashSystem grid
      type: object
      properties:
        current_capacity:
          description: Current Capacity.
          type: integer
        forecasted_growth_rate:
          description: Forecasted Growth Rate.
          type: integer
        total_io_rate:
          description: Total IO Rate.
          type: integer
        read_write_ratio:
          description: Read Write Ratio.
          type: integer
        read_transfer_size:
          description: Read Transfer Size.
          type: integer
        write_transfer_size:
          description: Write Transfer Size.
          type: integer
        latency:
          description: Latency.
          type: integer
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
    api_token:
      type: apiKey
      name: x-api-token
      in: header
